(undo-tree-save-format-version . 1)
"f9461f9f5a2f823fc0950e75cacbcf20aaff27cf"
[nil nil nil nil (25920 58585 182375 796000) 0 nil]
([nil nil ((nil rear-nonsticky nil 605 . 606) (nil fontified nil 605 . 606) (nil fontified nil 601 . 605) (nil fontified nil 600 . 601) (nil fontified nil 599 . 600) (nil fontified nil 598 . 599) (nil fontified nil 574 . 598) (nil fontified nil 561 . 574) (nil fontified nil 557 . 561) (nil fontified nil 556 . 557) (nil fontified nil 555 . 556) (nil fontified nil 554 . 555) (nil fontified nil 534 . 554) (nil fontified nil 522 . 534) (nil fontified nil 521 . 522) (nil fontified nil 517 . 521) (nil fontified nil 516 . 517) (nil fontified nil 515 . 516) (nil fontified nil 514 . 515) (nil fontified nil 502 . 514) (nil fontified nil 501 . 502) (nil fontified nil 489 . 501) (nil fontified nil 485 . 489) (nil fontified nil 484 . 485) (nil fontified nil 483 . 484) (nil fontified nil 482 . 483) (nil fontified nil 469 . 482) (nil fontified nil 456 . 469) (nil fontified nil 452 . 456) (nil fontified nil 451 . 452) (nil fontified nil 450 . 451) (nil fontified nil 449 . 450) (nil fontified nil 425 . 449) (nil fontified nil 412 . 425) (nil fontified nil 408 . 412) (nil fontified nil 407 . 408) (nil fontified nil 406 . 407) (nil fontified nil 405 . 406) (nil fontified nil 392 . 405) (nil fontified nil 379 . 392) (nil fontified nil 375 . 379) (nil fontified nil 374 . 375) (nil fontified nil 373 . 374) (nil fontified nil 372 . 373) (nil fontified nil 360 . 372) (nil fontified nil 347 . 360) (nil fontified nil 346 . 347) (nil fontified nil 345 . 346) (nil fontified nil 325 . 345) (nil fontified nil 324 . 325) (nil fontified nil 323 . 324) (nil fontified nil 312 . 323) (nil fontified nil 311 . 312) (nil fontified nil 307 . 311) (nil fontified nil 306 . 307) (nil fontified nil 305 . 306) (nil fontified nil 304 . 305) (nil fontified nil 298 . 304) (nil fontified nil 289 . 298) (nil fontified nil 285 . 289) (nil fontified nil 284 . 285) (nil fontified nil 283 . 284) (nil fontified nil 268 . 283) (nil fontified nil 259 . 268) (nil fontified nil 255 . 259) (nil fontified nil 254 . 255) (nil fontified nil 253 . 254) (nil fontified nil 252 . 253) (nil fontified nil 244 . 252) (nil fontified nil 235 . 244) (nil fontified nil 231 . 235) (nil fontified nil 230 . 231) (nil fontified nil 229 . 230) (nil fontified nil 228 . 229) (nil fontified nil 214 . 228) (nil fontified nil 205 . 214) (nil fontified nil 204 . 205) (nil fontified nil 203 . 204) (nil fontified nil 179 . 203) (nil fontified nil 178 . 179) (nil fontified nil 177 . 178) (nil fontified nil 170 . 177) (nil fontified nil 153 . 170) (nil fontified nil 151 . 153) (nil fontified nil 150 . 151) (nil fontified nil 106 . 150) (nil fontified nil 104 . 106) (nil fontified nil 94 . 104) (nil fontified nil 88 . 94) (nil fontified nil 75 . 88) (nil fontified nil 71 . 75) (nil fontified nil 67 . 71) (nil fontified nil 61 . 67) (nil fontified nil 56 . 61) (nil fontified nil 50 . 56) (nil fontified nil 45 . 50) (nil fontified nil 41 . 45) (nil fontified nil 38 . 41) (nil fontified nil 32 . 38) (nil fontified nil 20 . 32) (nil fontified nil 16 . 20) (nil fontified nil 7 . 16) (nil fontified nil 1 . 7) (1 . 606) (t 25920 58460 65153 296000)) nil (25920 58585 182372 485000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1650 . 1651) (nil fontified nil 1650 . 1651) (nil fontified nil 1649 . 1650) (nil fontified nil 1648 . 1649) (nil fontified nil 1629 . 1648) (nil fontified nil 1628 . 1629) (nil fontified nil 1619 . 1628) (nil fontified nil 1618 . 1619) (nil fontified nil 1611 . 1618) (nil fontified nil 1583 . 1611) (nil fontified nil 1581 . 1583) (nil fontified nil 1575 . 1581) (nil fontified nil 1574 . 1575) (nil fontified nil 1573 . 1574) (nil fontified nil 1533 . 1573) (nil fontified nil 1532 . 1533) (nil fontified nil 1531 . 1532) (nil fontified nil 1527 . 1531) (nil fontified nil 1510 . 1527) (nil fontified nil 1505 . 1510) (nil fontified nil 1492 . 1505) (nil fontified nil 1491 . 1492) (nil fontified nil 1472 . 1491) (nil fontified nil 1471 . 1472) (nil fontified nil 1466 . 1471) (nil fontified nil 1453 . 1466) (nil fontified nil 1452 . 1453) (nil fontified nil 1441 . 1452) (nil fontified nil 1440 . 1441) (nil fontified nil 1435 . 1440) (nil fontified nil 1422 . 1435) (nil fontified nil 1421 . 1422) (nil fontified nil 1420 . 1421) (nil fontified nil 1414 . 1420) (nil fontified nil 1413 . 1414) (nil fontified nil 1383 . 1413) (nil fontified nil 1382 . 1383) (nil fontified nil 1359 . 1382) (nil fontified nil 1358 . 1359) (nil fontified nil 1357 . 1358) (nil fontified nil 1351 . 1357) (nil fontified nil 1333 . 1351) (nil fontified nil 1332 . 1333) (nil fontified nil 1331 . 1332) (nil fontified nil 1315 . 1331) (nil fontified nil 1311 . 1315) (nil fontified nil 1297 . 1311) (nil fontified nil 1278 . 1297) (nil fontified nil 1256 . 1278) (nil fontified nil 1254 . 1256) (nil fontified nil 1244 . 1254) (nil fontified nil 1238 . 1244) (nil fontified nil 1213 . 1238) (nil fontified nil 1211 . 1213) (nil fontified nil 1205 . 1211) (nil fontified nil 1204 . 1205) (nil fontified nil 1197 . 1204) (nil fontified nil 1196 . 1197) (nil fontified nil 1186 . 1196) (nil fontified nil 1185 . 1186) (nil fontified nil 1176 . 1185) (nil fontified nil 1175 . 1176) (nil fontified nil 1165 . 1175) (nil fontified nil 1163 . 1165) (nil fontified nil 1162 . 1163) (nil fontified nil 1135 . 1162) (nil fontified nil 1134 . 1135) (nil fontified nil 1133 . 1134) (nil fontified nil 1124 . 1133) (nil fontified nil 1119 . 1124) (nil fontified nil 1114 . 1119) (nil fontified nil 1113 . 1114) (nil fontified nil 1112 . 1113) (nil fontified nil 1088 . 1112) (nil fontified nil 1087 . 1088) (nil fontified nil 1086 . 1087) (nil fontified nil 1080 . 1086) (nil fontified nil 1079 . 1080) (nil fontified nil 1078 . 1079) (nil fontified nil 1068 . 1078) (nil fontified nil 1067 . 1068) (nil fontified nil 1042 . 1067) (nil fontified nil 1041 . 1042) (nil fontified nil 1040 . 1041) (nil fontified nil 1035 . 1040) (nil fontified nil 1027 . 1035) (nil fontified nil 1025 . 1027) (nil fontified nil 1024 . 1025) (nil fontified nil 1023 . 1024) (nil fontified nil 1019 . 1023) (nil fontified nil 1007 . 1019) (nil fontified nil 1003 . 1007) (nil fontified nil 997 . 1003) (nil fontified nil 996 . 997) (nil fontified nil 993 . 996) (nil fontified nil 992 . 993) (nil fontified nil 987 . 992) (nil fontified nil 986 . 987) (nil fontified nil 977 . 986) (nil fontified nil 976 . 977) (nil fontified nil 975 . 976) (nil fontified nil 968 . 975) (nil fontified nil 963 . 968) (nil fontified nil 962 . 963) (nil fontified nil 950 . 962) (nil fontified nil 898 . 950) (nil fontified nil 896 . 898) (nil fontified nil 894 . 896) (nil fontified nil 893 . 894) (nil fontified nil 863 . 893) (nil fontified nil 862 . 863) (nil fontified nil 861 . 862) (nil fontified nil 856 . 861) (nil fontified nil 850 . 856) (nil fontified nil 849 . 850) (nil fontified nil 848 . 849) (nil fontified nil 840 . 848) (nil fontified nil 839 . 840) (nil fontified nil 830 . 839) (nil fontified nil 829 . 830) (nil fontified nil 819 . 829) (nil fontified nil 761 . 819) (nil fontified nil 759 . 761) (nil fontified nil 757 . 759) (nil fontified nil 756 . 757) (nil fontified nil 714 . 756) (nil fontified nil 694 . 714) (nil fontified nil 680 . 694) (nil fontified nil 677 . 680) (nil fontified nil 662 . 677) (nil fontified nil 661 . 662) (nil fontified nil 648 . 661) (nil fontified nil 647 . 648) (nil fontified nil 646 . 647) (nil fontified nil 643 . 646) (nil fontified nil 608 . 643) (nil fontified nil 606 . 608) (606 . 1651)) nil (25920 58585 182360 274000) 0 nil])
([nil nil ((605 . 606)) nil (25920 58585 182348 343000) 0 nil])
([nil nil ((apply -2 1612 1653 undo--wrap-and-run-primitive-undo 1612 1653 ((1612 . 1614) 1651))) nil (25920 58676 831724 597000) 0 nil])
([nil nil ((1575 . 1588) (t 25920 58585 175099 734000) 1574) nil (25920 58740 459846 994000) 0 nil] [nil nil ((#("me}!')" 0 2 (fontified t) 2 3 (fontified t face (rainbow-delimiters-unmatched-face)) 3 4 (fontified t) 4 5 (fontified t face font-lock-string-face) 5 6 (fontified t face font-lock-string-face)) . -895) (undo-tree-id0 . -6) (undo-tree-id1 . -6) (undo-tree-id2 . -6) (undo-tree-id3 . -6) (undo-tree-id4 . -6) (undo-tree-id5 . -6) (undo-tree-id6 . -6) (undo-tree-id7 . -5) (undo-tree-id8 . -4) (undo-tree-id9 . -3) (undo-tree-id10 . -2) (undo-tree-id11 . -6) (undo-tree-id12 . -6) (undo-tree-id13 . -6) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -3) (undo-tree-id17 . -2) (undo-tree-id18 . -3) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -6) (undo-tree-id22 . -6) (undo-tree-id23 . -6) (undo-tree-id24 . -6) (undo-tree-id25 . -6) (undo-tree-id26 . -6) 901 (#(" A command that responds with a personalized message
@bot.command(name='hello')
async def hello(ctx):
    with app.app_context():
        sched = Schedule.query.filter_by(player_id=1).first()
        sched.printWeek()
    await ctx.send(f'Hello, {ctx.author.na" 0 1 (fontified t) 1 25 (fontified t) 25 29 (fontified t face font-lock-keyword-face) 29 53 (fontified t) 53 65 (fontified t face py-decorators-face) 65 66 (fontified t face (rainbow-delimiters-depth-1-face)) 66 71 (fontified t) 71 78 (fontified t face font-lock-string-face) 78 79 (fontified t face (rainbow-delimiters-depth-1-face)) 79 80 (fontified t) 80 89 (fontified t face py-def-class-face) 89 90 (fontified t) 90 95 (fontified t face py-def-face) 95 96 (fontified t face (rainbow-delimiters-depth-1-face)) 96 99 (fontified t) 99 100 (fontified t face (rainbow-delimiters-depth-1-face)) 100 106 (fontified t) 106 110 (fontified t face font-lock-keyword-face) 110 122 (fontified t) 122 126 (fontified t) 126 127 (fontified t face (rainbow-delimiters-depth-1-face)) 127 128 (fontified t face (rainbow-delimiters-depth-1-face)) 128 130 (fontified t) 130 138 (fontified t) 138 143 (fontified t face py-variable-name-face) 143 144 (fontified t) 144 145 (fontified t face font-lock-operator-face) 145 170 (fontified t) 170 171 (fontified t face (rainbow-delimiters-depth-1-face)) 171 181 (fontified t) 181 182 (fontified t face py-number-face) 182 183 (fontified t face (rainbow-delimiters-depth-1-face)) 183 189 (fontified t) 189 190 (fontified t face (rainbow-delimiters-depth-1-face)) 190 191 (fontified t face (rainbow-delimiters-depth-1-face)) 191 209 (fontified t) 209 215 (fontified t) 215 216 (fontified t face (rainbow-delimiters-depth-1-face)) 216 217 (fontified t face (rainbow-delimiters-depth-1-face)) 217 218 (fontified t) 218 222 (fontified t) 222 227 (fontified t face font-lock-keyword-face) 227 236 (fontified t) 236 237 (fontified t face (rainbow-delimiters-depth-1-face)) 237 238 (fontified t) 238 260 (fontified t face font-lock-string-face)) . -895) (undo-tree-id27 . -260) (undo-tree-id28 . -260) (undo-tree-id29 . -217) (undo-tree-id30 . -163) (undo-tree-id31 . -160) (undo-tree-id32 . -129) (undo-tree-id33 . -125) (undo-tree-id34 . -121) (undo-tree-id35 . -96) (undo-tree-id36 . -92) (undo-tree-id37 . -62) (undo-tree-id38 . -59) (undo-tree-id39 . -2) (undo-tree-id40 . -1) (undo-tree-id41 . -2) (undo-tree-id42 . -3) (undo-tree-id43 . -10) (undo-tree-id44 . -11) (undo-tree-id45 . -15) (undo-tree-id46 . -16) (undo-tree-id47 . -24) (undo-tree-id48 . -25) (undo-tree-id49 . -29) (undo-tree-id50 . -32) (undo-tree-id51 . -44) (undo-tree-id52 . -30) (undo-tree-id53 . -31) (undo-tree-id54 . -1) (undo-tree-id55 . -2) (undo-tree-id56 . -1) (undo-tree-id57 . -2) (undo-tree-id58 . -3) (undo-tree-id59 . -10) (undo-tree-id60 . -3) (undo-tree-id61 . -10) (undo-tree-id62 . -11) (undo-tree-id63 . -15) (undo-tree-id64 . -11) (undo-tree-id65 . -15) (undo-tree-id66 . -16) (undo-tree-id67 . -24) (undo-tree-id68 . -16) (undo-tree-id69 . -24) (undo-tree-id70 . -206) (undo-tree-id71 . -215) (undo-tree-id72 . -260) (undo-tree-id73 . -52) (undo-tree-id74 . -52) (undo-tree-id75 . -52) (undo-tree-id76 . -52) (undo-tree-id77 . -79) (undo-tree-id78 . -79) (undo-tree-id79 . -79) (undo-tree-id80 . -101) (undo-tree-id81 . -101) (undo-tree-id82 . -101) (undo-tree-id83 . -129) (undo-tree-id84 . -129) (undo-tree-id85 . -129) (undo-tree-id86 . -172) (undo-tree-id87 . -172) (undo-tree-id88 . -172) (undo-tree-id89 . -217) (undo-tree-id90 . -217) (undo-tree-id91 . -217) (undo-tree-id92 . -218) (undo-tree-id93 . -260) (undo-tree-id94 . -260) (undo-tree-id95 . -260) (undo-tree-id96 . -66) (undo-tree-id97 . -70) (undo-tree-id98 . -258) (undo-tree-id99 . -260) 1155 (#("
" 0 1 (fontified t)) . -895) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (#("=" 0 1 (fontified t)) . -896) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) 897 (896 . 897) (#("
" 0 1 (fontified t)) . -896) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) 897 (#("#" 0 1 (fontified t face font-lock-comment-delimiter-face)) . 897) (t 25920 58585 175099 734000)) ((896 . 898) (#("=" 0 1 (fontified nil)) . 896) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (895 . 897) (895 . 1155) (895 . 901)) (25920 58676 829334 76000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1584) (undo-tree-id218 . -4) (undo-tree-id219 . -4) (undo-tree-id220 . -4) (undo-tree-id221 . -4) (undo-tree-id222 . -4) (undo-tree-id223 . -4) (undo-tree-id224 . -4) (undo-tree-id225 . -4) (undo-tree-id226 . -4) (undo-tree-id227 . -4) (undo-tree-id228 . -4) (undo-tree-id229 . -4) 1588) nil (25920 58740 459845 812000) 0 nil])
nil
([nil nil ((#("    " 0 4 (fontified t)) . 1580) (undo-tree-id198 . -4) (undo-tree-id199 . -4) (undo-tree-id200 . -4) (undo-tree-id201 . -4) (undo-tree-id202 . -4) (undo-tree-id203 . -4) (undo-tree-id204 . -4) (undo-tree-id205 . -4) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -4) (undo-tree-id212 . -4) (undo-tree-id213 . -4) (undo-tree-id214 . -4) (undo-tree-id215 . -4) (undo-tree-id216 . -4) (undo-tree-id217 . -4) 1584) nil (25920 58740 459840 371000) 0 nil])
([nil nil ((1580 . 1593)) nil (25920 58740 459832 158000) 0 nil])
([nil nil ((1590 . 1606) (#("pr" 0 2 (fontified nil)) . -1590) (1590 . 1592) (#("process_commands" 0 16 (fontified nil)) . -1590) (1590 . 1606) (#("pro" 0 3 (fontified t)) . -1590) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -3) (undo-tree-id193 . -3) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -3) (undo-tree-id197 . -3) 1593) nil (25920 58740 459829 446000) 0 nil])
([nil nil ((1606 . 1615)) nil (25920 58740 459803 266000) 0 nil])
([nil nil ((1115 . 1124) (t 25920 58740 455027 659000)) nil (25920 59087 62070 667000) 0 nil])
([nil nil ((1124 . 1136)) nil (25920 59087 62066 532000) 0 nil])
([nil nil ((118 . 127) (110 . 118) (#("co" 0 2 (fontified nil)) . -110) (110 . 112) (#("commands" 0 8 (fontified nil)) . -110) (110 . 118) (#("com" 0 3 (fontified t)) . -110) (undo-tree-id297 . -3) (undo-tree-id298 . -1) (undo-tree-id299 . -2) (undo-tree-id300 . -3) (undo-tree-id301 . -3) 113 (104 . 113) (103 . 104) (apply -16 897 1201 undo--wrap-and-run-primitive-undo 897 1201 ((1151 . 1153) (1128 . 1130) (1100 . 1102) (1036 . 1038) (1006 . 1008) (982 . 984) (953 . 955) (897 . 899))) (t 25920 59087 54872 634000)) nil (25920 59271 126098 321000) 0 nil])
([nil nil ((#("from .commands import *" 0 4 (fontified t face py-import-from-face) 4 6 (fontified t) 6 15 (match-data (0 3 0 1 1 2 2 3) fontified t) 15 21 (match-data (0 3 0 1 1 2 2 3) fontified t face py-import-from-face) 21 23 (match-data (0 3 0 1 1 2 2 3) fontified t)) . 104) (undo-tree-id230 . -23) (undo-tree-id231 . 23) (undo-tree-id232 . -1) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -3) (undo-tree-id236 . -3) (undo-tree-id237 . -4) (undo-tree-id238 . -4) (undo-tree-id239 . -5) (undo-tree-id240 . -5) (undo-tree-id241 . -5) (undo-tree-id242 . -5) (undo-tree-id243 . -5) (undo-tree-id244 . -5) (undo-tree-id245 . -5) (undo-tree-id246 . -5) (undo-tree-id247 . -6) (undo-tree-id248 . -6) (undo-tree-id249 . -6) (undo-tree-id250 . -6) (undo-tree-id251 . -6) (undo-tree-id252 . -6) (undo-tree-id253 . -6) (undo-tree-id254 . -14) (undo-tree-id255 . -14) (undo-tree-id256 . -14) (undo-tree-id257 . -14) (undo-tree-id258 . -14) (undo-tree-id259 . -14) (undo-tree-id260 . -14) (undo-tree-id261 . -14) (undo-tree-id262 . -14) (undo-tree-id263 . -14) (undo-tree-id264 . -15) (undo-tree-id265 . -15) (undo-tree-id266 . -15) (undo-tree-id267 . -16) (undo-tree-id268 . -17) (undo-tree-id269 . -17) (undo-tree-id270 . -18) (undo-tree-id271 . -18) (undo-tree-id272 . -19) (undo-tree-id273 . -19) (undo-tree-id274 . -20) (undo-tree-id275 . -21) (undo-tree-id276 . -22) (undo-tree-id277 . -22) (undo-tree-id278 . -22) (undo-tree-id279 . -22) (undo-tree-id280 . -22) (undo-tree-id281 . -22) (undo-tree-id282 . -22) (undo-tree-id283 . -22) (undo-tree-id284 . -22) (undo-tree-id285 . -22) (undo-tree-id286 . -23) (undo-tree-id287 . -23) (undo-tree-id288 . -23) (undo-tree-id289 . -23) (undo-tree-id290 . -23) (undo-tree-id291 . -23) (undo-tree-id292 . -23) (undo-tree-id293 . -23) (undo-tree-id294 . -23) (undo-tree-id295 . -23) (undo-tree-id296 . -22)) nil (25920 59271 126090 533000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1681 . 1682) (nil fontified nil 1659 . 1682) (1659 . 1682)) nil (25920 59271 124468 328000) 0 nil])
([nil nil ((#("if message.channel.name == \"bots\":
        if message.author.id != 1168641939873202196:
            with app.app_context():
                player = Player.query.filter_by(discord_id = message.author.id).first()
            print(player.name)
            print(message.author.name)
            await message.channel.send(f\"Hey , did you say '{message.content}'?\")
" 0 2 (fontified t face font-lock-keyword-face) 2 27 (fontified t) 27 33 (fontified t face font-lock-string-face) 33 43 (fontified t) 43 45 (fontified t face font-lock-keyword-face) 45 67 (fontified t) 67 86 (fontified t face py-number-face) 86 100 (fontified t) 100 104 (fontified t face font-lock-keyword-face) 104 120 (fontified t) 120 121 (fontified t face (rainbow-delimiters-depth-1-face)) 121 122 (fontified t face (rainbow-delimiters-depth-1-face)) 122 140 (fontified t) 140 146 (fontified t face py-variable-name-face) 146 147 (fontified t) 147 148 (fontified t face font-lock-operator-face) 148 171 (fontified t) 171 172 (fontified t face (rainbow-delimiters-depth-1-face)) 172 202 (fontified t) 202 203 (fontified t face (rainbow-delimiters-depth-1-face)) 203 209 (fontified t) 209 210 (fontified t face (rainbow-delimiters-depth-1-face)) 210 211 (fontified t face (rainbow-delimiters-depth-1-face)) 211 224 (fontified t) 224 229 (fontified t face py-builtins-face) 229 230 (fontified t face (rainbow-delimiters-depth-1-face)) 230 239 (fontified t) 239 241 (fontified t) 241 242 (fontified t face (rainbow-delimiters-depth-1-face)) 242 243 (fontified t) 243 255 (fontified t) 255 260 (fontified t face py-builtins-face) 260 261 (fontified t face (rainbow-delimiters-depth-1-face)) 261 280 (fontified t) 280 281 (fontified t face (rainbow-delimiters-depth-1-face)) 281 282 (fontified t) 282 294 (fontified t) 294 299 (fontified t face font-lock-keyword-face) 299 316 (fontified t) 316 320 (fontified t) 320 321 (fontified t face (rainbow-delimiters-depth-1-face)) 321 322 (fontified t) 322 342 (fontified t face font-lock-string-face) 342 343 (fontified t face font-lock-string-face) 343 358 (fontified t face font-lock-string-face) 358 359 (fontified t face font-lock-string-face) 359 362 (fontified t face font-lock-string-face) 362 363 (fontified t face (rainbow-delimiters-depth-1-face)) 363 364 (fontified t)) . 1250) (undo-tree-id416 . -364) (undo-tree-id417 . -363) (undo-tree-id418 . -363) (undo-tree-id419 . -363) (undo-tree-id420 . -363) (undo-tree-id421 . -363) (undo-tree-id422 . -364) (undo-tree-id423 . -363) (undo-tree-id424 . -363) (undo-tree-id425 . -363) (undo-tree-id426 . -363) (undo-tree-id427 . -295) (undo-tree-id428 . -224) (undo-tree-id429 . -211) (undo-tree-id430 . -134) (undo-tree-id431 . -133) (undo-tree-id432 . -132) (undo-tree-id433 . -131) (undo-tree-id434 . -94) (undo-tree-id435 . -93) (undo-tree-id436 . -237) (undo-tree-id437 . -241) (t 25920 59271 114790 781000)) nil (25920 60187 630688 284000) 0 nil])
([nil nil ((1246 . 1250) (#("        " 0 4 (fontified t) 4 8 (fontified t)) . -1246) (undo-tree-id376 . -4) (undo-tree-id377 . -4) (undo-tree-id378 . -4) (undo-tree-id379 . -4) (undo-tree-id380 . -4) (undo-tree-id381 . 3) (undo-tree-id382 . -4) (undo-tree-id383 . -4) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (undo-tree-id386 . -4) (undo-tree-id387 . -4) (undo-tree-id388 . -4) (undo-tree-id389 . -4) (undo-tree-id390 . -4) (undo-tree-id391 . -4) (undo-tree-id392 . -4) (undo-tree-id393 . -4) (undo-tree-id394 . -4) (undo-tree-id395 . -4) (undo-tree-id396 . -4) (undo-tree-id397 . -4) (undo-tree-id398 . -4) (undo-tree-id399 . -4) (undo-tree-id400 . -4) (undo-tree-id401 . -4) (undo-tree-id402 . -4) (undo-tree-id403 . -4) (undo-tree-id404 . -4) (undo-tree-id405 . -4) (undo-tree-id406 . -4) (undo-tree-id407 . -4) (undo-tree-id408 . -4) (undo-tree-id409 . -4) (undo-tree-id410 . -4) (undo-tree-id411 . -4) (undo-tree-id412 . -4) (undo-tree-id413 . -4) (undo-tree-id414 . -4) (undo-tree-id415 . -4) 1250) nil (25920 60187 630678 593000) 0 nil])
([nil nil ((413 . 414) 412) nil (25920 60187 630661 322000) 0 nil])
([nil nil ((414 . 417)) nil (25920 60187 630660 413000) 0 nil])
([nil nil ((414 . 425) (#("per" 0 3 (fontified nil)) . -414) (414 . 417) (#("permissions" 0 11 (fontified nil)) . -414) (414 . 425) (#("per" 0 3 (fontified t)) . -414) (undo-tree-id362 . -3) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -2) (undo-tree-id367 . -2) (undo-tree-id368 . -2) (undo-tree-id369 . -3) (undo-tree-id370 . -3) (undo-tree-id371 . -3) (undo-tree-id372 . -3) (undo-tree-id373 . -3) (undo-tree-id374 . -3) (undo-tree-id375 . -3) 417) nil (25920 60187 630657 155000) 0 nil])
([nil nil ((425 . 427)) nil (25920 60187 629869 117000) 0 nil])
([nil nil ((#("u" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -426) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) 427) nil (25920 60187 629868 342000) 0 nil])
([nil nil ((426 . 427)) nil (25920 60187 629864 735000) 0 nil])
([nil nil ((427 . 429)) nil (25920 60187 629864 229000) 0 nil])
([nil nil ((#("e" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -426) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (#("m" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -427) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (#("o" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -428) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) 429) nil (25920 60187 629862 503000) 0 nil])
([nil nil ((426 . 428)) nil (25920 60187 629849 89000) 0 nil])
([nil nil ((428 . 429)) nil (25920 60187 629848 598000) 0 nil])
([nil nil ((426 . 439) (#("re" 0 2 (fontified nil)) . -426) (426 . 428) (#("add_reactions" 0 13 (fontified nil)) . -426) (426 . 439) (#("rea" 0 3 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -426) (undo-tree-id302 . -3) (undo-tree-id303 . -3) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -2) (undo-tree-id307 . -2) (undo-tree-id308 . -3) (undo-tree-id309 . -3) (undo-tree-id310 . -3) (undo-tree-id311 . -3) (undo-tree-id312 . -3) (undo-tree-id313 . -3) 429) nil (25920 60187 629846 622000) 0 nil])
([nil nil ((439 . 446)) nil (25920 60187 629828 403000) 0 nil])
([nil nil ((1278 . 1283) (t 25920 60187 624388 124000)) nil (25920 60419 192513 574000) 0 nil])
([nil nil ((1283 . 1304)) nil (25920 60419 192512 771000) 0 nil])
([nil nil ((1304 . 1307)) nil (25920 60419 192512 367000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1324 . 1325) (nil fontified nil 1307 . 1325) (1307 . 1325)) nil (25920 60419 192511 794000) 0 nil])
([nil nil ((1325 . 1326)) nil (25920 60419 192511 31000) 0 nil])
([nil nil ((1326 . 1335)) nil (25920 60419 192510 645000) 0 nil])
([nil nil ((1335 . 1356)) nil (25920 60419 192510 248000) 0 nil])
([nil nil ((1356 . 1363)) nil (25920 60419 192509 849000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1363 . 1364) (nil fontified nil 1363 . 1364) (1363 . 1364)) nil (25920 60419 192509 305000) 0 nil])
([nil nil ((1364 . 1366)) nil (25920 60419 192508 566000) 0 nil])
([nil nil ((1366 . 1375)) nil (25920 60419 192507 981000) 0 nil])
([nil nil ((#("👍" 0 1 (fontified t rear-nonsticky t face font-lock-string-face)) . -1363) (undo-tree-id992 . -1) (undo-tree-id993 . -1) (undo-tree-id994 . -1) (undo-tree-id995 . -1) (undo-tree-id996 . -1) (undo-tree-id997 . -1) (undo-tree-id998 . -1) (undo-tree-id999 . -1) (undo-tree-id1000 . -1) (undo-tree-id1001 . -1) (undo-tree-id1002 . -1) (undo-tree-id1003 . -1) (undo-tree-id1004 . -1) (undo-tree-id1005 . -1) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) 1364) nil (25920 60419 192506 896000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -1362) (undo-tree-id945 . -1) (undo-tree-id946 . -1) (undo-tree-id947 . -1) (undo-tree-id948 . -1) (undo-tree-id949 . -1) (undo-tree-id950 . -1) (undo-tree-id951 . -1) (undo-tree-id952 . -1) (undo-tree-id953 . -1) (undo-tree-id954 . -1) (undo-tree-id955 . -1) (undo-tree-id956 . -1) (undo-tree-id957 . -1) (undo-tree-id958 . -1) (undo-tree-id959 . -1) (undo-tree-id960 . -1) (undo-tree-id961 . -1) (undo-tree-id962 . -1) (undo-tree-id963 . -1) (undo-tree-id964 . -1) (undo-tree-id965 . -1) (undo-tree-id966 . -1) (undo-tree-id967 . -1) (undo-tree-id968 . -1) (undo-tree-id969 . -1) (undo-tree-id970 . -1) (undo-tree-id971 . -1) (undo-tree-id972 . -1) (undo-tree-id973 . -1) (undo-tree-id974 . -1) (undo-tree-id975 . -1) (undo-tree-id976 . -1) (undo-tree-id977 . -1) (undo-tree-id978 . -1) (undo-tree-id979 . -1) (undo-tree-id980 . -1) (undo-tree-id981 . -1) (undo-tree-id982 . -1) (undo-tree-id983 . -1) (undo-tree-id984 . -1) (undo-tree-id985 . -1) (undo-tree-id986 . -1) (undo-tree-id987 . -1) (undo-tree-id988 . -1) (undo-tree-id989 . -1) (undo-tree-id990 . -1) (undo-tree-id991 . -1) 1363) nil (25920 60419 192496 866000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . 1362) (undo-tree-id944 . -1)) nil (25920 60419 192476 366000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1364 . 1365) (nil fontified nil 1362 . 1365) (1362 . 1365)) nil (25920 60419 192475 292000) 0 nil])
([nil nil ((#("👍" 0 1 (fontified t face font-lock-string-face)) . -1363) (undo-tree-id931 . -1) (undo-tree-id932 . -1) (undo-tree-id933 . -1) (undo-tree-id934 . -1) (undo-tree-id935 . -1) (undo-tree-id936 . -1) (undo-tree-id937 . -1) (undo-tree-id938 . -1) (undo-tree-id939 . -1) (undo-tree-id940 . -1) (undo-tree-id941 . -1) (undo-tree-id942 . -1) (undo-tree-id943 . -1) 1364) nil (25920 60419 192473 769000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . -1362) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) (undo-tree-id919 . -1) (undo-tree-id920 . -1) (undo-tree-id921 . -1) (undo-tree-id922 . -1) (undo-tree-id923 . -1) (undo-tree-id924 . -1) (undo-tree-id925 . -1) (undo-tree-id926 . -1) (undo-tree-id927 . -1) (undo-tree-id928 . -1) (undo-tree-id929 . -1) (undo-tree-id930 . -1) 1363) nil (25920 60419 192467 9000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t rear-nonsticky t face font-lock-string-face)) . 1362) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1)) nil (25920 60419 192454 701000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1368) (undo-tree-id849 . -4) (undo-tree-id850 . -4) (undo-tree-id851 . -4) (undo-tree-id852 . -4) (undo-tree-id853 . -4) (undo-tree-id854 . -4) (undo-tree-id855 . -4) (undo-tree-id856 . -4) (undo-tree-id857 . -4) (undo-tree-id858 . -4) (undo-tree-id859 . -4) (undo-tree-id860 . -4) (undo-tree-id861 . -4) (undo-tree-id862 . -4) (undo-tree-id863 . -4) (undo-tree-id864 . -4) (undo-tree-id865 . -4) (undo-tree-id866 . -4) (undo-tree-id867 . -4) (undo-tree-id868 . -4) (undo-tree-id869 . -4) (undo-tree-id870 . -4) (undo-tree-id871 . -4) (undo-tree-id872 . -4) (undo-tree-id873 . -4) (undo-tree-id874 . -4) (undo-tree-id875 . -4) (undo-tree-id876 . -4) (undo-tree-id877 . -4) (undo-tree-id878 . -4) (undo-tree-id879 . -4) (undo-tree-id880 . -4) (undo-tree-id881 . -4) (undo-tree-id882 . -4) (undo-tree-id883 . -4) (undo-tree-id884 . -4) (undo-tree-id885 . -4) (undo-tree-id886 . -4) (undo-tree-id887 . -4) (undo-tree-id888 . -4) (undo-tree-id889 . -4) (undo-tree-id890 . -4) (undo-tree-id891 . -4) (undo-tree-id892 . -4) (undo-tree-id893 . -4) 1372) nil (25920 60419 192443 699000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -1364) (undo-tree-id796 . -4) (undo-tree-id797 . -4) (undo-tree-id798 . -4) (undo-tree-id799 . -4) (undo-tree-id800 . -4) (undo-tree-id801 . -4) (undo-tree-id802 . -4) (undo-tree-id803 . -4) (undo-tree-id804 . -4) (undo-tree-id805 . -4) (undo-tree-id806 . -4) (undo-tree-id807 . -4) (undo-tree-id808 . -4) (undo-tree-id809 . -4) (undo-tree-id810 . -4) (undo-tree-id811 . -4) (undo-tree-id812 . -4) (undo-tree-id813 . -4) (undo-tree-id814 . -4) (undo-tree-id815 . -4) (undo-tree-id816 . -4) (undo-tree-id817 . -4) (undo-tree-id818 . -4) (undo-tree-id819 . -4) (undo-tree-id820 . -4) (undo-tree-id821 . -4) (undo-tree-id822 . -4) (undo-tree-id823 . -4) (undo-tree-id824 . -4) (undo-tree-id825 . -4) (undo-tree-id826 . -4) (undo-tree-id827 . -4) (undo-tree-id828 . -4) (undo-tree-id829 . -4) (undo-tree-id830 . -4) (undo-tree-id831 . -4) (undo-tree-id832 . -4) (undo-tree-id833 . -4) (undo-tree-id834 . -4) (undo-tree-id835 . -4) (undo-tree-id836 . -4) (undo-tree-id837 . -4) (undo-tree-id838 . -4) (undo-tree-id839 . -4) (undo-tree-id840 . -4) (undo-tree-id841 . -4) (undo-tree-id842 . -4) (undo-tree-id843 . -4) (undo-tree-id844 . -4) (undo-tree-id845 . -4) (undo-tree-id846 . -4) (undo-tree-id847 . -4) (undo-tree-id848 . -4) 1368) nil (25920 60419 192287 590000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1364) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . 1) (undo-tree-id794 . -1) (undo-tree-id795 . -1)) nil (25920 60419 192258 555000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1364 . 1365) (nil fontified nil 1362 . 1365) (1362 . 1365)) nil (25920 60419 192240 631000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t rear-nonsticky t face font-lock-string-face)) . -1364) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) 1365) nil (25920 60419 192239 571000) 0 nil])
([nil nil ((1364 . 1365)) nil (25920 60419 192234 267000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -1361) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) 1362) nil (25920 60419 192230 46000) 0 nil])
([nil nil ((#("'" 0 1 (fontified t face font-lock-string-face)) . 1361) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1)) nil (25920 60419 192075 180000) 0 nil])
([nil nil ((1361 . 1363)) nil (25920 60419 192072 591000) 0 nil])
([nil nil ((#("\"" 0 1 (fontified t face font-lock-string-face)) . -1362) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (#("👍" 0 1 (fontified t face font-lock-string-face)) . -1363) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . 1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (#("\"" 0 1 (fontified t face font-lock-string-face)) . -1364) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) 1365) nil (25920 60419 192065 105000) 0 nil])
([nil nil ((1362 . 1375)) nil (25920 60419 189104 488000) 0 nil])
([nil nil ((#("            " 0 12 (fontified t)) . 1363) (undo-tree-id498 . -12) (undo-tree-id499 . -12) (undo-tree-id500 . -12) (undo-tree-id501 . -12) (undo-tree-id502 . -12) (undo-tree-id503 . -12) (undo-tree-id504 . -12) (undo-tree-id505 . -12) (undo-tree-id506 . -12) (undo-tree-id507 . -12) (undo-tree-id508 . -12) (undo-tree-id509 . -12) (undo-tree-id510 . -12) (undo-tree-id511 . -12)) nil (25920 60419 189103 497000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1362) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) 1363) nil (25920 60419 189097 709000) 0 nil])
([nil nil ((1326 . 1335)) nil (25920 60419 189087 502000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1402 . 1403) (nil fontified nil 1335 . 1403) (1335 . 1403)) nil (25920 60419 189086 884000) 0 nil])
([nil nil ((#("my_custom_emoji" 0 15 (fontified t face font-lock-string-face)) . -1386) (undo-tree-id452 . -15) (undo-tree-id453 . -15) (undo-tree-id454 . -5) (undo-tree-id455 . -5) (undo-tree-id456 . -5) (undo-tree-id457 . -5) (undo-tree-id458 . -5) (undo-tree-id459 . -15) (undo-tree-id460 . -15) (undo-tree-id461 . -15) (undo-tree-id462 . -15) (undo-tree-id463 . -15) (undo-tree-id464 . -15) (undo-tree-id465 . -15) (undo-tree-id466 . -15) (undo-tree-id467 . -15) (undo-tree-id468 . -15) (undo-tree-id469 . -15) (undo-tree-id470 . -15) 1401) nil (25920 60419 189085 558000) 0 nil])
([nil nil ((1386 . 1389)) nil (25920 60419 189077 887000) 0 nil])
([nil nil ((1427 . 1428)) nil (25920 60419 189077 387000) 0 nil])
([nil nil ((1428 . 1430)) nil (25920 60419 189076 547000) 0 nil])
([nil nil ((1427 . 1439) (#("cus" 0 3 (fontified nil)) . -1427) (1427 . 1430) (#("custom_emoji" 0 12 (fontified nil)) . -1427) (1427 . 1439) (#("cus" 0 3 (fontified t)) . -1427) (undo-tree-id438 . -3) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -2) (undo-tree-id444 . -2) (undo-tree-id445 . -2) (undo-tree-id446 . -3) (undo-tree-id447 . -3) (undo-tree-id448 . -3) (undo-tree-id449 . -3) (undo-tree-id450 . -3) (undo-tree-id451 . -3) 1430) nil (25920 60419 189072 886000) 0 nil])
([nil nil ((#("219443112567767041" 0 17 (fontified t face py-number-face) 17 18 (fontified t rear-nonsticky t face py-number-face)) . -1307) (undo-tree-id1012 . -18) (undo-tree-id1013 . -18) (undo-tree-id1014 . -18) (undo-tree-id1015 . -18) (undo-tree-id1016 . -18) (undo-tree-id1017 . -18) (undo-tree-id1018 . -18) (undo-tree-id1019 . -18) (undo-tree-id1020 . -18) (undo-tree-id1021 . -18) (undo-tree-id1022 . -18) (undo-tree-id1023 . -18) (undo-tree-id1024 . -18) (undo-tree-id1025 . -7) (undo-tree-id1026 . -7) (undo-tree-id1027 . -7) (undo-tree-id1028 . -7) (undo-tree-id1029 . -7) (undo-tree-id1030 . -7) (undo-tree-id1031 . -7) (undo-tree-id1032 . -18) (undo-tree-id1033 . -18) (undo-tree-id1034 . -18) (undo-tree-id1035 . -18) (undo-tree-id1036 . -18) (undo-tree-id1037 . -18) (undo-tree-id1038 . -18) (undo-tree-id1039 . -18) (undo-tree-id1040 . -18) (undo-tree-id1041 . -18) (undo-tree-id1042 . -18) (undo-tree-id1043 . -18) 1325 (t 25920 60419 194284 80000)) nil (25920 60493 409182 965000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1324 . 1325) (nil fontified nil 1307 . 1325) (1307 . 1325)) nil (25920 60493 409155 120000) 0 nil])
([nil nil ((1391 . 1400) (t 25920 60493 404251 457000)) nil (25920 60794 19846 116000) 0 nil])
([nil nil ((103 . 104)) nil (25920 60794 19845 534000) 0 nil])
([nil nil ((104 . 111)) nil (25920 60794 19844 974000) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -108) (undo-tree-id1162 . -1) (#("a" 0 1 (fontified t)) . -109) (undo-tree-id1163 . -1) (#("n" 0 1 (fontified t)) . -110) (undo-tree-id1164 . -1) 111) nil (25920 60794 19843 841000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 107) (undo-tree-id1161 . -1) 108) nil (25920 60794 19841 588000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t face font-lock-keyword-face)) . -105) (undo-tree-id1157 . -1) (undo-tree-id1158 . -1) (#("t" 0 1 (fontified t face py-builtins-face)) . -106) (undo-tree-id1159 . -1) (undo-tree-id1160 . -1) 107) nil (25920 60794 19840 108000) 0 nil])
([nil nil ((105 . 117)) nil (25920 60794 19837 916000) 0 nil])
([nil nil ((900 . 905)) nil (25920 60794 19837 288000) 0 nil])
([nil nil ((nil fontified nil 960 . 961) (nil fontified nil 955 . 960) (nil fontified nil 938 . 955) (nil fontified nil 937 . 938) (nil fontified nil 919 . 937) (nil fontified nil 918 . 919) (nil fontified nil 917 . 918) (nil fontified nil 905 . 917) (905 . 961)) nil (25920 60794 19836 439000) 0 nil])
([nil nil ((#("        custom_emoji = discord.utils.get(bot.emojis, name='pdt')" 0 8 (fontified t) 8 20 (fontified t face py-variable-name-face) 20 21 (fontified t) 21 22 (fontified t face font-lock-operator-face) 22 40 (fontified t) 40 41 (fontified t face (rainbow-delimiters-depth-1-face)) 41 58 (fontified t) 58 60 (fontified t face font-lock-string-face) 60 63 (face font-lock-string-face fontified t) 63 64 (rear-nonsticky t face (rainbow-delimiters-depth-1-face) fontified t)) . 1402) (undo-tree-id1153 . -64) (undo-tree-id1154 . 5) (undo-tree-id1155 . -62) (undo-tree-id1156 . -64)) nil (25920 60794 19835 11000) 0 nil])
([nil nil ((807 . 809)) nil (25920 60794 19833 107000) 0 nil])
([nil nil ((809 . 824)) nil (25920 60794 19832 699000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -822) (undo-tree-id1151 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -823) (undo-tree-id1152 . -1) 824) nil (25920 60794 19831 957000) 0 nil])
([nil nil ((822 . 824)) nil (25920 60794 19830 735000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . 1420) (undo-tree-id1149 . -8) (undo-tree-id1150 . -8)) nil (25920 60794 19830 208000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1419) (undo-tree-id1146 . -1) (undo-tree-id1147 . -1) (undo-tree-id1148 . -1) 1420) nil (25920 60794 19828 772000) 0 nil])
([nil nil ((806 . 808)) nil (25920 60794 19827 196000) 0 nil])
([nil nil ((808 . 809)) nil (25920 60794 19826 781000) 0 nil])
([nil nil ((809 . 830)) nil (25920 60794 19826 272000) 0 nil])
([nil nil ((830 . 834)) nil (25920 60794 19825 865000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -1424) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) 1425) nil (25920 60794 19825 267000) 0 nil])
([nil nil ((1424 . 1425)) nil (25920 60794 19823 973000) 0 nil])
([nil nil ((#("189037705873588226" 0 17 (fontified t face py-number-face) 17 18 (rear-nonsticky t fontified t face py-number-face)) . -1427) (undo-tree-id1141 . -18) (undo-tree-id1142 . -18) (undo-tree-id1143 . -18) 1445) nil (25920 60794 19823 292000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1445 . 1446) (nil fontified nil 1427 . 1446) (1427 . 1446)) nil (25920 60794 19821 477000) 0 nil])
([nil nil ((1398 . 1403)) nil (25920 60794 19820 762000) 0 nil])
([nil nil ((1403 . 1404)) nil (25920 60794 19820 248000) 0 nil])
([nil nil ((1404 . 1425)) nil (25920 60794 19819 767000) 0 nil])
([nil nil ((1425 . 1439)) nil (25920 60794 19819 151000) 0 nil])
([nil nil ((1489 . 1497)) nil (25920 60794 19818 762000) 0 nil])
([nil nil ((1497 . 1506)) nil (25920 60794 19818 362000) 0 nil])
([nil nil ((1506 . 1513)) nil (25920 60794 19817 943000) 0 nil])
([nil nil ((1513 . 1528)) nil (25920 60794 19817 467000) 0 nil])
([nil nil ((1528 . 1537)) nil (25920 60794 19816 964000) 0 nil])
([nil nil ((1537 . 1551)) nil (25920 60794 19816 432000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t face py-number-face)) . -1549) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (#("0" 0 1 (fontified t face py-number-face)) . -1550) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) 1551) nil (25920 60794 19815 28000) 0 nil])
([nil nil ((1549 . 1550)) nil (25920 60794 19803 711000) 0 nil])
([nil nil ((#("8" 0 1 (fontified t face py-number-face)) . -1549) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) 1550) nil (25920 60794 19802 757000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 1548) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) 1549) nil (25920 60794 19797 737000) 0 nil])
([nil nil ((1548 . 1553)) nil (25920 60794 19780 650000) 0 nil])
([nil nil ((1553 . 1555)) nil (25920 60794 19779 869000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -1554) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) 1555) nil (25920 60794 19778 453000) 0 nil])
([nil nil ((1555 . 1567) (#("        " 0 8 (fontified t)) . 1555) (undo-tree-id1044 . -8) 1580) nil (25920 60794 19766 434000) 0 nil])
([nil nil ((#("    custom_emoji = discord.utils.get(bot.emojis, name='pdt')
" 0 4 (fontified t) 4 16 (fontified t face py-variable-name-face) 16 17 (fontified t) 17 18 (fontified t face font-lock-operator-face) 18 36 (fontified t) 36 37 (fontified t face (rainbow-delimiters-depth-1-face)) 37 54 (fontified t) 54 59 (fontified t face font-lock-string-face) 59 60 (rear-nonsticky t fontified t face (rainbow-delimiters-depth-1-face)) 60 61 (fontified t)) . 946) (undo-tree-id1214 . -60) (undo-tree-id1215 . 11) (undo-tree-id1216 . -60) (undo-tree-id1217 . -4) (undo-tree-id1218 . -49) (undo-tree-id1219 . -49) (undo-tree-id1220 . -33) (undo-tree-id1221 . -36) (undo-tree-id1222 . -4) (undo-tree-id1223 . -16) (undo-tree-id1224 . -60) (undo-tree-id1225 . 6) (undo-tree-id1226 . -58) (undo-tree-id1227 . -60) (undo-tree-id1228 . -60) (undo-tree-id1229 . -46) (undo-tree-id1230 . -44) (undo-tree-id1231 . -42) (undo-tree-id1232 . -41) (undo-tree-id1233 . -40) (undo-tree-id1234 . -39) (undo-tree-id1235 . -13) (undo-tree-id1236 . -12) (undo-tree-id1237 . -11) (undo-tree-id1238 . -10) (undo-tree-id1239 . -10) (undo-tree-id1240 . -10) (undo-tree-id1241 . -9) (undo-tree-id1242 . -8) (undo-tree-id1243 . -7) (undo-tree-id1244 . -6) (undo-tree-id1245 . -5) (undo-tree-id1246 . -5) (undo-tree-id1247 . -5) (undo-tree-id1248 . -4) (undo-tree-id1249 . -4) (undo-tree-id1250 . -4) (undo-tree-id1251 . -60) (undo-tree-id1252 . -4) (undo-tree-id1253 . -4) (undo-tree-id1254 . -4) (undo-tree-id1255 . -4) (undo-tree-id1256 . -4) (undo-tree-id1257 . -4) (undo-tree-id1258 . -4) (undo-tree-id1259 . -4) (undo-tree-id1260 . -4) (undo-tree-id1261 . -4) (undo-tree-id1262 . -4) (undo-tree-id1263 . -4) (undo-tree-id1264 . -4) (undo-tree-id1265 . -4) (undo-tree-id1266 . -4) (undo-tree-id1267 . -4) (undo-tree-id1268 . -4) (undo-tree-id1269 . -4) (undo-tree-id1270 . -4) (undo-tree-id1271 . -4) (undo-tree-id1272 . -4) (undo-tree-id1273 . -4) (undo-tree-id1274 . -4) (undo-tree-id1275 . -4) (undo-tree-id1276 . -4) (undo-tree-id1277 . -4) (undo-tree-id1278 . -4) (undo-tree-id1279 . -4) (undo-tree-id1280 . -4) (undo-tree-id1281 . -4) (undo-tree-id1282 . -4) (undo-tree-id1283 . -4) (undo-tree-id1284 . -4) (undo-tree-id1285 . -4) (undo-tree-id1286 . -4) (undo-tree-id1287 . -4) (undo-tree-id1288 . -50) (undo-tree-id1289 . -50) (undo-tree-id1290 . -50) (undo-tree-id1291 . -50) (undo-tree-id1292 . -50) (undo-tree-id1293 . -50) (undo-tree-id1294 . -50) (undo-tree-id1295 . -50) (undo-tree-id1296 . -49) (undo-tree-id1297 . -53) (undo-tree-id1298 . -50) (undo-tree-id1299 . -50) (undo-tree-id1300 . -49) (undo-tree-id1301 . -49) (undo-tree-id1302 . -49) (undo-tree-id1303 . -49) (undo-tree-id1304 . -49) (undo-tree-id1305 . -49) (undo-tree-id1306 . -49) (undo-tree-id1307 . -61) 995 (t 25920 60794 14120 310000)) nil (25920 60916 117657 662000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1497 . 1498) (#("
" 0 1 (fontified nil)) . -1554) (1493 . 1555) 1492) nil (25920 60916 117616 577000) 0 nil])
([nil nil ((1494 . 1502) (#("    " 0 3 (fontified t) 3 4 (fontified t rear-nonsticky t)) . 1494) (undo-tree-id1194 . -4) (undo-tree-id1195 . -4) (undo-tree-id1196 . -4) (undo-tree-id1197 . -4) (undo-tree-id1198 . -4) (undo-tree-id1199 . -4) (undo-tree-id1200 . -4) (undo-tree-id1201 . -4) (undo-tree-id1202 . -4) (undo-tree-id1203 . -4) (undo-tree-id1204 . -4) (undo-tree-id1205 . -4) (undo-tree-id1206 . -4) (undo-tree-id1207 . -4) (undo-tree-id1208 . -4) (undo-tree-id1209 . -4) (undo-tree-id1210 . -4) (undo-tree-id1211 . -4) (undo-tree-id1212 . -4) (undo-tree-id1213 . -4) 1498) nil (25920 60916 117614 922000) 0 nil])
([nil nil ((1494 . 1498) (#("        " 0 8 (fontified t)) . 1494) (undo-tree-id1182 . -8) (undo-tree-id1183 . -8) (undo-tree-id1184 . -8) (undo-tree-id1185 . -8) (undo-tree-id1186 . -8) (undo-tree-id1187 . -8) (undo-tree-id1188 . -8) (undo-tree-id1189 . -8) (undo-tree-id1190 . -8) (undo-tree-id1191 . -8) (undo-tree-id1192 . -8) (undo-tree-id1193 . -8) 1502) nil (25920 60916 117604 416000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . 1494) (undo-tree-id1165 . -4) (undo-tree-id1166 . -4) (undo-tree-id1167 . -4) (undo-tree-id1168 . -4) (undo-tree-id1169 . -4) (undo-tree-id1170 . -4) (undo-tree-id1171 . -4) (undo-tree-id1172 . -4) (undo-tree-id1173 . -4) (undo-tree-id1174 . -4) (undo-tree-id1175 . -4) (undo-tree-id1176 . -4) (undo-tree-id1177 . -4) (undo-tree-id1178 . -4) (undo-tree-id1179 . -4) (undo-tree-id1180 . -4) (undo-tree-id1181 . -4) 1498) nil (25920 60916 117595 361000) 0 nil])
([nil nil ((1494 . 1506)) nil (25920 60916 115670 740000) 0 nil])
([nil nil ((1486 . 1487) (#(">" 0 1 (fontified t)) . 1486) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (t 25920 60916 114065 826000)) nil (25920 61022 258512 487000) 0 nil])
([nil nil ((1489 . 1490) (#("2" 0 1 (fontified t face py-number-face)) . 1489) (undo-tree-id1308 . -1) (1489 . 1490) (#("8" 0 1 (fontified t face py-number-face)) . 1489) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1)) nil (25920 61022 258504 907000) 0 nil])
([nil current ((#("from discord.ext import commands
" 0 4 (fontified t face py-import-from-face) 4 17 (fontified t) 17 23 (fontified t face py-import-from-face) 23 33 (fontified t)) . 71) (undo-tree-id1328 . -15) (undo-tree-id1329 . -32) (undo-tree-id1330 . -15) (undo-tree-id1331 . -15) 86 (t 25920 61022 254018 325000)) nil (25920 63237 525405 631000) 0 nil])
nil
