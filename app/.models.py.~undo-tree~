(undo-tree-save-format-version . 1)
"ab5ff554d86859c15275ec4631b96b49f0567c60"
[nil nil nil nil (25919 34026 150099 753000) 0 nil]
([nil nil ((nil rear-nonsticky nil 1 . 2) (#("
" 0 1 (fontified nil)) . -41) (1 . 42) (t 25919 33774 230053 409000)) nil (25919 34026 150098 863000) 0 nil])
([nil nil ((#("
" 0 1 (rear-nonsticky t fontified t)) . 1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1)) nil (25919 34026 150097 494000) 0 nil])
([nil nil ((40 . 41) 38) nil (25919 34026 150093 291000) 0 nil])
([nil nil ((41 . 42)) nil (25919 34026 150092 531000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -41) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) 42) nil (25919 34026 150091 587000) 0 nil])
([nil nil ((nil rear-nonsticky nil 61 . 62) (41 . 62)) nil (25919 34026 150087 304000) 0 nil])
([nil nil ((41 . 42)) nil (25919 34026 150086 715000) 0 nil])
([nil nil ((41 . 53)) nil (25919 34026 150086 176000) 0 nil])
([nil nil ((53 . 60)) nil (25919 34026 150085 689000) 0 nil])
([nil nil ((60 . 61)) nil (25919 34026 150085 155000) 0 nil])
([nil nil ((61 . 65)) nil (25919 34026 150084 690000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -61) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (#("r" 0 1 (fontified t)) . -62) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (#("o" 0 1 (fontified t)) . -63) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (#("m" 0 1 (face py-import-from-face fontified t)) . -64) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) 65) nil (25919 34026 150083 203000) 0 nil])
([nil nil ((61 . 70)) nil (25919 34026 150071 996000) 0 nil])
([nil nil ((#("import os" 0 6 (face py-import-from-face fontified t) 6 9 (fontified t)) . 61) (undo-tree-id501 . -9) (undo-tree-id502 . -1) (undo-tree-id503 . -2) (undo-tree-id504 . -2) (undo-tree-id505 . -3) (undo-tree-id506 . -4) (undo-tree-id507 . -5) (undo-tree-id508 . -6) (undo-tree-id509 . -7) (undo-tree-id510 . -7) (undo-tree-id511 . -7) (undo-tree-id512 . -7) (undo-tree-id513 . -8) (undo-tree-id514 . -9) (undo-tree-id515 . -7) (undo-tree-id516 . -9) (undo-tree-id517 . -9) (undo-tree-id518 . -9) (undo-tree-id519 . -9) (undo-tree-id520 . -9)) nil (25919 34026 150070 796000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t)) . -39) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . 1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) 40) nil (25919 34026 150060 370000) 0 nil])
([nil nil ((39 . 40)) nil (25919 34026 150048 793000) 0 nil])
([nil nil ((#("S" 0 1 (fontified t)) . -30) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (#("Q" 0 1 (fontified t)) . -31) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (#("L" 0 1 (fontified t)) . -32) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (#("A" 0 1 (fontified t)) . -33) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (#("l" 0 1 (fontified t)) . -34) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (#("c" 0 1 (fontified t)) . -35) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (#("h" 0 1 (fontified t)) . -36) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (#("e" 0 1 (fontified t)) . -37) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (#("m" 0 1 (fontified t)) . -38) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (#("y" 0 1 (fontified t)) . -39) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) 40) nil (25919 34026 150033 486000) 0 nil])
([nil nil ((30 . 40)) nil (25919 34026 148321 704000) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -17) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 18) nil (25919 34026 148319 515000) 0 nil])
([nil nil ((17 . 18)) nil (25919 34026 148288 904000) 0 nil])
([nil nil ((219 . 224) (213 . 219) (212 . 213) (195 . 212) (#("e" 0 1 (match-data (0 0) fontified t)) . -195) (undo-tree-id169 . -1) (#("u" 0 1 (match-data (0 0) fontified t)) . -196) (undo-tree-id170 . -1) 197 (193 . 197) (#("q" 0 1 (match-data (0 0) fontified t)) . -193) (undo-tree-id171 . -1) (#("i" 0 1 (match-data (0 0) fontified t)) . -194) (undo-tree-id172 . -1) 195 (186 . 195) (180 . 186) (159 . 180) (154 . 159) (140 . 154) (135 . 140) (#(" " 0 1 (match-data (0 0) fontified t)) . 135) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) 136 (120 . 136) (110 . 120) (105 . 110) (104 . 105) (103 . 104) (98 . 103) (#("Model" 0 5 (fontified nil)) . -98) (98 . 103) (84 . 98) (83 . 84) (t 25919 34026 140068 346000) 83) nil (25919 36666 825715 675000) 0 nil])
([nil nil ((223 . 226)) nil (25919 36666 825710 378000) 0 nil])
([nil nil ((#("d" 0 1 (match-data (0 0) fontified t)) . -223) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (#("b" 0 1 (match-data (0 0) fontified t)) . -224) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (#("." 0 1 (match-data (0 0) fontified t)) . -225) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) 226) nil (25919 36666 825708 561000) 0 nil])
([nil nil ((223 . 224)) nil (25919 36666 825689 584000) 0 nil])
([nil nil ((#("class User(db.Model):
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(20), unique=True, nullable=False)
     " 0 5 (fontified t face py-def-class-face) 5 6 (fontified t) 6 10 (fontified t face py-class-name-face) 10 11 (fontified t face (rainbow-delimiters-depth-1-face)) 11 14 (fontified t) 14 19 (match-data (0 0) fontified t) 19 20 (match-data (0 0) fontified t face (rainbow-delimiters-depth-1-face)) 20 22 (match-data (0 0) fontified t) 22 26 (match-data (0 0) fontified t) 26 28 (match-data (0 0) fontified t face py-builtins-face) 28 29 (match-data (0 0) fontified t) 29 30 (match-data (0 0) fontified t face font-lock-operator-face) 30 40 (match-data (0 0) fontified t) 40 41 (match-data (0 0) fontified t face (rainbow-delimiters-depth-1-face)) 41 65 (match-data (0 0) fontified t) 65 69 (match-data (0 0) fontified t face py-pseudo-keyword-face) 69 70 (match-data (0 0) fontified t face (rainbow-delimiters-depth-1-face)) 70 71 (match-data (0 0) fontified t) 71 75 (match-data (0 0) fontified t) 75 79 (match-data (0 0) fontified t face py-variable-name-face) 79 80 (match-data (0 0) fontified t) 80 81 (match-data (0 0) fontified t face font-lock-operator-face) 81 91 (match-data (0 0) fontified t) 91 92 (match-data (0 0) fontified t face (rainbow-delimiters-depth-1-face)) 92 101 (match-data (0 0) fontified t) 101 102 (match-data (0 0) fontified t face (rainbow-delimiters-depth-2-face)) 102 104 (match-data (0 0) fontified t face py-number-face) 104 105 (match-data (0 0) fontified t face (rainbow-delimiters-depth-2-face)) 105 114 (match-data (0 0) fontified t) 114 118 (match-data (0 0) fontified t face py-pseudo-keyword-face) 118 129 (match-data (0 0) fontified t) 129 134 (match-data (0 0) fontified t face py-pseudo-keyword-face) 134 135 (match-data (0 0) fontified t face (rainbow-delimiters-depth-1-face)) 135 136 (match-data (0 0) fontified t) 136 140 (match-data (0 0) fontified t) 140 141 (match-data (0 0) fontified t)) . 84) (undo-tree-id0 . -141) (undo-tree-id1 . -70) (undo-tree-id2 . -102) (undo-tree-id3 . -129) (undo-tree-id4 . -129) (undo-tree-id5 . -133) (undo-tree-id6 . -134) (undo-tree-id7 . -135) (undo-tree-id8 . -135) (undo-tree-id9 . -135) (undo-tree-id10 . -135) (undo-tree-id11 . -136) (undo-tree-id12 . -136) (undo-tree-id13 . -141) (undo-tree-id14 . -141) (undo-tree-id15 . -141) (undo-tree-id16 . -141) (undo-tree-id17 . -141) (undo-tree-id18 . -141) (undo-tree-id19 . -141) (undo-tree-id20 . -141) (undo-tree-id21 . -141) (undo-tree-id22 . -141) (undo-tree-id23 . -141) (undo-tree-id24 . -141) (undo-tree-id25 . -141) (undo-tree-id26 . -141) (undo-tree-id27 . -141) (undo-tree-id28 . -141) (undo-tree-id29 . -141) (undo-tree-id30 . -141) (undo-tree-id31 . -141) (undo-tree-id32 . -141) (undo-tree-id33 . -141) (undo-tree-id34 . -141) (undo-tree-id35 . -141) (undo-tree-id36 . -141) (undo-tree-id37 . -141) (undo-tree-id38 . -141) (undo-tree-id39 . -141) (undo-tree-id40 . -141) (undo-tree-id41 . -139) (undo-tree-id42 . -139) (undo-tree-id43 . -139) (undo-tree-id44 . -139) (undo-tree-id45 . -139) (undo-tree-id46 . -139) (undo-tree-id47 . -139) (undo-tree-id48 . -139) (undo-tree-id49 . -141) (undo-tree-id50 . -141) (undo-tree-id51 . -141) (undo-tree-id52 . -141) (undo-tree-id53 . -139) (undo-tree-id54 . -139) (undo-tree-id55 . -139) (undo-tree-id56 . -139) (undo-tree-id57 . -139) (undo-tree-id58 . -139) (undo-tree-id59 . -139) (undo-tree-id60 . -139) (undo-tree-id61 . -139) (undo-tree-id62 . -139) (undo-tree-id63 . -139) (undo-tree-id64 . -139) (undo-tree-id65 . -139) (undo-tree-id66 . -139) (undo-tree-id67 . -139) (undo-tree-id68 . -136) (undo-tree-id69 . -139) (undo-tree-id70 . -139) (undo-tree-id71 . -139) (undo-tree-id72 . -139) (undo-tree-id73 . 1) (undo-tree-id74 . -139) (undo-tree-id75 . -139) (undo-tree-id76 . -139) (undo-tree-id77 . -139) (undo-tree-id78 . -139) (undo-tree-id79 . -139) (undo-tree-id80 . -139) (undo-tree-id81 . -139) (undo-tree-id82 . -139) (undo-tree-id83 . -139) (undo-tree-id84 . -139) (undo-tree-id85 . -139) (undo-tree-id86 . -139) (undo-tree-id87 . -139) (undo-tree-id88 . -139) (undo-tree-id89 . -139) (undo-tree-id90 . -139) (undo-tree-id91 . -139) (undo-tree-id92 . -139) (undo-tree-id93 . -139) (undo-tree-id94 . -139) (undo-tree-id95 . -139) (undo-tree-id96 . -139) (undo-tree-id97 . -140) (undo-tree-id98 . -140) (undo-tree-id99 . -140) (undo-tree-id100 . -140) (undo-tree-id101 . -140) (undo-tree-id102 . -140) (undo-tree-id103 . -140) (undo-tree-id104 . -140) (undo-tree-id105 . -140) (undo-tree-id106 . -140) (undo-tree-id107 . -140) (undo-tree-id108 . -141) (undo-tree-id109 . -141) (undo-tree-id110 . -141) (undo-tree-id111 . -101) (undo-tree-id112 . -97) (undo-tree-id113 . -93) (undo-tree-id114 . -90) (undo-tree-id115 . -86) (undo-tree-id116 . -34) (undo-tree-id117 . -30) (undo-tree-id118 . -6) (undo-tree-id119 . -4) (undo-tree-id120 . -2) (undo-tree-id121 . -1) (undo-tree-id122 . -141) (undo-tree-id123 . -141) (undo-tree-id124 . -141) (undo-tree-id125 . -141)) nil (25919 36666 825684 348000) 0 nil])
([nil nil ((nil rear-nonsticky nil 2461 . 2462) (nil fontified nil 84 . 2462) (84 . 2462)) nil (25919 36666 825372 921000) 0 nil])
([nil nil ((2462 . 2463) 1885) nil (25919 36666 825368 570000) 0 nil])
([nil nil ((#("    email = db.Column(db.String(120), unique=True, nullable=False)
" 0 4 (fontified t) 4 9 (fontified t face py-variable-name-face) 9 10 (fontified t) 10 11 (fontified t face font-lock-operator-face) 11 21 (fontified t) 21 22 (fontified t face (rainbow-delimiters-depth-1-face)) 22 31 (fontified t) 31 32 (fontified t face (rainbow-delimiters-depth-2-face)) 32 35 (fontified t face py-number-face) 35 36 (fontified t face (rainbow-delimiters-depth-2-face)) 36 45 (fontified t) 45 49 (fontified t face py-pseudo-keyword-face) 49 60 (fontified t) 60 65 (fontified t face py-pseudo-keyword-face) 65 66 (fontified t face (rainbow-delimiters-depth-1-face)) 66 67 (fontified t)) . 244) (undo-tree-id176 . -3) (undo-tree-id177 . -3) (undo-tree-id178 . 63) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -3) (undo-tree-id188 . -3) (undo-tree-id189 . -3) (undo-tree-id190 . -3) (undo-tree-id191 . -4) (undo-tree-id192 . -4) (undo-tree-id193 . -4) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -3) (undo-tree-id197 . -3) (undo-tree-id198 . -3) (undo-tree-id199 . -3) (undo-tree-id200 . -3) (undo-tree-id201 . -67) (undo-tree-id202 . -66) 247 (t 25919 36666 813420 34000)) nil (25919 36901 467984 754000) 0 nil])
([nil nil ((#("from app import app
" 0 4 (fontified t face py-import-from-face) 4 9 (fontified t) 9 15 (fontified t face py-import-from-face) 15 20 (fontified t)) . 41) (undo-tree-id231 . -19) (undo-tree-id232 . -19) (undo-tree-id233 . -18) (undo-tree-id234 . -18) (undo-tree-id235 . -20) (undo-tree-id236 . -9) (undo-tree-id237 . -8) (undo-tree-id238 . -6) (undo-tree-id239 . -5) (undo-tree-id240 . -3) (undo-tree-id241 . -19) (undo-tree-id242 . -19) (undo-tree-id243 . -18) (undo-tree-id244 . -18) (undo-tree-id245 . -18) (undo-tree-id246 . -18) (undo-tree-id247 . -16) (undo-tree-id248 . -19) (undo-tree-id249 . -18) (undo-tree-id250 . -18) (undo-tree-id251 . -18) (undo-tree-id252 . -18) (undo-tree-id253 . -18) (undo-tree-id254 . -20) 59 (t 25919 36901 453354 401000)) nil (25919 37499 967917 714000) 0 nil])
([nil nil ((#("app" 0 3 (fontified t)) . 58) (undo-tree-id255 . -2) (undo-tree-id256 . -3) (undo-tree-id257 . -2) (undo-tree-id258 . -1) (undo-tree-id259 . -3) (undo-tree-id260 . -3) (undo-tree-id261 . -3)) nil (25919 37521 445229 25000) 0 nil] [nil nil ((#("db = SQLAlchemy(app)
" 0 2 (fontified t face py-variable-name-face) 2 3 (fontified t) 3 4 (fontified t face font-lock-operator-face) 4 15 (fontified t) 15 16 (fontified t face (rainbow-delimiters-depth-1-face)) 16 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 21 (fontified t)) . 42) (undo-tree-id203 . -16) (undo-tree-id204 . -20) (undo-tree-id205 . -16) (undo-tree-id206 . -16) (undo-tree-id207 . -21) (undo-tree-id208 . -20) (undo-tree-id209 . -19) (undo-tree-id210 . -18) (undo-tree-id211 . -17) (undo-tree-id212 . -16) (undo-tree-id213 . -16) (undo-tree-id214 . -16) (undo-tree-id215 . -16) (undo-tree-id216 . -16) (undo-tree-id217 . -16) (undo-tree-id218 . -16) (undo-tree-id219 . -16) (undo-tree-id220 . -19) (undo-tree-id221 . -16) (undo-tree-id222 . -16) (undo-tree-id223 . -16) (undo-tree-id224 . -19) (undo-tree-id225 . -16) (undo-tree-id226 . -16) (undo-tree-id227 . -16) (undo-tree-id228 . -16) (undo-tree-id229 . -16) (undo-tree-id230 . -21) 58) ((42 . 63)) (25919 37499 966826 815000) 0 nil])
([nil nil ((297 . 300) (#("   " 0 3 (fontified nil)) . 296) (undo-tree-id404 . -3) (undo-tree-id405 . -3) (299 . 300) (t 25919 37521 433190 927000)) nil (25919 49465 278199 993000) 0 nil])
nil
([nil nil ((300 . 318)) nil (25919 49465 278198 413000) 0 nil])
([nil nil ((318 . 319)) nil (25919 49465 278197 988000) 0 nil])
([nil nil ((297 . 301) (#("   " 0 3 (fontified t)) . 297) 319) nil (25919 49465 278197 176000) 0 nil])
([nil nil ((321 . 329) (#(" " 0 1 (fontified nil)) . 321) (undo-tree-id403 . -1) (320 . 321)) nil (25919 49465 278196 147000) 0 nil])
([nil nil ((318 . 324)) nil (25919 49465 278194 967000) 0 nil])
([nil nil ((335 . 343)) nil (25919 49465 278194 533000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -342) (undo-tree-id402 . -1) 343) nil (25919 49465 278193 871000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 341) (undo-tree-id400 . -1) (undo-tree-id401 . -1) 342) nil (25919 49465 278192 673000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face font-lock-operator-face)) . -340) (undo-tree-id398 . -1) (undo-tree-id399 . -1) 341) nil (25919 49465 278191 375000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 339) (undo-tree-id396 . -1) (undo-tree-id397 . -1) 340) nil (25919 49465 278190 37000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -335) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (#("a" 0 1 (fontified t)) . -336) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (#("m" 0 1 (fontified t)) . -337) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (#("e" 0 1 (fontified t)) . -338) (undo-tree-id394 . -1) (undo-tree-id395 . -1) 339) nil (25919 49465 278188 185000) 0 nil])
([nil nil ((335 . 347)) nil (25919 49465 278184 560000) 0 nil])
([nil nil ((347 . 351)) nil (25919 49465 278183 974000) 0 nil])
([nil nil ((347 . 351) (#("nam" 0 3 (fontified nil)) . -347) (347 . 350) (#("name" 0 4 (fontified t)) . -347) (undo-tree-id386 . -4) (undo-tree-id387 . -4) 351) nil (25919 49465 278183 62000) 0 nil])
([nil nil ((351 . 360)) nil (25919 49465 278181 502000) 0 nil])
([nil nil ((821 . 825) (#("    " 0 4 (fontified nil)) . 820) (undo-tree-id384 . -4) (undo-tree-id385 . -4) (819 . 825)) nil (25919 49465 278180 939000) 0 nil])
([nil nil ((nil rear-nonsticky nil 849 . 850) (nil fontified nil 849 . 850) (nil fontified nil 848 . 849) (nil fontified nil 842 . 848) (nil fontified nil 838 . 842) (nil fontified nil 837 . 838) (nil fontified nil 829 . 837) (nil fontified nil 828 . 829) (nil fontified nil 825 . 828) (825 . 850)) nil (25919 49465 278179 324000) 0 nil])
([nil nil ((850 . 859)) nil (25919 49465 278177 838000) 0 nil])
([nil nil ((859 . 868)) nil (25919 49465 278177 113000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -864) (undo-tree-id380 . -1) (#("n" 0 1 (fontified t)) . -865) (undo-tree-id381 . -1) (#("m" 0 1 (fontified t)) . -866) (undo-tree-id382 . -1) (#("e" 0 1 (fontified t)) . -867) (undo-tree-id383 . -1) 868) nil (25919 49465 278176 119000) 0 nil])
([nil nil ((864 . 868)) nil (25919 49465 278173 513000) 0 nil])
([nil nil ((864 . 868) (#("na" 0 2 (fontified nil)) . -864) (864 . 866) (#("name" 0 4 (fontified t)) . -864) (undo-tree-id379 . -4) 868) nil (25919 49465 278172 575000) 0 nil])
([nil nil ((868 . 870)) nil (25919 49465 278170 852000) 0 nil])
([nil nil ((#("=" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t face font-lock-operator-face)) . -869) (undo-tree-id378 . -1) 870) nil (25919 49465 278169 854000) 0 nil])
([nil nil ((869 . 870)) nil (25919 49465 278168 454000) 0 nil])
([nil nil ((#("  " 0 2 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . 868) (undo-tree-id376 . -2) (undo-tree-id377 . -2) 870) nil (25919 49465 278167 736000) 0 nil])
([nil nil ((868 . 871)) nil (25919 49465 278166 83000) 0 nil])
([nil nil ((871 . 875)) nil (25919 49465 278165 482000) 0 nil])
([nil nil ((871 . 875) (#("nam" 0 3 (fontified nil)) . -871) (871 . 874) (#("name" 0 4 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -871) (undo-tree-id375 . -4) 875) nil (25919 49465 278164 478000) 0 nil])
([nil nil ((875 . 884)) nil (25919 49465 278162 609000) 0 nil])
([nil nil ((884 . 889)) nil (25919 49465 278161 733000) 0 nil])
([nil nil ((#("." 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -888) (undo-tree-id373 . -1) (undo-tree-id374 . -1) 889) nil (25919 49465 278160 694000) 0 nil])
([nil nil ((#("." 0 1 (fontified t)) . 863)) nil (25919 49465 278158 602000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face py-variable-name-face)) . -859) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (#("e" 0 1 (fontified t face py-variable-name-face)) . -860) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (#("l" 0 1 (fontified t face py-variable-name-face)) . -861) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (#("f" 0 1 (fontified t face py-variable-name-face)) . -862) (undo-tree-id371 . -1) (undo-tree-id372 . -1) 863) nil (25919 49465 278156 50000) 0 nil])
([nil nil ((#("f" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . 879) (#("l" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . 879) (#("e" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . 879) (#("s" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t face py-object-reference-face)) . 879)) nil (25919 49465 277752 275000) 0 nil])
([nil nil ((879 . 887)) nil (25919 49465 277751 331000) 0 nil])
([nil nil ((887 . 889)) nil (25919 49465 277750 785000) 0 nil])
([nil nil ((871 . 872)) nil (25919 49465 277750 142000) 0 nil])
([nil nil ((#("`" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -871) (undo-tree-id363 . -1) (undo-tree-id364 . -1) 872) nil (25919 49465 277749 142000) 0 nil])
([nil nil ((879 . 884)) nil (25919 49465 277747 728000) 0 nil])
([nil nil ((894 . 907)) nil (25919 49465 277747 234000) 0 nil])
([nil nil ((848 . 860)) nil (25919 49465 277746 759000) 0 nil])
([nil nil ((860 . 871)) nil (25919 49465 277746 217000) 0 nil])
([nil nil ((930 . 939)) nil (25919 49465 277745 626000) 0 nil])
([nil nil ((939 . 940)) nil (25919 49465 277745 55000) 0 nil])
([nil nil ((#("p" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -939) (undo-tree-id362 . -1) 940) nil (25919 49465 277744 284000) 0 nil])
([nil nil ((939 . 960)) nil (25919 49465 277743 144000) 0 nil])
([nil nil ((960 . 965)) nil (25919 49465 277742 627000) 0 nil])
([nil nil ((#("d" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -963) (undo-tree-id360 . -1) (#("i" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -964) (undo-tree-id361 . -1) 965) nil (25919 49465 277741 784000) 0 nil])
([nil nil ((963 . 965)) nil (25919 49465 277740 169000) 0 nil])
([nil nil ((1515 . 1519) (#("    " 0 4 (fontified nil)) . 1514) (undo-tree-id358 . -4) (undo-tree-id359 . -4) (1518 . 1519)) nil (25919 49465 277739 441000) 0 nil])
([nil nil ((1519 . 1540)) nil (25919 49465 277738 7000) 0 nil])
([nil nil ((1540 . 1552)) nil (25919 49465 277737 565000) 0 nil])
([nil nil ((1552 . 1573)) nil (25919 49465 277736 708000) 0 nil])
([nil nil ((1573 . 1577)) nil (25919 49465 277736 130000) 0 nil])
([nil nil ((1577 . 1586)) nil (25919 49465 277735 427000) 0 nil])
([nil nil ((1577 . 1578)) nil (25919 49465 277734 958000) 0 nil])
([nil nil ((1578 . 1587)) nil (25919 49465 277734 355000) 0 nil])
([nil nil ((1587 . 1603)) nil (25919 49465 277733 832000) 0 nil])
([nil nil ((1599 . 1603) (#("nam" 0 3 (fontified nil)) . -1599) (1599 . 1602) (#("name" 0 4 (fontified t)) . -1599) (undo-tree-id357 . -4) 1603) nil (25919 49465 277733 31000) 0 nil])
([nil nil ((1603 . 1606)) nil (25919 49465 277731 531000) 0 nil])
([nil nil ((#("s" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -1603) (undo-tree-id354 . -1) (#("l" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -1604) (undo-tree-id355 . -1) (#("e" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -1605) (undo-tree-id356 . -1) 1606) nil (25919 49465 277730 576000) 0 nil])
([nil nil ((1603 . 1612)) nil (25919 49465 277728 392000) 0 nil])
([nil nil ((1612 . 1620)) nil (25919 49465 277727 794000) 0 nil])
([nil nil ((1617 . 1624) (#("ro" 0 2 (fontified nil)) . -1617) (1617 . 1619) (#("role_id" 0 7 (fontified nil)) . -1617) (1617 . 1624) (#("rol" 0 3 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -1617) (undo-tree-id353 . -3) 1620) nil (25919 49465 277726 859000) 0 nil])
([nil nil ((1624 . 1630)) nil (25919 49465 277725 292000) 0 nil])
([nil nil ((1627 . 1634) (#("rol" 0 3 (fontified nil)) . -1627) (1627 . 1630) (#("role_id" 0 7 (fontified nil)) . -1627) (1627 . 1634) (#("rol" 0 3 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1627) (undo-tree-id352 . -3) 1630) nil (25919 49465 277724 359000) 0 nil])
([nil nil ((1634 . 1643)) nil (25919 49465 277722 673000) 0 nil])
([nil nil ((1643 . 1647)) nil (25919 49465 277722 35000) 0 nil])
([nil nil ((#("." 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1646) (undo-tree-id350 . -1) (undo-tree-id351 . -1) 1647) nil (25919 49465 277721 129000) 0 nil])
([nil nil ((1646 . 1647)) nil (25919 49465 277719 839000) 0 nil])
([nil nil ((#("l" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1644) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (#("e" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1645) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (#("f" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1646) (undo-tree-id349 . -1) 1647) nil (25919 49465 277718 730000) 0 nil])
([nil nil ((1644 . 1650)) nil (25919 49465 277715 997000) 0 nil])
([nil nil ((1648 . 1657) (#("ge" 0 2 (fontified nil)) . -1648) (1648 . 1650) (#("gearscore" 0 9 (fontified nil)) . -1648) (1648 . 1657) (#("ge" 0 2 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1648) (undo-tree-id344 . -2) 1650) nil (25919 49465 277714 879000) 0 nil])
([nil nil ((1657 . 1663)) nil (25919 49465 277713 370000) 0 nil])
([nil nil ((1660 . 1669) (#("gea" 0 3 (fontified nil)) . -1660) (1660 . 1663) (#("gearscore" 0 9 (fontified nil)) . -1660) (1660 . 1669) (#("gea" 0 3 (match-data (0 2 0 1 1 2) fontified t)) . -1660) (undo-tree-id343 . -3) 1663) nil (25919 49465 277712 446000) 0 nil])
([nil nil ((1669 . 1678)) nil (25919 49465 277710 941000) 0 nil])
([nil nil ((1678 . 1685)) nil (25919 49465 277710 381000) 0 nil])
([nil nil ((1683 . 1695) (#("ch" 0 2 (fontified nil)) . -1683) (1683 . 1685) (#("character_id" 0 12 (fontified nil)) . -1683) (1683 . 1695) (#("ch" 0 2 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1683) (undo-tree-id342 . -2) 1685) nil (25919 49465 277709 207000) 0 nil])
([nil nil ((1695 . 1700)) nil (25919 49465 277707 779000) 0 nil])
([nil nil ((1698 . 1710) (#("ch" 0 2 (fontified nil)) . -1698) (1698 . 1700) (#("character_id" 0 12 (fontified nil)) . -1698) (1698 . 1710) (#("ch" 0 2 (match-data (0 2 0 1 1 2) fontified t)) . -1698) (undo-tree-id341 . -2) 1700) nil (25919 49465 277706 879000) 0 nil])
([nil nil ((1788 . 1806)) nil (25919 49465 277705 354000) 0 nil])
([nil nil ((1743 . 1752)) nil (25919 49465 277704 759000) 0 nil])
([nil nil ((1752 . 1773)) nil (25919 49465 277704 289000) 0 nil])
([nil nil ((1773 . 1787)) nil (25919 49465 277703 681000) 0 nil])
([nil nil ((1787 . 1789)) nil (25919 49465 277703 142000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -1787) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) 1788) nil (25919 49465 277702 430000) 0 nil])
([nil nil ((#("z" 0 1 (fontified t)) . 1787)) nil (25919 49465 277700 576000) 0 nil])
([nil nil ((2097 . 2118)) nil (25919 49465 277700 49000) 0 nil])
([nil nil ((2118 . 2121)) nil (25919 49465 277699 553000) 0 nil])
([nil nil ((2120 . 2136)) nil (25919 49465 277699 87000) 0 nil])
([nil nil ((2137 . 2138)) nil (25919 49465 277698 495000) 0 nil])
([nil nil ((2138 . 2147)) nil (25919 49465 277697 796000) 0 nil])
([nil nil ((2147 . 2164)) nil (25919 49465 277697 29000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -2163) (undo-tree-id337 . -1) 2164) nil (25919 49465 277695 993000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2162) (undo-tree-id336 . -1) 2163) nil (25919 49465 277694 791000) 0 nil])
([nil nil ((2162 . 2163)) nil (25919 49465 277692 957000) 0 nil])
([nil nil ((2159 . 2163) (#("name" 0 4 (fontified nil)) . -2159) (2159 . 2163) (#("name" 0 4 (fontified t)) . -2159) (undo-tree-id335 . -4) 2163) nil (25919 49465 277692 135000) 0 nil])
([nil nil ((2163 . 2172)) nil (25919 49465 277690 628000) 0 nil])
([nil nil ((2172 . 2180)) nil (25919 49465 277689 858000) 0 nil])
([nil nil ((2177 . 2192) (#("sp" 0 2 (fontified nil)) . -2177) (2177 . 2179) (#("specializations" 0 15 (fontified nil)) . -2177) (2177 . 2192) (#("spe" 0 3 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -2177) (undo-tree-id334 . -3) 2180) nil (25919 49465 277689 16000) 0 nil])
([nil nil ((2192 . 2198)) nil (25919 49465 277687 389000) 0 nil])
([nil nil ((2195 . 2209) (#("spe" 0 3 (fontified nil)) . -2195) (2195 . 2198) (#("specialization" 0 14 (fontified nil)) . -2195) (2195 . 2209) (#("spe" 0 3 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -2195) (undo-tree-id333 . -3) 2198) nil (25919 49465 277686 54000) 0 nil])
([nil nil ((2209 . 2218)) nil (25919 49465 277684 319000) 0 nil])
([nil nil ((2589 . 2593) (#("    " 0 4 (fontified nil)) . 2588) (undo-tree-id331 . -4) (undo-tree-id332 . -4) (2592 . 2593)) nil (25919 49465 277683 478000) 0 nil])
([nil nil ((2593 . 2614)) nil (25919 49465 277681 891000) 0 nil])
([nil nil ((2614 . 2618)) nil (25919 49465 277681 301000) 0 nil])
([nil nil ((#("description" 0 11 (fontified t face py-variable-name-face)) . -2441) (undo-tree-id328 . -11) (undo-tree-id329 . -11) (undo-tree-id330 . -11) 2452) nil (25919 49465 277680 361000) 0 nil])
([nil nil ((2441 . 2450)) nil (25919 49465 277678 124000) 0 nil])
([nil nil ((#("Text" 0 4 (fontified t)) . -2466) (undo-tree-id325 . -4) (undo-tree-id326 . -4) (undo-tree-id327 . -4) 2470) nil (25919 49465 277677 288000) 0 nil])
([nil nil ((2466 . 2473)) nil (25919 49465 277675 439000) 0 nil])
([nil nil ((2619 . 2634)) nil (25919 49465 277674 755000) 0 nil])
([nil nil ((2634 . 2638)) nil (25919 49465 277674 174000) 0 nil])
([nil nil ((2638 . 2639)) nil (25919 49465 277673 565000) 0 nil])
([nil nil ((2639 . 2648)) nil (25919 49465 277673 17000) 0 nil])
([nil nil ((2648 . 2654)) nil (25919 49465 277672 393000) 0 nil])
([nil nil ((2653 . 2657) (#("n" 0 1 (fontified nil)) . -2653) (2653 . 2654) (#("name" 0 4 (fontified nil)) . -2653) (2653 . 2657) (#("n" 0 1 (fontified t)) . -2653) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) 2654) nil (25919 49465 277671 264000) 0 nil])
([nil nil ((2657 . 2662)) nil (25919 49465 277668 329000) 0 nil])
([nil nil ((2660 . 2664) (#("na" 0 2 (fontified nil)) . -2660) (2660 . 2662) (#("name" 0 4 (fontified nil)) . -2660) (2660 . 2664) (#("na" 0 2 (match-data (0 1 0 1) fontified t)) . -2660) (undo-tree-id316 . -2) (undo-tree-id317 . -1) (undo-tree-id318 . -2) (undo-tree-id319 . -2) (undo-tree-id320 . -2) 2662) nil (25919 49465 277667 436000) 0 nil])
([nil nil ((2664 . 2673)) nil (25919 49465 277664 297000) 0 nil])
([nil nil ((2673 . 2679)) nil (25919 49465 277663 731000) 0 nil])
([nil nil ((#(" " 0 1 (match-data (0 2 0 1 1 2) fontified t)) . 2678) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) 2679) nil (25919 49465 277662 662000) 0 nil])
([nil nil ((2678 . 2681)) nil (25919 49465 277657 259000) 0 nil])
([nil nil ((2678 . 2687) (#("ra" 0 2 (fontified nil)) . -2678) (2678 . 2680) (#("raidscore" 0 9 (fontified nil)) . -2678) (2678 . 2687) (#("rai" 0 3 (match-data (0 2 0 1 1 2) fontified t)) . -2678) (undo-tree-id290 . -3) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -2) (undo-tree-id294 . -2) (undo-tree-id295 . -3) (undo-tree-id296 . -3) (undo-tree-id297 . -3) (undo-tree-id298 . -3) (undo-tree-id299 . -3) (undo-tree-id300 . -3) (undo-tree-id301 . -3) (undo-tree-id302 . -3) (undo-tree-id303 . -3) 2681) nil (25919 49465 277655 910000) 0 nil])
([nil nil ((2687 . 2693)) nil (25919 49465 277649 263000) 0 nil])
([nil nil ((2690 . 2699) (#("rai" 0 3 (fontified nil)) . -2690) (2690 . 2693) (#("raidscore" 0 9 (fontified nil)) . -2690) (2690 . 2699) (#("rai" 0 3 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -2690) (undo-tree-id282 . -3) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -3) (undo-tree-id288 . -3) (undo-tree-id289 . -3) 2693) nil (25919 49465 277648 313000) 0 nil])
([nil nil ((2699 . 2708)) nil (25919 49465 277644 591000) 0 nil])
([nil nil ((2708 . 2709)) nil (25919 49465 277644 217000) 0 nil])
([nil nil ((2709 . 2715)) nil (25919 49465 277643 759000) 0 nil])
([nil nil ((2713 . 2730) (#("se" 0 2 (fontified nil)) . -2713) (2713 . 2715) (#("specialization_id" 0 17 (fontified nil)) . -2713) (2713 . 2730) (#("se" 0 2 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -2713) (undo-tree-id273 . -2) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -2) (undo-tree-id279 . -2) (undo-tree-id280 . -2) (undo-tree-id281 . -2) 2715) nil (25919 49465 277642 656000) 0 nil])
([nil nil ((2730 . 2736)) nil (25919 49465 277638 472000) 0 nil])
([nil nil ((2733 . 2740) (#("spe" 0 3 (fontified nil)) . -2733) (2733 . 2736) (#("spec_id" 0 7 (fontified nil)) . -2733) (2733 . 2740) (#("spe" 0 3 (match-data (0 3 0 1 2 3) fontified t)) . -2733) (undo-tree-id262 . -3) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -3) (undo-tree-id271 . -3) (undo-tree-id272 . -3) 2736) nil (25919 49465 277636 403000) 0 nil])
([nil nil ((2740 . 2749)) nil (25919 49465 277619 637000) 0 nil])
([nil nil ((882 . 887) (t 25919 49465 280240 419000)) nil (25919 50747 268559 717000) 0 nil])
([nil nil ((1297 . 1298) (t 25919 50747 269920 951000)) nil (25919 52575 449640 330000) 0 nil])
([nil nil ((1298 . 1299)) nil (25919 52575 449638 957000) 0 nil])
([nil nil ((1299 . 1308)) nil (25919 52575 449638 3000) 0 nil])
([nil nil ((#("3" 0 1 (fontified t face font-lock-comment-face)) . -1307) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) 1308) nil (25919 52575 449636 201000) 0 nil])
([nil nil ((1307 . 1328)) nil (25919 52575 449624 462000) 0 nil])
([nil nil ((1328 . 1331)) nil (25919 52575 449621 150000) 0 nil])
([nil nil ((#("specialization" 0 14 (fontified t)) . -2161) (undo-tree-id653 . -13) (undo-tree-id654 . -13) (undo-tree-id655 . -13) (undo-tree-id656 . -10) (undo-tree-id657 . -10) (undo-tree-id658 . -10) (undo-tree-id659 . -10) (undo-tree-id660 . -14) (undo-tree-id661 . -13) (undo-tree-id662 . -13) (undo-tree-id663 . -13) (undo-tree-id664 . -13) (undo-tree-id665 . -13) (undo-tree-id666 . -14) (undo-tree-id667 . -14) 2175 (t 25919 52575 449483 257000)) nil (25919 52831 607454 868000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 2160) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) 2161) nil (25919 52831 607447 529000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -2159) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) 2160) nil (25919 52831 607439 390000) 0 nil])
([nil nil ((#("        self.specializations = specialization
" 0 8 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t) 8 12 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t face py-object-reference-face) 12 13 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t) 13 28 (match-data (0 3 0 1 1 2 2 3) fontified t face py-variable-name-face) 28 29 (match-data (0 3 0 1 1 2 2 3) fontified t) 29 30 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-operator-face) 30 31 (match-data (0 3 0 1 1 2 2 3) fontified t) 31 46 (match-data (0 3 0 1 1 2 2 3) fontified t)) . 2187) (undo-tree-id595 . -45) (undo-tree-id596 . -27) (undo-tree-id597 . -27) (undo-tree-id598 . -31) (undo-tree-id599 . -45) (undo-tree-id600 . -27) (undo-tree-id601 . -27) (undo-tree-id602 . -27) (undo-tree-id603 . -13) (undo-tree-id604 . -28) (undo-tree-id605 . -27) (undo-tree-id606 . -27) (undo-tree-id607 . -27) (undo-tree-id608 . -27) (undo-tree-id609 . -27) (undo-tree-id610 . -46) 2214) nil (25919 52832 169538 796000) 0 nil])
([nil nil ((731 . 736) (t 25919 52844 469416 109000) 730) nil (25919 56263 853010 478000) 0 nil] [nil nil ((#("class Role(db.Model):
    __tablename__ = 'roles'
    
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(50), nullable=False)
    specializations = db.relationship('Specialization', backref='role', lazy=True)
    def __init__(self, name):
        self.name = name
        
    def __repr__(self):
        return f'<Role {self.name}>'
" 0 5 (fontified t face py-def-class-face) 5 6 (fontified t) 6 10 (fontified t face py-class-name-face) 10 11 (fontified t face (rainbow-delimiters-depth-1-face)) 11 19 (fontified t) 19 20 (fontified t face (rainbow-delimiters-depth-1-face)) 20 26 (fontified t) 26 39 (fontified t face py-variable-name-face) 39 40 (fontified t) 40 41 (fontified t face font-lock-operator-face) 41 42 (fontified t) 42 49 (fontified t face font-lock-string-face) 49 59 (fontified t) 59 61 (fontified t face py-builtins-face) 61 62 (fontified t) 62 63 (fontified t face font-lock-operator-face) 63 73 (fontified t) 73 74 (fontified t face (rainbow-delimiters-depth-1-face)) 74 82 (fontified t) 82 98 (fontified t) 98 102 (fontified t face py-pseudo-keyword-face) 102 103 (fontified t face (rainbow-delimiters-depth-1-face)) 103 104 (fontified t) 104 108 (fontified t) 108 112 (fontified t face py-variable-name-face) 112 113 (fontified t) 113 114 (fontified t face font-lock-operator-face) 114 124 (fontified t) 124 125 (fontified t face (rainbow-delimiters-depth-1-face)) 125 134 (fontified t) 134 135 (fontified t face (rainbow-delimiters-depth-2-face)) 135 137 (fontified t face py-number-face) 137 138 (fontified t face (rainbow-delimiters-depth-2-face)) 138 149 (fontified t) 149 154 (fontified t face py-pseudo-keyword-face) 154 155 (fontified t face (rainbow-delimiters-depth-1-face)) 155 160 (fontified t) 160 175 (fontified t face py-variable-name-face) 175 176 (fontified t) 176 177 (fontified t face font-lock-operator-face) 177 193 (fontified t) 193 194 (fontified t face (rainbow-delimiters-depth-1-face)) 194 202 (fontified t face font-lock-string-face) 202 210 (fontified t face font-lock-string-face) 210 220 (fontified t) 220 226 (fontified t face font-lock-string-face) 226 233 (fontified t) 233 237 (fontified t face py-pseudo-keyword-face) 237 238 (fontified t face (rainbow-delimiters-depth-1-face)) 238 239 (fontified t) 239 243 (fontified t) 243 246 (fontified t face py-def-class-face) 246 247 (fontified t) 247 255 (fontified t face py-def-face) 255 256 (fontified t face (rainbow-delimiters-depth-1-face)) 256 260 (fontified t face py-object-reference-face) 260 266 (fontified t) 266 267 (fontified t face (rainbow-delimiters-depth-1-face)) 267 269 (fontified t) 269 277 (fontified t) 277 281 (fontified t face py-object-reference-face) 281 282 (fontified t) 282 286 (fontified t face py-variable-name-face) 286 287 (fontified t) 287 288 (fontified t face font-lock-operator-face) 288 289 (fontified t) 289 294 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t) 294 302 (match-data (0 3 0 1 1 2 2 3) fontified t) 302 303 (fontified t) 303 307 (fontified t) 307 310 (fontified t face py-def-class-face) 310 311 (fontified t) 311 315 (fontified t face py-def-face) 315 319 (fontified t face py-def-face) 319 320 (fontified t face (rainbow-delimiters-depth-1-face)) 320 324 (fontified t face py-object-reference-face) 324 325 (fontified t face (rainbow-delimiters-depth-1-face)) 325 327 (fontified t) 327 335 (fontified t) 335 341 (fontified t face font-lock-keyword-face) 341 343 (fontified t) 343 363 (fontified t face font-lock-string-face) 363 364 (fontified t)) . -1893) (undo-tree-id512 . -294) (undo-tree-id513 . -294) (undo-tree-id514 . -363) (undo-tree-id515 . -243) (undo-tree-id516 . -363) (undo-tree-id517 . -363) (undo-tree-id518 . -266) (undo-tree-id519 . -266) (undo-tree-id520 . -266) (undo-tree-id521 . -266) (undo-tree-id522 . -266) (undo-tree-id523 . -266) (undo-tree-id524 . -266) (undo-tree-id525 . -266) (undo-tree-id526 . -266) (undo-tree-id527 . -266) (undo-tree-id528 . -266) (undo-tree-id529 . -266) (undo-tree-id530 . -266) (undo-tree-id531 . -266) (undo-tree-id532 . -266) (undo-tree-id533 . -266) (undo-tree-id534 . -266) (undo-tree-id535 . -266) (undo-tree-id536 . -266) (undo-tree-id537 . -266) (undo-tree-id538 . -266) (undo-tree-id539 . -266) (undo-tree-id540 . -266) (undo-tree-id541 . -266) (undo-tree-id542 . -292) (undo-tree-id543 . -292) (undo-tree-id544 . -292) (undo-tree-id545 . -294) (undo-tree-id546 . -294) (undo-tree-id547 . -294) (undo-tree-id548 . -294) (undo-tree-id549 . -294) (undo-tree-id550 . -294) (undo-tree-id551 . -294) (undo-tree-id552 . -294) (undo-tree-id553 . -302) (undo-tree-id554 . -301) (undo-tree-id555 . -301) (undo-tree-id556 . -301) (undo-tree-id557 . -301) (undo-tree-id558 . -301) (undo-tree-id559 . -301) (undo-tree-id560 . -301) (undo-tree-id561 . -301) (undo-tree-id562 . -301) (undo-tree-id563 . -301) (undo-tree-id564 . -301) (undo-tree-id565 . -301) (undo-tree-id566 . -301) (undo-tree-id567 . -301) (undo-tree-id568 . -363) (undo-tree-id569 . -364) (undo-tree-id570 . -1) (undo-tree-id571 . -2) (undo-tree-id572 . -3) (undo-tree-id573 . -27) (undo-tree-id574 . -29) (undo-tree-id575 . -54) (undo-tree-id576 . -69) (undo-tree-id577 . -72) (undo-tree-id578 . -123) (undo-tree-id579 . -125) (undo-tree-id580 . -178) (undo-tree-id581 . -179) (undo-tree-id582 . -180) (undo-tree-id583 . -264) (undo-tree-id584 . -293) (undo-tree-id585 . -302) (undo-tree-id586 . -326) (undo-tree-id587 . -361) (undo-tree-id588 . -362) (undo-tree-id589 . -363) (undo-tree-id590 . -327) (undo-tree-id591 . -363) (undo-tree-id592 . -363) (undo-tree-id593 . -364) (undo-tree-id594 . -364) 2257) ((1893 . 2257)) (25919 52831 607864 977000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -732) (undo-tree-id1905 . -4) (undo-tree-id1906 . -4) 736) nil (25919 56263 853009 618000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -1892) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) 1893) ((1892 . 1893)) (25919 52831 607378 134000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -731) (undo-tree-id1903 . -1) (undo-tree-id1904 . -1) 732) nil (25919 56263 853008 327000) 0 nil])
nil
([nil nil ((424 . 429)) nil (25919 56263 853006 964000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -425) (undo-tree-id1901 . -4) (undo-tree-id1902 . -4) 429) nil (25919 56263 853006 454000) 0 nil])
([nil nil ((425 . 446)) nil (25919 56263 853005 371000) 0 nil])
([nil nil ((446 . 449)) nil (25919 56263 853004 999000) 0 nil])
([nil nil ((449 . 450)) nil (25919 56263 853004 573000) 0 nil])
([nil nil ((450 . 455)) nil (25919 56263 853004 121000) 0 nil])
([nil nil ((455 . 463)) nil (25919 56263 853003 697000) 0 nil])
([nil nil ((463 . 470)) nil (25919 56263 853003 266000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -468) (undo-tree-id1899 . -1) (#("n" 0 1 (fontified t)) . -469) (undo-tree-id1900 . -1) 470) nil (25919 56263 853002 577000) 0 nil])
([nil nil ((468 . 489)) nil (25919 56263 853001 351000) 0 nil])
([nil nil ((489 . 498)) nil (25919 56263 853000 940000) 0 nil])
([nil nil ((498 . 499)) nil (25919 56263 853000 585000) 0 nil])
([nil nil ((499 . 504)) nil (25919 56263 853000 198000) 0 nil])
([nil nil ((504 . 519)) nil (25919 56263 852999 880000) 0 nil])
([nil nil ((#("C" 0 1 (fontified t)) . -518) (undo-tree-id1898 . -1) 519) nil (25919 56263 852999 342000) 0 nil])
([nil nil ((518 . 526)) nil (25919 56263 852998 506000) 0 nil])
([nil nil ((526 . 547)) nil (25919 56263 852998 132000) 0 nil])
([nil nil ((547 . 556)) nil (25919 56263 852997 760000) 0 nil])
([nil nil ((556 . 577)) nil (25919 56263 852997 373000) 0 nil])
([nil nil ((577 . 582)) nil (25919 56263 852996 974000) 0 nil])
([nil nil ((582 . 587)) nil (25919 56263 852996 580000) 0 nil])
([nil nil ((587 . 596)) nil (25919 56263 852996 141000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 595) (undo-tree-id1896 . -1) (undo-tree-id1897 . -1) 596) nil (25919 56263 852995 566000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face font-lock-operator-face)) . -594) (undo-tree-id1894 . -1) (undo-tree-id1895 . -1) 595) nil (25919 56263 852994 318000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 593) (undo-tree-id1892 . -1) (undo-tree-id1893 . -1) 594) nil (25919 56263 852992 909000) 0 nil])
([nil nil ((#("m" 0 1 (fontified t)) . -587) (undo-tree-id1880 . -1) (undo-tree-id1881 . -1) (#("o" 0 1 (fontified t)) . -588) (undo-tree-id1882 . -1) (undo-tree-id1883 . -1) (#("n" 0 1 (fontified t)) . -589) (undo-tree-id1884 . -1) (undo-tree-id1885 . -1) (#("d" 0 1 (fontified t)) . -590) (undo-tree-id1886 . -1) (undo-tree-id1887 . -1) (#("a" 0 1 (fontified t)) . -591) (undo-tree-id1888 . -1) (undo-tree-id1889 . -1) (#("y" 0 1 (fontified t)) . -592) (undo-tree-id1890 . -1) (undo-tree-id1891 . -1) 593) nil (25919 56263 852990 500000) 0 nil])
([nil nil ((587 . 590)) nil (25919 56263 852984 944000) 0 nil])
([nil nil ((590 . 611)) nil (25919 56263 852984 519000) 0 nil])
([nil nil ((611 . 621)) nil (25919 56263 852984 116000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 620) (undo-tree-id1878 . -1) (undo-tree-id1879 . -1) 621) nil (25919 56263 852983 530000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -619) (undo-tree-id1876 . -1) (undo-tree-id1877 . -1) 620) nil (25919 56263 852982 261000) 0 nil])
([nil nil ((619 . 620)) nil (25919 56263 852981 74000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-2-face))) . -619) (undo-tree-id1874 . -1) (undo-tree-id1875 . -1) 620) nil (25919 56263 852980 522000) 0 nil])
([nil nil ((619 . 621)) nil (25919 56263 852979 372000) 0 nil])
([nil nil ((621 . 622)) nil (25919 56263 852978 946000) 0 nil])
([nil nil ((622 . 643)) nil (25919 56263 852978 526000) 0 nil])
([nil nil ((643 . 664)) nil (25919 56263 852978 182000) 0 nil])
([nil nil ((664 . 669)) nil (25919 56263 852977 756000) 0 nil])
([nil nil ((666 . 670) (#("    " 0 4 (fontified nil)) . 665) (undo-tree-id1872 . -4) (undo-tree-id1873 . -4) (669 . 670)) nil (25919 56263 852977 157000) 0 nil])
([nil nil ((#("    " 0 4 (fontified t)) . -666) (undo-tree-id1870 . -4) (undo-tree-id1871 . -4) 670) nil (25919 56263 852975 749000) 0 nil])
([nil nil ((666 . 674)) nil (25919 56263 852973 763000) 0 nil])
([nil nil ((674 . 681)) nil (25919 56263 852973 388000) 0 nil])
([nil nil ((#("a" 0 1 (fontified t face py-def-face)) . -678) (undo-tree-id1867 . -1) (#("r" 0 1 (fontified t face py-def-face)) . -679) (undo-tree-id1868 . -1) (#("y" 0 1 (fontified t face py-def-face)) . -680) (undo-tree-id1869 . -1) 681) nil (25919 56263 852972 516000) 0 nil])
([nil nil ((678 . 682)) nil (25919 56263 852970 881000) 0 nil])
([nil nil ((682 . 683)) nil (25919 56263 852970 476000) 0 nil])
([nil nil ((683 . 684)) nil (25919 56263 852969 985000) 0 nil])
([nil nil ((684 . 685)) nil (25919 56263 852969 671000) 0 nil])
([nil nil ((#("list: " 0 4 (fontified t face py-builtins-face) 4 6 (fontified t)) . 679) (undo-tree-id1865 . -6) (undo-tree-id1866 . -6)) nil (25919 56263 852969 170000) 0 nil])
([nil nil ((679 . 684)) nil (25919 56263 852968 77000) 0 nil])
([nil nil ((684 . 685)) nil (25919 56263 852967 754000) 0 nil])
([nil nil ((685 . 690)) nil (25919 56263 852967 347000) 0 nil])
([nil nil ((690 . 691)) nil (25919 56263 852966 718000) 0 nil])
([nil nil ((691 . 695)) nil (25919 56263 852966 366000) 0 nil])
([nil nil ((679 . 683)) nil (25919 56263 852965 940000) 0 nil])
([nil nil ((683 . 684)) nil (25919 56263 852965 482000) 0 nil])
([nil nil ((684 . 685)) nil (25919 56263 852965 92000) 0 nil])
([nil nil ((689 . 694)) nil (25919 56263 852964 716000) 0 nil])
([nil nil ((693 . 706)) nil (25919 56263 852964 386000) 0 nil])
([nil nil ((719 . 721)) nil (25919 56263 852963 948000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -679) (undo-tree-id1853 . -1) (undo-tree-id1854 . -1) (#("i" 0 1 (fontified t)) . -680) (undo-tree-id1855 . -1) (undo-tree-id1856 . -1) (#("s" 0 1 (fontified t)) . -681) (undo-tree-id1857 . -1) (undo-tree-id1858 . -1) (#("t" 0 1 (fontified t)) . -682) (undo-tree-id1859 . -1) (undo-tree-id1860 . -1) (#(":" 0 1 (fontified t)) . -683) (undo-tree-id1861 . -1) (undo-tree-id1862 . -1) (#(" " 0 1 (fontified nil)) . 684) (684 . 685) (#(" " 0 1 (fontified t)) . 684) (undo-tree-id1863 . -1) (undo-tree-id1864 . -1) 685) nil (25919 56263 852962 485000) 0 nil])
([nil nil ((701 . 702)) nil (25919 56263 852957 313000) 0 nil])
([nil nil ((702 . 707)) nil (25919 56263 852956 870000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -703) (undo-tree-id1849 . -1) (#("i" 0 1 (fontified t)) . -704) (undo-tree-id1850 . -1) (#("s" 0 1 (fontified t)) . -705) (undo-tree-id1851 . -1) (#("t" 0 1 (fontified t face py-builtins-face)) . -706) (undo-tree-id1852 . -1) 707) nil (25919 56263 852955 967000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 702) (undo-tree-id1848 . -1) 703) nil (25919 56263 852953 444000) 0 nil])
([nil nil ((#(":" 0 1 (fontified t)) . -701) (undo-tree-id1846 . -1) (undo-tree-id1847 . -1) 702) nil (25919 56263 852952 418000) 0 nil])
([nil nil ((679 . 683)) nil (25919 56263 852951 230000) 0 nil])
([nil nil ((683 . 684)) nil (25919 56263 852950 843000) 0 nil])
([nil nil ((684 . 685)) nil (25919 56263 852950 450000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 689)) nil (25919 56263 852949 899000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 690) (690 . 691) (#(" " 0 1 (fontified t)) . 690) (undo-tree-id1844 . -1) (undo-tree-id1845 . -1) 691) nil (25919 56263 852949 238000) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . 684) (684 . 685) (#(" " 0 1 (fontified t)) . 684) (undo-tree-id1842 . -1) (undo-tree-id1843 . -1) 685) nil (25919 56263 852947 570000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -679) (undo-tree-id1832 . -1) (undo-tree-id1833 . -1) (#("i" 0 1 (fontified t)) . -680) (undo-tree-id1834 . -1) (undo-tree-id1835 . -1) (#("s" 0 1 (fontified t)) . -681) (undo-tree-id1836 . -1) (undo-tree-id1837 . -1) (#("t" 0 1 (fontified t)) . -682) (undo-tree-id1838 . -1) (undo-tree-id1839 . -1) (#(":" 0 1 (fontified t)) . -683) (undo-tree-id1840 . -1) (undo-tree-id1841 . -1) 684) nil (25919 56263 852945 355000) 0 nil])
([nil nil ((713 . 734)) nil (25919 56263 852941 242000) 0 nil])
([nil nil ((734 . 740)) nil (25919 56263 852940 876000) 0 nil])
([nil nil ((740 . 761)) nil (25919 56263 852940 273000) 0 nil])
([nil nil ((761 . 778)) nil (25919 56263 852939 894000) 0 nil])
([nil nil ((778 . 793)) nil (25919 56263 852939 575000) 0 nil])
([nil nil ((#("l" 0 1 (fontified t face font-lock-comment-face)) . -791) (undo-tree-id1829 . -1) (undo-tree-id1830 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -792) (undo-tree-id1831 . -1) 793) nil (25919 56263 852938 749000) 0 nil])
([nil nil ((791 . 796)) nil (25919 56263 852937 218000) 0 nil])
([nil nil ((#("y" 0 1 (fontified t face font-lock-comment-face)) . -795) (undo-tree-id1828 . -1) 796) nil (25919 56263 852936 714000) 0 nil])
([nil nil ((795 . 796)) nil (25919 56263 852934 906000) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-comment-face)) . -795) (undo-tree-id1827 . -1) 796) nil (25919 56263 852934 259000) 0 nil])
([nil nil ((795 . 796)) nil (25919 56263 852933 391000) 0 nil])
([nil nil ((796 . 801)) nil (25919 56263 852932 977000) 0 nil])
([nil nil ((801 . 805)) nil (25919 56263 852932 565000) 0 nil])
([nil nil ((805 . 808)) nil (25919 56263 852932 158000) 0 nil])
([nil nil ((808 . 809)) nil (25919 56263 852931 751000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t face py-number-face)) . -808) (undo-tree-id1825 . -1) (undo-tree-id1826 . -1) 809) nil (25919 56263 852931 197000) 0 nil])
([nil nil ((808 . 810)) nil (25919 56263 852930 27000) 0 nil])
([nil nil ((810 . 817)) nil (25919 56263 852929 672000) 0 nil])
([nil nil ((#("1" 0 1 (fontified t face py-number-face)) . -808) (undo-tree-id1807 . -1) (undo-tree-id1808 . -1) (#("*" 0 1 (fontified t)) . -809) (undo-tree-id1809 . -1) (undo-tree-id1810 . -1) (#("d" 0 1 (fontified t)) . -810) (undo-tree-id1811 . -1) (undo-tree-id1812 . -1) (#("a" 0 1 (fontified t)) . -811) (undo-tree-id1813 . -1) (undo-tree-id1814 . -1) (#("y" 0 1 (fontified t)) . -812) (undo-tree-id1815 . -1) (undo-tree-id1816 . -1) (#("s" 0 1 (fontified t)) . -813) (undo-tree-id1817 . -1) (undo-tree-id1818 . -1) (#("[" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -814) (undo-tree-id1819 . -1) (undo-tree-id1820 . -1) (#("0" 0 1 (fontified t face py-number-face)) . -815) (undo-tree-id1821 . -1) (undo-tree-id1822 . -1) (#("]" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -816) (undo-tree-id1823 . -1) (undo-tree-id1824 . -1) 817) nil (25919 56263 852927 796000) 0 nil])
([nil nil ((796 . 801)) nil (25919 56263 852919 852000) 0 nil])
([nil nil ((801 . 816)) nil (25919 56263 852919 449000) 0 nil])
([nil nil ((816 . 817)) nil (25919 56263 852919 103000) 0 nil])
([nil nil ((796 . 801)) nil (25919 56263 852918 656000) 0 nil])
([nil nil ((801 . 808)) nil (25919 56263 852918 235000) 0 nil])
([nil nil ((808 . 813)) nil (25919 56263 852917 765000) 0 nil])
([nil nil ((813 . 814)) nil (25919 56263 852917 431000) 0 nil])
([nil nil ((#("2" 0 1 (fontified t face py-number-face)) . -813) (undo-tree-id1805 . -1) (undo-tree-id1806 . -1) 814) nil (25919 56263 852916 919000) 0 nil])
([nil nil ((829 . 833)) nil (25919 56263 852915 720000) 0 nil])
([nil nil ((837 . 839)) nil (25919 56263 852915 397000) 0 nil])
([nil nil ((#("day" 0 3 (fontified t)) . -822) (undo-tree-id1802 . -3) (undo-tree-id1803 . -3) (undo-tree-id1804 . -3) 825) nil (25919 56263 852914 805000) 0 nil])
([nil nil ((822 . 823)) nil (25919 56263 852913 298000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -818) (undo-tree-id1794 . -1) (undo-tree-id1795 . -1) (#("o" 0 1 (fontified t)) . -819) (undo-tree-id1796 . -1) (undo-tree-id1797 . -1) (#("r" 0 1 (fontified t)) . -820) (undo-tree-id1798 . -1) (undo-tree-id1799 . -1) (#(" " 0 1 (fontified nil)) . 821) (821 . 822) (#(" " 0 1 (fontified t)) . 821) (undo-tree-id1800 . -1) (undo-tree-id1801 . -1) 822) nil (25919 56263 852912 106000) 0 nil])
([nil nil ((818 . 822)) nil (25919 56263 852908 549000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -818) (undo-tree-id1790 . -1) (#("n" 0 1 (fontified t)) . -819) (undo-tree-id1791 . -1) (#("u" 0 1 (fontified t)) . -820) (undo-tree-id1792 . -1) (#("m" 0 1 (fontified t)) . -821) (undo-tree-id1793 . -1) 822) nil (25919 56263 852907 529000) 0 nil])
([nil nil ((818 . 822)) nil (25919 56263 852905 100000) 0 nil])
([nil nil ((823 . 825)) nil (25919 56263 852904 680000) 0 nil])
([nil nil ((#("j" 0 1 (fontified t)) . -824) (undo-tree-id1789 . -1) 825) nil (25919 56263 852904 194000) 0 nil])
([nil nil ((824 . 826)) nil (25919 56263 852903 354000) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 830) (#("n" 0 1 (fontified t)) . 830) (#("e" 0 1 (fontified t)) . 830) (#("l" 0 1 (fontified t face py-builtins-face)) . 830)) nil (25919 56263 852902 491000) 0 nil])
([nil nil ((830 . 832)) nil (25919 56263 852901 833000) 0 nil])
([nil nil ((832 . 840)) nil (25919 56263 852901 464000) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . -844) (undo-tree-id1784 . -1) (undo-tree-id1785 . -1) (undo-tree-id1786 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . -845) (undo-tree-id1787 . -1) (undo-tree-id1788 . -1) 846) nil (25919 56263 852900 726000) 0 nil])
([nil nil ((845 . 854)) nil (25919 56263 852898 68000) 0 nil])
([nil nil ((854 . 858)) nil (25919 56263 852897 552000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -827) (undo-tree-id1778 . -1) (undo-tree-id1779 . -1) (undo-tree-id1780 . -1) (#("n" 0 1 (fontified t face font-lock-keyword-face)) . -828) (undo-tree-id1781 . -1) (undo-tree-id1782 . -1) (undo-tree-id1783 . -1) 829) nil (25919 56263 852896 749000) 0 nil])
([nil nil ((826 . 827) (#("  " 0 1 (fontified t) 1 2 (fontified t)) . 826) (undo-tree-id1775 . -1) (undo-tree-id1776 . -1) (undo-tree-id1777 . -1) 827) nil (25919 56263 852894 73000) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -818) (undo-tree-id1769 . -1) (undo-tree-id1770 . -1) (#("o" 0 1 (fontified t)) . -819) (undo-tree-id1771 . -1) (undo-tree-id1772 . -1) (#("r" 0 1 (fontified t face font-lock-keyword-face)) . -820) (undo-tree-id1773 . -1) (undo-tree-id1774 . -1) 821) nil (25919 56263 852892 47000) 0 nil])
([nil nil ((818 . 822)) nil (25919 56263 852889 443000) 0 nil])
([nil nil ((818 . 827) (#("enu" 0 3 (fontified nil)) . -818) (818 . 821) (#("enumerate" 0 9 (fontified nil)) . -818) (818 . 827) (#("enum" 0 4 (fontified t)) . -818) (undo-tree-id1768 . -4) 822) nil (25919 56263 852888 548000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -833) (undo-tree-id1762 . -1) (undo-tree-id1763 . -1) (#("n" 0 1 (fontified t)) . -834) (undo-tree-id1764 . -1) (undo-tree-id1765 . -1) (#("u" 0 1 (fontified t face py-builtins-face)) . -835) (undo-tree-id1766 . -1) (undo-tree-id1767 . -1) 836) nil (25919 56263 852886 860000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . 833) (#("t" 0 1 (fontified t)) . 833) (#("a" 0 1 (fontified t)) . 833) (#("r" 0 1 (fontified t)) . 833) (#("e" 0 1 (fontified t)) . 833) (#("m" 0 1 (fontified t)) . 833)) nil (25919 56263 852883 145000) 0 nil])
([nil nil ((832 . 833) (#("  " 0 1 (fontified t) 1 2 (fontified t)) . 832) (undo-tree-id1760 . -1) (undo-tree-id1761 . -1) 833) nil (25919 56263 852881 838000) 0 nil])
([nil nil ((832 . 835)) nil (25919 56263 852880 604000) 0 nil])
([nil nil ((#("enumerate" 0 9 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t face py-builtins-face)) . -818) (undo-tree-id1757 . -9) (undo-tree-id1758 . -9) (undo-tree-id1759 . -9) 827) nil (25919 56263 852879 966000) 0 nil])
([nil nil ((818 . 821)) nil (25919 56263 852878 422000) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -823) (undo-tree-id1755 . -1) (undo-tree-id1756 . -1) 824) nil (25919 56263 852877 883000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . 823) (#(" " 0 1 (fontified t)) . 823) (undo-tree-id1754 . -1) (#("j" 0 1 (fontified t)) . 823) (#(" " 0 1 (fontified t)) . 823)) nil (25919 56263 852876 254000) 0 nil])
([nil nil ((823 . 825)) nil (25919 56263 852875 115000) 0 nil])
([nil nil ((827 . 837)) nil (25919 56263 852874 705000) 0 nil])
([nil nil ((841 . 843)) nil (25919 56263 852874 306000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -853) (undo-tree-id1746 . -1) (undo-tree-id1747 . -1) (#("a" 0 1 (fontified t)) . -854) (undo-tree-id1748 . -1) (undo-tree-id1749 . -1) (#("s" 0 1 (fontified t)) . -855) (undo-tree-id1750 . -1) (undo-tree-id1751 . -1) (#("s" 0 1 (fontified t face font-lock-keyword-face)) . -856) (undo-tree-id1752 . -1) (undo-tree-id1753 . -1) 857) nil (25919 56263 852873 364000) 0 nil])
([nil nil ((853 . 859)) nil (25919 56263 852870 70000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -858) (undo-tree-id1745 . -1) 859) nil (25919 56263 852869 506000) 0 nil])
([nil nil ((858 . 859)) nil (25919 56263 852868 597000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face py-variable-name-face)) . -801) (undo-tree-id1739 . -1) (undo-tree-id1740 . -1) (#("u" 0 1 (fontified t face py-variable-name-face)) . -802) (undo-tree-id1741 . -1) (undo-tree-id1742 . -1) (#("m" 0 1 (fontified t face py-builtins-face)) . -803) (undo-tree-id1743 . -1) (undo-tree-id1744 . -1) 804) nil (25919 56263 852867 830000) 0 nil])
([nil nil ((801 . 802)) nil (25919 56263 852864 726000) 0 nil])
([nil nil ((#("i" 0 1 (fontified t face py-variable-name-face)) . -801) (undo-tree-id1738 . -1) 802) nil (25919 56263 852864 173000) 0 nil])
([nil nil ((801 . 804)) nil (25919 56263 852863 359000) 0 nil])
([nil nil ((804 . 810)) nil (25919 56263 852862 894000) 0 nil])
([nil nil ((862 . 865)) nil (25919 56263 852862 445000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face py-variable-name-face)) . -859) (undo-tree-id1729 . -1) (undo-tree-id1730 . -1) (#("u" 0 1 (fontified t face py-variable-name-face)) . -860) (undo-tree-id1731 . -1) (undo-tree-id1732 . -1) (#("m" 0 1 (fontified t face py-builtins-face)) . -861) (undo-tree-id1733 . -1) (undo-tree-id1734 . -1) (#("b" 0 1 (fontified t face py-variable-name-face)) . -862) (undo-tree-id1735 . -1) (#("i" 0 1 (fontified t face py-variable-name-face)) . -863) (undo-tree-id1736 . -1) (#("n" 0 1 (fontified t face py-variable-name-face)) . -864) (undo-tree-id1737 . -1) 865) nil (25919 56263 852861 220000) 0 nil])
([nil nil ((859 . 862)) nil (25919 56263 852857 409000) 0 nil])
([nil nil ((859 . 862) (#("bin" 0 3 (fontified nil)) . -859) (859 . 862) (#("bin" 0 3 (fontified t face py-builtins-face)) . -859) (undo-tree-id1728 . -3) 862) nil (25919 56263 852856 748000) 0 nil])
([nil nil ((862 . 864)) nil (25919 56263 852855 545000) 0 nil])
([nil nil ((859 . 868) (#("binNu" 0 5 (fontified nil)) . -859) (859 . 864) (#("binNumber" 0 9 (fontified nil)) . -859) (859 . 868) (#("binNu" 0 5 (match-data (0 3 0 1 1 2 2 3) fontified t face py-variable-name-face)) . -859) (undo-tree-id1726 . -3) (undo-tree-id1727 . -5) 864) nil (25919 56263 852854 761000) 0 nil])
([nil nil ((871 . 875)) nil (25919 56263 852853 230000) 0 nil])
([nil nil ((875 . 876)) nil (25919 56263 852852 830000) 0 nil])
([nil nil ((872 . 880)) nil (25919 56263 852852 418000) 0 nil])
([nil nil ((896 . 905)) nil (25919 56263 852851 962000) 0 nil])
([nil nil ((796 . 801)) nil (25919 56263 852851 544000) 0 nil])
([nil nil ((801 . 802)) nil (25919 56263 852850 900000) 0 nil])
([nil nil ((802 . 807)) nil (25919 56263 852850 491000) 0 nil])
([nil nil ((807 . 810)) nil (25919 56263 852850 53000) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-comment-face)) . -808) (undo-tree-id1724 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -809) (undo-tree-id1725 . -1) 810) nil (25919 56263 852849 137000) 0 nil])
([nil nil ((808 . 829)) nil (25919 56263 852847 640000) 0 nil])
([nil nil ((829 . 830)) nil (25919 56263 852847 219000) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face font-lock-comment-face)) . -829) (undo-tree-id1722 . -1) (undo-tree-id1723 . -1) 830) nil (25919 56263 852846 627000) 0 nil])
([nil nil ((829 . 830)) nil (25919 56263 852844 905000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 829) (undo-tree-id1720 . -1) (undo-tree-id1721 . -1) 830) nil (25919 56263 852844 398000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face font-lock-comment-face)) . -828) (undo-tree-id1718 . -1) (undo-tree-id1719 . -1) 829) nil (25919 56263 852843 126000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 827) (undo-tree-id1716 . -1) (undo-tree-id1717 . -1) 828) nil (25919 56263 852841 427000) 0 nil])
([nil nil ((827 . 837)) nil (25919 56263 852840 303000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face font-lock-comment-face)) . -836) (undo-tree-id1715 . -1) 837) nil (25919 56263 852839 798000) 0 nil])
([nil nil ((836 . 837)) nil (25919 56263 852838 961000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face font-lock-comment-face)) . -836) (undo-tree-id1713 . -1) (undo-tree-id1714 . -1) 837) nil (25919 56263 852838 392000) 0 nil])
([nil nil ((836 . 850)) nil (25919 56263 852837 296000) 0 nil])
([nil nil ((#("[" 0 1 (fontified t face font-lock-comment-face)) . -849) (undo-tree-id1711 . -1) (undo-tree-id1712 . -1) 850) nil (25919 56263 852836 732000) 0 nil])
([nil nil ((849 . 856)) nil (25919 56263 852835 496000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-comment-face)) . -849) (undo-tree-id1698 . -1) (undo-tree-id1699 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -850) (undo-tree-id1700 . -1) (undo-tree-id1701 . -1) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -851) (undo-tree-id1702 . -1) (undo-tree-id1703 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -852) (undo-tree-id1704 . -1) (undo-tree-id1705 . -1) (#("[" 0 1 (fontified t face font-lock-comment-face)) . -853) (undo-tree-id1706 . -1) (undo-tree-id1707 . -1) (#("6" 0 1 (fontified t face font-lock-comment-face)) . -854) (undo-tree-id1708 . -1) (undo-tree-id1709 . -1) (#("]" 0 1 (fontified t face font-lock-comment-face)) . -855) (undo-tree-id1710 . -1) 856) nil (25919 56263 852833 362000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 848) (undo-tree-id1696 . -1) (undo-tree-id1697 . -1) 849) nil (25919 56263 852827 545000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face font-lock-comment-face)) . -847) (undo-tree-id1694 . -1) (undo-tree-id1695 . -1) 848) nil (25919 56263 852826 236000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 846) (undo-tree-id1692 . -1) (undo-tree-id1693 . -1) 847) nil (25919 56263 852824 857000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -838) (undo-tree-id1676 . -1) (undo-tree-id1677 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -839) (undo-tree-id1678 . -1) (undo-tree-id1679 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -840) (undo-tree-id1680 . -1) (undo-tree-id1681 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -841) (undo-tree-id1682 . -1) (undo-tree-id1683 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -842) (undo-tree-id1684 . -1) (undo-tree-id1685 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -843) (undo-tree-id1686 . -1) (undo-tree-id1687 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -844) (undo-tree-id1688 . -1) (undo-tree-id1689 . -1) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -845) (undo-tree-id1690 . -1) (undo-tree-id1691 . -1) 846) nil (25919 56263 852822 653000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 837) (undo-tree-id1674 . -1) (undo-tree-id1675 . -1) 838) nil (25919 56263 852815 661000) 0 nil])
([nil nil ((#("d" 0 1 (fontified t face font-lock-comment-face)) . -830) (undo-tree-id1660 . -1) (undo-tree-id1661 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -831) (undo-tree-id1662 . -1) (undo-tree-id1663 . -1) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -832) (undo-tree-id1664 . -1) (undo-tree-id1665 . -1) (#("s" 0 1 (fontified t face font-lock-comment-face)) . -833) (undo-tree-id1666 . -1) (undo-tree-id1667 . -1) (#("[" 0 1 (fontified t face font-lock-comment-face)) . -834) (undo-tree-id1668 . -1) (undo-tree-id1669 . -1) (#("0" 0 1 (fontified t face font-lock-comment-face)) . -835) (undo-tree-id1670 . -1) (undo-tree-id1671 . -1) (#("]" 0 1 (fontified t face font-lock-comment-face)) . -836) (undo-tree-id1672 . -1) (undo-tree-id1673 . -1) 837) nil (25919 56263 852813 623000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 829) (undo-tree-id1658 . -1) (undo-tree-id1659 . -1) 830) nil (25919 56263 852807 278000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face font-lock-comment-face)) . -828) (undo-tree-id1656 . -1) (undo-tree-id1657 . -1) 829) nil (25919 56263 852805 911000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 827) (undo-tree-id1654 . -1) (undo-tree-id1655 . -1) 828) nil (25919 56263 852804 630000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-comment-face)) . -821) (undo-tree-id1642 . -1) (undo-tree-id1643 . -1) (#("u" 0 1 (fontified t face font-lock-comment-face)) . -822) (undo-tree-id1644 . -1) (undo-tree-id1645 . -1) (#("n" 0 1 (fontified t face font-lock-comment-face)) . -823) (undo-tree-id1646 . -1) (undo-tree-id1647 . -1) (#("d" 0 1 (fontified t face font-lock-comment-face)) . -824) (undo-tree-id1648 . -1) (undo-tree-id1649 . -1) (#("a" 0 1 (fontified t face font-lock-comment-face)) . -825) (undo-tree-id1650 . -1) (undo-tree-id1651 . -1) (#("y" 0 1 (fontified t face font-lock-comment-face)) . -826) (undo-tree-id1652 . -1) (undo-tree-id1653 . -1) 827) nil (25919 56263 852802 679000) 0 nil])
([nil nil ((821 . 834)) nil (25919 56263 852797 783000) 0 nil])
([nil nil ((834 . 855)) nil (25919 56263 852797 440000) 0 nil])
([nil nil ((855 . 876)) nil (25919 56263 852797 41000) 0 nil])
([nil nil ((876 . 880)) nil (25919 56263 852796 698000) 0 nil])
([nil nil ((989 . 991)) nil (25919 56263 852796 313000) 0 nil])
([nil nil ((990 . 991)) nil (25919 56263 852795 911000) 0 nil])
([nil nil ((991 . 993)) nil (25919 56263 852795 523000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -991) (undo-tree-id1640 . -1) (#("i" 0 1 (fontified t)) . -992) (undo-tree-id1641 . -1) 993) nil (25919 56263 852794 886000) 0 nil])
([nil nil ((991 . 1002)) nil (25919 56263 852793 606000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face py-def-face)) . -1001) (undo-tree-id1639 . -1) 1002) nil (25919 56263 852793 6000) 0 nil])
([nil nil ((1001 . 1013)) nil (25919 56263 852791 539000) 0 nil])
([nil nil ((1013 . 1014)) nil (25919 56263 852791 135000) 0 nil])
([nil nil ((1014 . 1015)) nil (25919 56263 852790 737000) 0 nil])
([nil nil ((1015 . 1020)) nil (25919 56263 852790 333000) 0 nil])
([nil nil ((894 . 896)) nil (25919 56263 852789 960000) 0 nil])
([nil nil ((#("b" 0 1 (fontified t face py-variable-name-face)) . -885) (undo-tree-id1618 . -1) (undo-tree-id1619 . -1) (#("i" 0 1 (fontified t face py-variable-name-face)) . -886) (undo-tree-id1620 . -1) (undo-tree-id1621 . -1) (#("n" 0 1 (fontified t face py-builtins-face)) . -887) (undo-tree-id1622 . -1) (undo-tree-id1623 . -1) (#("N" 0 1 (fontified t face py-variable-name-face)) . -888) (undo-tree-id1624 . -1) (undo-tree-id1625 . -1) (#("u" 0 1 (fontified t face py-variable-name-face)) . -889) (undo-tree-id1626 . -1) (undo-tree-id1627 . -1) (#("m" 0 1 (fontified t face py-variable-name-face)) . -890) (undo-tree-id1628 . -1) (undo-tree-id1629 . -1) (#("b" 0 1 (fontified t face py-variable-name-face)) . -891) (undo-tree-id1630 . -1) (undo-tree-id1631 . -1) (#("e" 0 1 (fontified t face py-variable-name-face)) . -892) (undo-tree-id1632 . -1) (undo-tree-id1633 . -1) (#("r" 0 1 (fontified t face py-variable-name-face)) . -893) (undo-tree-id1634 . -1) (undo-tree-id1635 . -1) (#("n" 0 1 (fontified t face py-variable-name-face)) . -894) (undo-tree-id1636 . -1) (undo-tree-id1637 . -1) (#("u" 0 1 (fontified t face py-variable-name-face)) . -895) (undo-tree-id1638 . -1) 896) nil (25919 56263 852787 825000) 0 nil])
([nil nil ((885 . 891)) nil (25919 56263 852767 658000) 0 nil])
([nil nil ((#("binNumber" 0 9 (match-data (0 5 0 1 1 2 2 3 3 4 4 5) fontified t face py-variable-name-face)) . -940) (undo-tree-id1615 . -9) (undo-tree-id1616 . -9) (undo-tree-id1617 . -9) 949) nil (25919 56263 852767 124000) 0 nil])
([nil nil ((940 . 946)) nil (25919 56263 852765 585000) 0 nil])
([nil nil ((#("binNumber" 0 9 (fontified t)) . -974) (undo-tree-id1612 . -9) (undo-tree-id1613 . -9) (undo-tree-id1614 . -9) 983) nil (25919 56263 852764 891000) 0 nil])
([nil nil ((974 . 980)) nil (25919 56263 852763 439000) 0 nil])
([nil nil ((1011 . 1012)) nil (25919 56263 852763 13000) 0 nil])
([nil nil ((1012 . 1033)) nil (25919 56263 852762 640000) 0 nil])
([nil nil ((1033 . 1054)) nil (25919 56263 852762 228000) 0 nil])
([nil nil ((1054 . 1066)) nil (25919 56263 852761 857000) 0 nil])
([nil nil ((1066 . 1073)) nil (25919 56263 852761 502000) 0 nil])
([nil nil ((#("v" 0 1 (fontified t face font-lock-comment-face)) . -1067) (undo-tree-id1606 . -1) (#("e" 0 1 (fontified t face font-lock-comment-face)) . -1068) (undo-tree-id1607 . -1) (#("c" 0 1 (fontified t face font-lock-comment-face)) . -1069) (undo-tree-id1608 . -1) (#("t" 0 1 (fontified t face font-lock-comment-face)) . -1070) (undo-tree-id1609 . -1) (#("o" 0 1 (fontified t face font-lock-comment-face)) . -1071) (undo-tree-id1610 . -1) (#("r" 0 1 (fontified t face font-lock-comment-face)) . -1072) (undo-tree-id1611 . -1) 1073) nil (25919 56263 852760 502000) 0 nil])
([nil nil ((1067 . 1080)) nil (25919 56263 852757 426000) 0 nil])
([nil nil ((1080 . 1085)) nil (25919 56263 852757 20000) 0 nil])
([nil nil ((1085 . 1096)) nil (25919 56263 852756 605000) 0 nil])
([nil nil ((#("    # chatGPT reverse the above algorithm to give me a days binary vector" 0 4 (fontified t) 4 73 (fontified t face font-lock-comment-face)) . 1007) (undo-tree-id1604 . -73) (undo-tree-id1605 . -73)) nil (25919 56263 852756 51000) 0 nil])
([nil nil ((1007 . 1011)) nil (25919 56263 852754 876000) 0 nil])
([nil nil ((1011 . 1020)) nil (25919 56263 852754 439000) 0 nil])
([nil nil ((1022 . 1026) (#("    " 0 4 (fontified nil)) . 1021) (undo-tree-id1602 . -4) (undo-tree-id1603 . -4) (1020 . 1026)) nil (25919 56263 852753 734000) 0 nil])
([nil nil ((1026 . 1042)) nil (25919 56263 852752 379000) 0 nil])
([nil nil ((#("6" 0 1 (fontified t face py-number-face)) . -1041) (undo-tree-id1600 . -1) (undo-tree-id1601 . -1) 1042) nil (25919 56263 852751 922000) 0 nil])
([nil nil ((1041 . 1042)) nil (25919 56263 852750 692000) 0 nil])
([nil nil ((1042 . 1044)) nil (25919 56263 852750 267000) 0 nil])
([nil nil ((#(";" 0 1 (fontified t)) . -1043) (undo-tree-id1597 . -1) (undo-tree-id1598 . -1) (undo-tree-id1599 . -1) 1044) nil (25919 56263 852749 726000) 0 nil])
([nil nil ((1043 . 1044)) nil (25919 56263 852747 725000) 0 nil])
([nil nil ((1044 . 1053)) nil (25919 56263 852747 314000) 0 nil])
([nil nil ((1053 . 1054)) nil (25919 56263 852746 794000) 0 nil])
([nil nil ((1054 . 1075)) nil (25919 56263 852746 408000) 0 nil])
([nil nil ((1075 . 1091)) nil (25919 56263 852745 970000) 0 nil])
([nil nil ((#(" " 0 1 (fontified t face font-lock-comment-face)) . 1090) (undo-tree-id1595 . -1) (undo-tree-id1596 . -1) 1091) nil (25919 56263 852745 379000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face font-lock-comment-face)) . -1089) (undo-tree-id1593 . -1) (undo-tree-id1594 . -1) 1090) nil (25919 56263 852743 921000) 0 nil])
([nil nil ((1089 . 1091)) nil (25919 56263 852742 663000) 0 nil])
([nil nil ((#("9" 0 1 (fontified t face font-lock-comment-face)) . -1089) (undo-tree-id1589 . -1) (undo-tree-id1590 . -1) (#("0" 0 1 (fontified t face font-lock-comment-face)) . -1090) (undo-tree-id1591 . -1) (undo-tree-id1592 . -1) 1091) nil (25919 56263 852741 929000) 0 nil])
([nil nil ((1089 . 1098)) nil (25919 56263 852740 49000) 0 nil])
([nil nil ((1098 . 1107)) nil (25919 56263 852739 651000) 0 nil])
([nil nil ((1107 . 1117)) nil (25919 56263 852739 298000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face font-lock-operator-face)) . -1116) (undo-tree-id1587 . -1) (undo-tree-id1588 . -1) 1117) nil (25919 56263 852738 694000) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 1114) (undo-tree-id1585 . -2) (undo-tree-id1586 . -2) 1116) nil (25919 56263 852737 412000) 0 nil])
([nil nil ((1114 . 1115)) nil (25919 56263 852736 316000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t face font-lock-operator-face)) . -1114) (undo-tree-id1583 . -1) (undo-tree-id1584 . -1) 1115) nil (25919 56263 852735 716000) 0 nil])
([nil nil ((1114 . 1120)) nil (25919 56263 852734 460000) 0 nil])
([nil nil ((1117 . 1126) (#("bin" 0 3 (fontified nil)) . -1117) (1117 . 1120) (#("binNumber" 0 9 (fontified nil)) . -1117) (1117 . 1126) (#("bin" 0 3 (fontified t face py-builtins-face)) . -1117) (undo-tree-id1582 . -3) 1120) nil (25919 56263 852733 362000) 0 nil])
([nil nil ((1126 . 1130)) nil (25919 56263 852732 90000) 0 nil])
([nil nil ((1130 . 1139)) nil (25919 56263 852731 647000) 0 nil])
([nil nil ((1139 . 1146)) nil (25919 56263 852731 212000) 0 nil])
([nil nil ((1144 . 1150) (#("ap" 0 2 (fontified nil)) . -1144) (1144 . 1146) (#("append" 0 6 (fontified nil)) . -1144) (1144 . 1150) (#("ap" 0 2 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1144) (undo-tree-id1581 . -2) 1146) nil (25919 56263 852730 445000) 0 nil])
([nil nil ((1150 . 1154)) nil (25919 56263 852729 308000) 0 nil])
([nil nil ((1151 . 1158) (#("day" 0 3 (fontified nil)) . -1151) (1151 . 1154) (#("day_bit" 0 7 (fontified nil)) . -1151) (1151 . 1158) (#("day" 0 3 (match-data (0 2 0 1 1 2) fontified t)) . -1151) (undo-tree-id1579 . -3) (undo-tree-id1580 . -3) 1154) nil (25919 56263 852728 451000) 0 nil])
([nil nil ((1158 . 1159)) nil (25919 56263 852726 882000) 0 nil])
([nil nil ((1159 . 1168)) nil (25919 56263 852726 474000) 0 nil])
([nil nil ((1168 . 1169)) nil (25919 56263 852726 96000) 0 nil])
([nil nil ((#("b" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1168) (undo-tree-id1578 . -1) 1169) nil (25919 56263 852725 310000) 0 nil])
([nil nil ((1168 . 1174)) nil (25919 56263 852724 410000) 0 nil])
([nil nil ((#("n" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1168) (undo-tree-id1572 . -1) (#("u" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1169) (undo-tree-id1573 . -1) (#("m" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1170) (undo-tree-id1574 . -1) (#("b" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1171) (undo-tree-id1575 . -1) (#("e" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1172) (undo-tree-id1576 . -1) (#("r" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1173) (undo-tree-id1577 . -1) 1174) nil (25919 56263 852723 323000) 0 nil])
([nil nil ((1168 . 1171)) nil (25919 56263 852719 871000) 0 nil])
([nil nil ((1168 . 1177) (#("bin" 0 3 (fontified nil)) . -1168) (1168 . 1171) (#("binNumber" 0 9 (fontified nil)) . -1168) (1168 . 1177) (#("bin" 0 3 (match-data (0 3 0 1 1 2 2 3) fontified t face py-builtins-face)) . -1168) (undo-tree-id1571 . -3) 1171) nil (25919 56263 852719 53000) 0 nil])
([nil nil ((1177 . 1181)) nil (25919 56263 852717 799000) 0 nil])
([nil nil ((1180 . 1181)) nil (25919 56263 852717 399000) 0 nil])
([nil nil ((1177 . 1178)) nil (25919 56263 852717 51000) 0 nil])
([nil nil ((1183 . 1192)) nil (25919 56263 852716 696000) 0 nil])
([nil nil ((#("    " 0 4 (match-data (0 3 0 1 1 2 2 3) fontified t)) . 1188) (undo-tree-id1569 . -4) (undo-tree-id1570 . -4) 1192) nil (25919 56263 852716 136000) 0 nil])
([nil nil ((1188 . 1189)) nil (25919 56263 852714 961000) 0 nil])
([nil nil ((#("d" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1188) (undo-tree-id1568 . -1) 1189) nil (25919 56263 852714 407000) 0 nil])
([nil nil ((1204 . 1214)) nil (25919 56263 852713 526000) 0 nil])
([nil nil ((666 . 670) (#("    " 0 4 (fontified nil)) . 665) (undo-tree-id1566 . -4) (undo-tree-id1567 . -4) (664 . 670)) nil (25919 56263 852712 875000) 0 nil])
([nil nil ((670 . 674)) nil (25919 56263 852711 609000) 0 nil])
([nil nil ((#("_" 0 1 (fontified t)) . -673) (undo-tree-id1564 . -1) (undo-tree-id1565 . -1) 674) nil (25919 56263 852711 17000) 0 nil])
([nil nil ((673 . 676)) nil (25919 56263 852709 735000) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -674) (undo-tree-id1560 . -1) (undo-tree-id1561 . -1) (#("_" 0 1 (fontified t face py-builtins-face)) . -675) (undo-tree-id1562 . -1) (undo-tree-id1563 . -1) 676) nil (25919 56263 852709 22000) 0 nil])
([nil nil ((674 . 679)) nil (25919 56263 852707 64000) 0 nil])
([nil nil ((apply yas--snippet-revive 674 724 #s(yas--snippet nil nil nil 0 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 0 nil nil nil nil)) (674 . 724) (#("__init__(self) -> None:
        super().__init__()" 0 50 (fontified nil)) . 674) (698 . 706) (#("    " 0 4 (fontified nil)) . 698) (674 . 720) (#("__i" 0 3 (fontified nil)) . 674) (674 . 677) (#("__init__" 0 8 (fontified nil)) . -674) (674 . 682) (#("__ini" 0 5 (fontified t face py-def-face)) . -674) (undo-tree-id1559 . -5) 679) nil (25919 56263 852705 967000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t)) . -706) (undo-tree-id1523 . -1) (undo-tree-id1524 . -1) (#("u" 0 1 (fontified t)) . -707) (undo-tree-id1525 . -1) (undo-tree-id1526 . -1) (#("p" 0 1 (fontified t)) . -708) (undo-tree-id1527 . -1) (undo-tree-id1528 . -1) (#("e" 0 1 (fontified t)) . -709) (undo-tree-id1529 . -1) (undo-tree-id1530 . -1) (#("r" 0 1 (fontified t face py-builtins-face)) . -710) (undo-tree-id1531 . -1) (undo-tree-id1532 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -711) (undo-tree-id1533 . -1) (undo-tree-id1534 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -712) (undo-tree-id1535 . -1) (undo-tree-id1536 . -1) (#("." 0 1 (fontified t)) . -713) (undo-tree-id1537 . -1) (undo-tree-id1538 . -1) (#("_" 0 1 (fontified t)) . -714) (undo-tree-id1539 . -1) (undo-tree-id1540 . -1) (#("_" 0 1 (fontified t)) . -715) (undo-tree-id1541 . -1) (undo-tree-id1542 . -1) (#("i" 0 1 (fontified t)) . -716) (undo-tree-id1543 . -1) (undo-tree-id1544 . -1) (#("n" 0 1 (fontified t)) . -717) (undo-tree-id1545 . -1) (undo-tree-id1546 . -1) (#("i" 0 1 (fontified t)) . -718) (undo-tree-id1547 . -1) (undo-tree-id1548 . -1) (#("t" 0 1 (fontified t)) . -719) (undo-tree-id1549 . -1) (undo-tree-id1550 . -1) (#("_" 0 1 (fontified t)) . -720) (undo-tree-id1551 . -1) (undo-tree-id1552 . -1) (#("_" 0 1 (fontified t)) . -721) (undo-tree-id1553 . -1) (undo-tree-id1554 . -1) (#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -722) (undo-tree-id1555 . -1) (undo-tree-id1556 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -723) (undo-tree-id1557 . -1) (undo-tree-id1558 . -1) 724) nil (25919 56263 852702 36000) 0 nil])
([nil nil ((687 . 698)) nil (25919 56263 852687 538000) 0 nil])
([nil nil ((698 . 719)) nil (25919 56263 852687 131000) 0 nil])
([nil nil ((719 . 724)) nil (25919 56263 852686 698000) 0 nil])
([nil nil ((724 . 725)) nil (25919 56263 852686 301000) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -724) (undo-tree-id1521 . -1) (undo-tree-id1522 . -1) 725) nil (25919 56263 852685 777000) 0 nil])
([nil nil ((724 . 725)) nil (25919 56263 852684 502000) 0 nil])
([nil nil ((735 . 744)) nil (25919 56263 852684 76000) 0 nil])
([nil nil ((744 . 748)) nil (25919 56263 852683 757000) 0 nil])
([nil nil ((748 . 751)) nil (25919 56263 852683 379000) 0 nil])
([nil nil ((749 . 758) (#("pl" 0 2 (fontified nil)) . -749) (749 . 751) (#("player_id" 0 9 (fontified nil)) . -749) (749 . 758) (#("pl" 0 2 (fontified t)) . -749) (undo-tree-id1520 . -2) 751) nil (25919 56263 852682 551000) 0 nil])
([nil nil ((758 . 763)) nil (25919 56263 852681 228000) 0 nil])
([nil nil ((761 . 770) (#("pl" 0 2 (fontified nil)) . -761) (761 . 763) (#("player_id" 0 9 (fontified nil)) . -761) (761 . 770) (#("pl" 0 2 (match-data (0 2 0 1 1 2) fontified t)) . -761) (undo-tree-id1519 . -2) 763) nil (25919 56263 852680 390000) 0 nil])
([nil nil ((770 . 779)) nil (25919 56263 852678 727000) 0 nil])
([nil nil ((779 . 786)) nil (25919 56263 852678 379000) 0 nil])
([nil nil ((#("l" 0 1 (match-data (0 2 0 1 1 2) fontified t)) . -785) (undo-tree-id1518 . -1) 786) nil (25919 56263 852677 738000) 0 nil])
([nil nil ((785 . 786)) nil (25919 56263 852676 849000) 0 nil])
([nil nil ((784 . 793) (#("av" 0 2 (fontified nil)) . -784) (784 . 786) (#("available" 0 9 (fontified nil)) . -784) (784 . 793) (#("av" 0 2 (match-data (0 2 0 1 1 2) fontified t)) . -784) (undo-tree-id1516 . -1) (undo-tree-id1517 . -2) 786) nil (25919 56263 852675 941000) 0 nil])
([nil nil ((793 . 798)) nil (25919 56263 852674 346000) 0 nil])
([nil nil ((796 . 804) (#("da" 0 2 (fontified nil)) . -796) (796 . 798) (#("days2bin" 0 8 (fontified nil)) . -796) (796 . 804) (#("da" 0 2 (match-data (0 2 0 1 1 2) fontified t)) . -796) (undo-tree-id1515 . -2) 798) nil (25919 56263 852673 494000) 0 nil])
([nil nil ((804 . 806)) nil (25919 56263 852672 228000) 0 nil])
([nil nil ((805 . 814) (#("a" 0 1 (fontified nil)) . -805) (805 . 806) (#("available" 0 9 (fontified nil)) . -805) (805 . 814) (#("a" 0 1 (match-data (0 2 0 1 1 2) fontified t)) . -805) (undo-tree-id1514 . -1) 806) nil (25919 56263 852671 262000) 0 nil])
([nil nil ((814 . 815)) nil (25919 56263 852669 961000) 0 nil])
([nil nil ((665 . 669)) nil (25919 56263 852669 586000) 0 nil])
([nil nil ((669 . 683)) nil (25919 56263 852669 238000) 0 nil])
([nil nil ((681 . 693) (#("re" 0 2 (fontified nil)) . -681) (681 . 683) (#("relationship" 0 12 (fontified nil)) . -681) (681 . 693) (#("re" 0 2 (fontified t)) . -681) (undo-tree-id1512 . -2) (undo-tree-id1513 . -2) 683) nil (25919 56263 852668 349000) 0 nil])
([nil nil ((693 . 703)) nil (25919 56263 852666 109000) 0 nil])
([nil nil ((703 . 708)) nil (25919 56263 852665 719000) 0 nil])
([nil nil ((40 . 75) (704 . 711) (#("bac" 0 3 (fontified nil)) . 704) (704 . 707) (#("backref" 0 7 (fontified nil)) . -704) (704 . 711) (#("back" 0 4 (match-data (0 2 0 1 1 2) fontified t)) . -704) (undo-tree-id1510 . -4) (undo-tree-id1511 . -4) 708) nil (25919 56263 852664 715000) 0 nil])
([nil nil ((746 . 759)) nil (25919 56263 852663 128000) 0 nil])
([nil nil ((759 . 764)) nil (25919 56263 852662 723000) 0 nil])
([nil nil ((419 . 428)) nil (25919 56263 852662 323000) 0 nil])
([nil nil ((#("        " 0 8 (fontified t)) . 420) (undo-tree-id1508 . -8) (undo-tree-id1509 . -8)) nil (25919 56263 852661 466000) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . -419) (undo-tree-id1505 . -1) (undo-tree-id1506 . -1) (undo-tree-id1507 . -1) 420) nil (25919 56263 852660 259000) 0 nil])
([nil nil ((916 . 924) (#("        " 0 8 (match-data (0 1 0 1) fontified nil)) . 915) (undo-tree-id1503 . -8) (undo-tree-id1504 . -8) (914 . 924)) nil (25919 56263 852658 623000) 0 nil])
([nil nil ((#("    " 0 4 (match-data (0 1 0 1) fontified t)) . 920) (undo-tree-id1501 . -4) (undo-tree-id1502 . -4) 924) nil (25919 56263 852657 147000) 0 nil])
([nil nil ((920 . 941)) nil (25919 56263 852655 969000) 0 nil])
([nil nil ((941 . 957)) nil (25919 56263 852655 577000) 0 nil])
([nil nil ((#(" " 0 1 (match-data (0 1 0 1) fontified t)) . 956) (undo-tree-id1499 . -1) (undo-tree-id1500 . -1) 957) nil (25919 56263 852655 2000) 0 nil])
([nil nil ((956 . 967)) nil (25919 56263 852653 860000) 0 nil])
([nil nil ((967 . 975)) nil (25919 56263 852653 442000) 0 nil])
([nil nil ((#("-" 0 1 (match-data (0 1 0 1) fontified t)) . -974) (undo-tree-id1498 . -1) 975) nil (25919 56263 852652 887000) 0 nil])
([nil nil ((974 . 981)) nil (25919 56263 852652 80000) 0 nil])
([nil nil ((981 . 982)) nil (25919 56263 852651 694000) 0 nil])
([nil nil ((982 . 991)) nil (25919 56263 852651 262000) 0 nil])
([nil nil ((991 . 996)) nil (25919 56263 852650 822000) 0 nil])
([nil nil ((996 . 1005) (#("available" 0 9 (fontified nil)) . -996) (996 . 1005)) nil (25919 56263 852650 281000) 0 nil])
([nil nil ((1005 . 1009)) nil (25919 56263 852649 443000) 0 nil])
([nil nil ((1008 . 1016) (#("d" 0 1 (fontified nil)) . -1008) (1008 . 1009) (#("days2bin" 0 8 (fontified nil)) . -1008) (1008 . 1016) (#("d" 0 1 (match-data (0 0) fontified t)) . -1008) (undo-tree-id1496 . -1) (undo-tree-id1497 . -1) 1009) nil (25919 56263 852648 473000) 0 nil])
([nil nil ((#("=[0,0,0,0,0,0,0]" 0 1 (fontified t) 1 2 (fontified t face (rainbow-delimiters-depth-2-face)) 2 3 (fontified t face py-number-face) 3 4 (fontified t) 4 5 (fontified t face py-number-face) 5 6 (fontified t) 6 7 (fontified t face py-number-face) 7 8 (fontified t) 8 9 (fontified t face py-number-face) 9 10 (fontified t) 10 11 (fontified t face py-number-face) 11 12 (fontified t) 12 13 (fontified t face py-number-face) 13 14 (fontified t) 14 15 (fontified t face py-number-face) 15 16 (fontified t face (rainbow-delimiters-depth-2-face))) . -808) (undo-tree-id1493 . -16) (undo-tree-id1494 . -16) (undo-tree-id1495 . -16) 824) nil (25919 56263 852646 473000) 0 nil])
([nil nil ((#("ays2bin(" 0 7 (match-data (0 2 0 1 1 2) fontified t) 7 8 (match-data (0 2 0 1 1 2) fontified t face (rainbow-delimiters-depth-1-face))) . 880) (undo-tree-id1491 . -8) (undo-tree-id1492 . -8)) nil (25919 56263 852644 690000) 0 nil])
([nil nil ((#("d" 0 1 (match-data (0 2 0 1 1 2) fontified t)) . -879) (undo-tree-id1488 . -1) (undo-tree-id1489 . -1) (undo-tree-id1490 . -1) 880) nil (25919 56263 852642 436000) 0 nil])
([nil nil ((#(")" 0 1 (match-data (0 1 0 1) fontified t face (rainbow-delimiters-unmatched-face))) . -888) (undo-tree-id1486 . -1) (undo-tree-id1487 . -1) 889) nil (25919 56263 852640 756000) 0 nil])
([nil nil ((#("=[0,0,0,0,0,0,0]" 0 1 (match-data (0 1 0 1) fontified t) 1 2 (match-data (0 1 0 1) fontified t face (rainbow-delimiters-depth-2-face)) 2 3 (match-data (0 1 0 1) fontified t face py-number-face) 3 4 (match-data (0 1 0 1) fontified t) 4 5 (match-data (0 1 0 1) fontified t face py-number-face) 5 6 (match-data (0 1 0 1) fontified t) 6 7 (match-data (0 1 0 1) fontified t face py-number-face) 7 8 (match-data (0 1 0 1) fontified t) 8 9 (match-data (0 1 0 1) fontified t face py-number-face) 9 10 (match-data (0 1 0 1) fontified t) 10 11 (match-data (0 1 0 1) fontified t face py-number-face) 11 12 (match-data (0 1 0 1) fontified t) 12 13 (match-data (0 1 0 1) fontified t face py-number-face) 13 14 (match-data (0 1 0 1) fontified t) 14 15 (match-data (0 1 0 1) fontified t face py-number-face) 15 16 (match-data (0 1 0 1) fontified t face (rainbow-delimiters-depth-2-face))) . -930) (undo-tree-id1483 . -16) (undo-tree-id1484 . -16) (undo-tree-id1485 . -16) 946) nil (25919 56263 852639 423000) 0 nil])
([nil nil ((808 . 810)) nil (25919 56263 852637 982000) 0 nil])
([nil nil ((#("    def change_available(self, available) -> None:
        self.available = days2bin" 0 4 (match-data (0 1 0 1) fontified t) 4 7 (match-data (0 1 0 1) fontified t face py-def-class-face) 7 8 (match-data (0 1 0 1) fontified t) 8 24 (match-data (0 1 0 1) fontified t face py-def-face) 24 25 (match-data (0 1 0 1) fontified t face (rainbow-delimiters-depth-1-face)) 25 29 (match-data (0 1 0 1) fontified t face py-object-reference-face) 29 40 (match-data (0 1 0 1) fontified t) 40 41 (match-data (0 1 0 1) fontified t face (rainbow-delimiters-depth-1-face)) 41 45 (match-data (0 1 0 1) fontified t) 45 49 (match-data (0 1 0 1) fontified t face py-pseudo-keyword-face) 49 51 (match-data (0 1 0 1) fontified t) 51 59 (match-data (0 1 0 1) fontified t) 59 63 (match-data (0 1 0 1) fontified t face py-object-reference-face) 63 64 (match-data (0 1 0 1) fontified t) 64 73 (match-data (0 0) fontified t face py-variable-name-face) 73 74 (match-data (0 0) fontified t) 74 75 (match-data (0 0) fontified t face font-lock-operator-face) 75 76 (match-data (0 0) fontified t) 76 84 (match-data (0 1 0 1) fontified t)) . 892) (undo-tree-id1481 . -84) (undo-tree-id1482 . -84)) nil (25919 56263 852637 262000) 0 nil])
([nil nil ((892 . 900)) nil (25919 56263 852636 288000) 0 nil])
([nil nil ((#("    " 0 4 (match-data (0 1 0 1) fontified t)) . 896) (undo-tree-id1479 . -4) (undo-tree-id1480 . -4) 900) nil (25919 56263 852635 502000) 0 nil])
([nil nil ((896 . 905)) nil (25919 56263 852634 277000) 0 nil])
([nil nil ((apply yas--snippet-revive 900 956 #s(yas--snippet nil nil nil 1 nil nil nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil nil nil 1 nil nil nil nil)) (900 . 956) (#("__repr__(self) -> str:
        return super().__repr__()" 0 56 (fontified nil)) . 900) (923 . 931) (#("    " 0 4 (fontified nil)) . 923) (900 . 952) (#("__r" 0 3 (fontified nil)) . 900) (900 . 903) (#("__repr__" 0 8 (fontified nil)) . -900) (900 . 908) (#("__rep" 0 5 (match-data (0 1 0 1) fontified t face py-def-face)) . -900) (undo-tree-id1477 . -2) (undo-tree-id1478 . -5) 905) nil (25919 56263 852632 870000) 0 nil])
([nil nil ((923 . 931) (#("        " 0 8 (fontified t)) . -923)) nil (25919 56263 852630 352000) 0 nil])
([nil nil ((#("super().__repr__()" 0 5 (fontified t face py-builtins-face) 5 6 (fontified t face (rainbow-delimiters-depth-1-face)) 6 7 (fontified t face (rainbow-delimiters-depth-1-face)) 7 16 (fontified t) 16 17 (fontified t face (rainbow-delimiters-depth-1-face)) 17 18 (fontified t face (rainbow-delimiters-depth-1-face))) . 938) (undo-tree-id1475 . -18) (undo-tree-id1476 . -18)) nil (25919 56263 852629 620000) 0 nil])
([nil nil ((938 . 949)) nil (25919 56263 852628 515000) 0 nil])
([nil nil ((949 . 956)) nil (25919 56263 852628 162000) 0 nil])
([nil nil ((956 . 957)) nil (25919 56263 852627 742000) 0 nil])
([nil nil ((#("." 0 1 (fontified t face font-lock-string-face)) . -955) (undo-tree-id1471 . -1) (undo-tree-id1472 . -1) (#("\\" 0 1 (fontified t face font-lock-string-face)) . -956) (undo-tree-id1473 . -1) (undo-tree-id1474 . -1) 957) nil (25919 56263 852627 17000) 0 nil])
([nil nil ((922 . 931)) nil (25919 56263 852624 809000) 0 nil])
([nil nil ((931 . 942)) nil (25919 56263 852624 463000) 0 nil])
([nil nil ((940 . 946) (#("Pl" 0 2 (fontified nil)) . -940) (940 . 942) (#("Player" 0 6 (fontified nil)) . -940) (940 . 946) (#("Pl" 0 2 (fontified t)) . -940) (undo-tree-id1470 . -2) 942) nil (25919 56263 852623 740000) 0 nil])
([nil nil ((946 . 949)) nil (25919 56263 852622 463000) 0 nil])
([nil nil ((947 . 952) (#("qu" 0 2 (fontified nil)) . -947) (947 . 949) (#("query" 0 5 (fontified nil)) . -947) (947 . 952) (#("qu" 0 2 (match-data (0 2 0 1 1 2) fontified t)) . -947) (undo-tree-id1469 . -2) 949) nil (25919 56263 852621 656000) 0 nil])
([nil nil ((952 . 956)) nil (25919 56263 852620 299000) 0 nil])
([nil nil ((953 . 962) (#("fi" 0 2 (fontified nil)) . -953) (953 . 955) (#("filter_by" 0 9 (fontified nil)) . -953) (953 . 962) (#("fil" 0 3 (match-data (0 2 0 1 1 2) fontified t)) . -953) (undo-tree-id1467 . -3) (undo-tree-id1468 . -3) 956) nil (25919 56263 852619 420000) 0 nil])
([nil nil ((962 . 963)) nil (25919 56263 852617 812000) 0 nil])
([nil nil ((#(")" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face (rainbow-delimiters-unmatched-face))) . -962) (undo-tree-id1465 . -1) (undo-tree-id1466 . -1) 963) nil (25919 56263 852617 247000) 0 nil])
([nil nil ((962 . 977)) nil (25919 56263 852615 737000) 0 nil])
([nil nil ((973 . 982) (#("pl" 0 2 (fontified nil)) . -973) (973 . 975) (#("player_id" 0 9 (fontified nil)) . -973) (973 . 982) (#("play" 0 4 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -973) (undo-tree-id1463 . -4) (undo-tree-id1464 . -4) 977) nil (25919 56263 852614 724000) 0 nil])
([nil nil ((982 . 991)) nil (25919 56263 852613 59000) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -1020) (undo-tree-id1455 . -1) (undo-tree-id1456 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -1021) (undo-tree-id1457 . -1) (undo-tree-id1458 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -1022) (undo-tree-id1459 . -1) (undo-tree-id1460 . -1) (#("f" 0 1 (fontified t face font-lock-string-face)) . -1023) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) 1024) nil (25919 56263 852612 235000) 0 nil])
([nil nil ((1020 . 1031)) nil (25919 56263 852608 818000) 0 nil])
([nil nil ((#("{" 0 1 (fontified t face font-lock-string-face)) . 1019)) nil (25919 56263 852608 402000) 0 nil])
([nil nil ((991 . 1000)) nil (25919 56263 852607 859000) 0 nil])
([nil nil ((1000 . 1004)) nil (25919 56263 852607 383000) 0 nil])
([nil nil ((#("d" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -1000) (undo-tree-id1451 . -1) (#("a" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -1001) (undo-tree-id1452 . -1) (#("t" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -1002) (undo-tree-id1453 . -1) (#("e" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -1003) (undo-tree-id1454 . -1) 1004) nil (25919 56263 852606 484000) 0 nil])
([nil nil ((1000 . 1008)) nil (25919 56263 852604 309000) 0 nil])
([nil nil ((#("'" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t face font-lock-string-face)) . -1007) (undo-tree-id1450 . -1) 1008) nil (25919 56263 852603 806000) 0 nil])
([nil nil ((#(" " 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . 1006) (undo-tree-id1448 . -1) (undo-tree-id1449 . -1) 1007) nil (25919 56263 852601 829000) 0 nil])
([nil nil ((#("=" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t face font-lock-operator-face)) . -1005) (undo-tree-id1446 . -1) (undo-tree-id1447 . -1) 1006) nil (25919 56263 852600 437000) 0 nil])
([nil nil ((#(" " 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . 1004) (undo-tree-id1444 . -1) (undo-tree-id1445 . -1) 1005) nil (25919 56263 852599 111000) 0 nil])
([nil nil ((#("w" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -1000) (undo-tree-id1436 . -1) (undo-tree-id1437 . -1) (#("e" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -1001) (undo-tree-id1438 . -1) (undo-tree-id1439 . -1) (#("e" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -1002) (undo-tree-id1440 . -1) (undo-tree-id1441 . -1) (#("k" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -1003) (undo-tree-id1442 . -1) (undo-tree-id1443 . -1) 1004) nil (25919 56263 852596 993000) 0 nil])
([nil nil ((#("player.name" 0 11 (fontified t face font-lock-string-face)) . -1028) (undo-tree-id1433 . -11) (undo-tree-id1434 . -11) (undo-tree-id1435 . -11) 1039) nil (25919 56263 852593 151000) 0 nil])
([nil nil ((1028 . 1042)) nil (25919 56263 852591 482000) 0 nil])
([nil nil ((apply -2 931 993 undo--wrap-and-run-primitive-undo 931 993 (("        " . 931) (931 . 941)))) nil (25919 56263 852591 84000) 0 nil])
([nil nil ((1044 . 1052)) nil (25919 56263 852590 760000) 0 nil])
([nil nil ((1052 . 1066)) nil (25919 56263 852590 420000) 0 nil])
([nil nil ((1066 . 1067)) nil (25919 56263 852590 2000) 0 nil])
([nil nil ((1030 . 1031)) nil (25919 56263 852589 484000) 0 nil])
([nil nil ((1045 . 1046)) nil (25919 56263 852589 60000) 0 nil])
([nil nil ((1055 . 1060)) nil (25919 56263 852588 657000) 0 nil])
([nil nil ((#("    " 0 4 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . 998) (undo-tree-id1431 . -4) (undo-tree-id1432 . -4) 1002) nil (25919 56263 852588 54000) 0 nil])
([nil nil ((#("    " 0 4 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t)) . -994) (undo-tree-id1429 . -4) (undo-tree-id1430 . -4) 998) nil (25919 56263 852586 755000) 0 nil])
([nil nil ((#("
" 0 1 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t face font-lock-comment-face)) . -993) (undo-tree-id1427 . -1) (undo-tree-id1428 . -1) 994) nil (25919 56263 852585 152000) 0 nil])
([nil nil ((1066 . 1070) (#("        " 0 5 (fontified t) 5 8 (fontified t)) . -1066) (undo-tree-id1425 . -8) (undo-tree-id1426 . -8) 1074) nil (25919 56263 852583 377000) 0 nil])
([nil nil ((1070 . 1073)) nil (25919 56263 852582 175000) 0 nil])
([nil nil ((1067 . 1071) (#("    " 0 4 (fontified nil)) . 1067) (1066 . 1067)) nil (25919 56263 852581 683000) 0 nil])
([nil nil ((1074 . 1080)) nil (25919 56263 852581 17000) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face py-def-face)) . -1075) (undo-tree-id1420 . -1) (#("r" 0 1 (fontified t face py-def-face)) . -1076) (undo-tree-id1421 . -1) (#("i" 0 1 (fontified t face py-def-face)) . -1077) (undo-tree-id1422 . -1) (#("n" 0 1 (fontified t face py-def-face)) . -1078) (undo-tree-id1423 . -1) (#("t" 0 1 (fontified t face py-def-face)) . -1079) (undo-tree-id1424 . -1) 1080) nil (25919 56263 852580 283000) 0 nil])
([nil nil ((1075 . 1085)) nil (25919 56263 852577 728000) 0 nil])
([nil nil ((1085 . 1092)) nil (25919 56263 852577 193000) 0 nil])
([nil nil ((#("=" 0 1 (fontified t)) . -1091) (undo-tree-id1418 . -1) (undo-tree-id1419 . -1) 1092) nil (25919 56263 852576 673000) 0 nil])
([nil nil ((1091 . 1097)) nil (25919 56263 852575 422000) 0 nil])
([nil nil ((#("n" 0 1 (fontified t)) . -1094) (undo-tree-id1415 . -1) (#("o" 0 1 (fontified t)) . -1095) (undo-tree-id1416 . -1) (#("n" 0 1 (fontified t)) . -1096) (undo-tree-id1417 . -1) 1097) nil (25919 56263 852574 789000) 0 nil])
([nil nil ((1094 . 1097)) nil (25919 56263 852573 203000) 0 nil])
([nil nil ((1094 . 1098) (#("Non" 0 3 (fontified nil)) . -1094) (1094 . 1097) (#("None" 0 4 (fontified nil)) . -1094) (1094 . 1098) (#("Non" 0 3 (fontified t)) . -1094) (undo-tree-id1414 . -3) 1097) nil (25919 56263 852572 477000) 0 nil])
([nil nil ((1098 . 1099)) nil (25919 56263 852571 213000) 0 nil])
([nil nil ((1099 . 1108)) nil (25919 56263 852570 751000) 0 nil])
([nil nil ((1108 . 1114)) nil (25919 56263 852570 357000) 0 nil])
([nil nil ((1114 . 1127)) nil (25919 56263 852569 905000) 0 nil])
([nil nil ((1114 . 1118)) nil (25919 56263 852569 441000) 0 nil])
([nil nil ((1118 . 1127)) nil (25919 56263 852569 53000) 0 nil])
([nil nil ((1127 . 1128)) nil (25919 56263 852568 645000) 0 nil])
([nil nil ((#("[" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face (rainbow-delimiters-depth-1-face))) . -1127) (undo-tree-id1412 . -1) (undo-tree-id1413 . -1) 1128) nil (25919 56263 852567 807000) 0 nil])
([nil nil ((1127 . 1133)) nil (25919 56263 852566 689000) 0 nil])
([nil nil ((#(")" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face (rainbow-delimiters-unmatched-face))) . -1132) (undo-tree-id1410 . -1) (undo-tree-id1411 . -1) 1133) nil (25919 56263 852566 111000) 0 nil])
([nil nil ((1132 . 1133)) nil (25919 56263 852564 852000) 0 nil])
([nil nil ((#(" " 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . 1114)) nil (25919 56263 852564 347000) 0 nil])
([nil nil ((1115 . 1116)) nil (25919 56263 852563 942000) 0 nil])
([nil nil ((#("\\" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . -1115) (undo-tree-id1408 . -1) (undo-tree-id1409 . -1) 1116) nil (25919 56263 852563 308000) 0 nil])
([nil nil ((1115 . 1117)) nil (25919 56263 852561 751000) 0 nil])
([nil nil ((1116 . 1120)) nil (25919 56263 852561 248000) 0 nil])
([nil nil ((#("s" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . -1117) (undo-tree-id1401 . -1) (undo-tree-id1402 . -1) (#("u" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . -1118) (undo-tree-id1403 . -1) (undo-tree-id1404 . -1) (undo-tree-id1405 . -1) (#("n" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . -1119) (undo-tree-id1406 . -1) (undo-tree-id1407 . -1) 1120) nil (25919 56263 852560 128000) 0 nil])
([nil nil ((1117 . 1121)) nil (25919 56263 852557 159000) 0 nil])
([nil nil ((1122 . 1126)) nil (25919 56263 852556 781000) 0 nil])
([nil nil ((1126 . 1136)) nil (25919 56263 852556 362000) 0 nil])
([nil nil ((#("T" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . -1135) (undo-tree-id1399 . -1) (undo-tree-id1400 . -1) 1136) nil (25919 56263 852555 783000) 0 nil])
([nil nil ((1135 . 1143)) nil (25919 56263 852554 621000) 0 nil])
([nil nil ((#("j" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . -1142) (undo-tree-id1397 . -1) (undo-tree-id1398 . -1) 1143) nil (25919 56263 852553 638000) 0 nil])
([nil nil ((1142 . 1149)) nil (25919 56263 852552 457000) 0 nil])
([nil nil ((1149 . 1158)) nil (25919 56263 852552 112000) 0 nil])
([nil nil ((1175 . 1179)) nil (25919 56263 852551 770000) 0 nil])
([nil nil ((1179 . 1200)) nil (25919 56263 852551 430000) 0 nil])
([nil nil ((1200 . 1219)) nil (25919 56263 852551 26000) 0 nil])
([nil nil ((1219 . 1221)) nil (25919 56263 852550 614000) 0 nil])
([nil nil ((1221 . 1230)) nil (25919 56263 852550 124000) 0 nil])
([nil nil ((1230 . 1234)) nil (25919 56263 852549 718000) 0 nil])
([nil nil ((#(" " 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . 1233) (undo-tree-id1395 . -1) (undo-tree-id1396 . -1) 1234) nil (25919 56263 852549 145000) 0 nil])
([nil nil ((#("y" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1231) (undo-tree-id1391 . -1) (undo-tree-id1392 . -1) (#("s" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1232) (undo-tree-id1393 . -1) (undo-tree-id1394 . -1) 1233) nil (25919 56263 852547 630000) 0 nil])
([nil nil ((1231 . 1240)) nil (25919 56263 852545 449000) 0 nil])
([nil nil ((1237 . 1245) (#("bin" 0 3 (fontified nil)) . -1237) (1237 . 1240) (#("bin2days" 0 8 (fontified nil)) . -1237) (1237 . 1245) (#("bin" 0 3 (match-data (0 3 0 1 1 2 2 3) fontified t face py-builtins-face)) . -1237) (undo-tree-id1389 . -3) (undo-tree-id1390 . -3) 1240) nil (25919 56263 852544 225000) 0 nil])
([nil nil ((1245 . 1252)) nil (25919 56263 852542 565000) 0 nil])
([nil nil ((1251 . 1260) (#("a" 0 1 (fontified nil)) . -1251) (1251 . 1252) (#("available" 0 9 (fontified nil)) . -1251) (1251 . 1260) (#("a" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1251) (undo-tree-id1388 . -1) 1252) nil (25919 56263 852541 670000) 0 nil])
([nil nil ((1260 . 1261)) nil (25919 56263 852540 375000) 0 nil])
([nil nil ((1261 . 1270)) nil (25919 56263 852539 968000) 0 nil])
([nil nil ((1270 . 1277)) nil (25919 56263 852539 569000) 0 nil])
([nil nil ((1277 . 1278)) nil (25919 56263 852539 137000) 0 nil])
([nil nil ((#("\\" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1277) (undo-tree-id1386 . -1) (undo-tree-id1387 . -1) 1278) nil (25919 56263 852538 521000) 0 nil])
([nil nil ((1277 . 1278)) nil (25919 56263 852536 441000) 0 nil])
([nil nil ((#("        print('|" 0 8 (match-data (0 1 0 1) fontified t) 8 13 (match-data (0 1 0 1) fontified t face py-builtins-face) 13 14 (match-data (0 1 0 1) fontified t face (rainbow-delimiters-depth-1-face)) 14 16 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . 1262) (undo-tree-id1384 . -16) (undo-tree-id1385 . -16)) nil (25919 56263 852535 830000) 0 nil])
([nil nil ((1262 . 1270)) nil (25919 56263 852534 723000) 0 nil])
([nil nil ((1270 . 1283)) nil (25919 56263 852534 242000) 0 nil])
([nil nil ((#("-" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1279) (undo-tree-id1376 . -1) (undo-tree-id1377 . -1) (#("y" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1280) (undo-tree-id1378 . -1) (undo-tree-id1379 . -1) (#("e" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1281) (undo-tree-id1380 . -1) (undo-tree-id1381 . -1) (#("s" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1282) (undo-tree-id1382 . -1) (undo-tree-id1383 . -1) 1283) nil (25919 56263 852533 195000) 0 nil])
([nil nil ((1279 . 1284)) nil (25919 56263 852529 828000) 0 nil])
([nil nil ((#("=" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1283) (undo-tree-id1374 . -1) (undo-tree-id1375 . -1) 1284) nil (25919 56263 852529 168000) 0 nil])
([nil nil ((#("=" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1282) (undo-tree-id1372 . -1) (undo-tree-id1373 . -1) 1283) nil (25919 56263 852527 817000) 0 nil])
([nil nil ((1282 . 1283)) nil (25919 56263 852526 538000) 0 nil])
([nil nil ((1261 . 1270)) nil (25919 56263 852526 104000) 0 nil])
([nil nil ((1270 . 1271)) nil (25919 56263 852525 703000) 0 nil])
([nil nil ((#("s" 0 1 (match-data (0 1 0 1) fontified t)) . -1270) (undo-tree-id1371 . -1) 1271) nil (25919 56263 852525 105000) 0 nil])
([nil nil ((1270 . 1279)) nil (25919 56263 852524 190000) 0 nil])
([nil nil ((#("]" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1278) (undo-tree-id1369 . -1) (undo-tree-id1370 . -1) 1279) nil (25919 56263 852523 654000) 0 nil])
([nil nil ((1278 . 1279)) nil (25919 56263 852522 464000) 0 nil])
([nil nil ((1279 . 1288)) nil (25919 56263 852522 73000) 0 nil])
([nil nil ((1288 . 1292)) nil (25919 56263 852521 660000) 0 nil])
([nil nil ((#(" " 0 1 (match-data (0 1 0 1) fontified t)) . 1291) (undo-tree-id1368 . -1) 1292) nil (25919 56263 852520 877000) 0 nil])
([nil nil ((#("p" 0 1 (match-data (0 1 0 1) fontified t)) . -1289) (undo-tree-id1366 . -1) (#("r" 0 1 (match-data (0 1 0 1) fontified t)) . -1290) (undo-tree-id1367 . -1) 1291) nil (25919 56263 852519 747000) 0 nil])
([nil nil ((1289 . 1303)) nil (25919 56263 852517 916000) 0 nil])
([nil nil ((1303 . 1304)) nil (25919 56263 852517 503000) 0 nil])
([nil nil ((1304 . 1317)) nil (25919 56263 852517 118000) 0 nil])
([nil nil ((1317 . 1323)) nil (25919 56263 852516 748000) 0 nil])
([nil nil ((1323 . 1324)) nil (25919 56263 852516 339000) 0 nil])
([nil nil ((1324 . 1341)) nil (25919 56263 852515 952000) 0 nil])
([nil nil ((1341 . 1346)) nil (25919 56263 852515 547000) 0 nil])
([nil nil ((1346 . 1350)) nil (25919 56263 852515 123000) 0 nil])
([nil nil ((#("0" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1349) (undo-tree-id1364 . -1) (undo-tree-id1365 . -1) 1350) nil (25919 56263 852514 559000) 0 nil])
([nil nil ((1349 . 1355)) nil (25919 56263 852513 340000) 0 nil])
([nil nil ((1354 . 1355)) nil (25919 56263 852512 909000) 0 nil])
([nil nil ((1221 . 1230)) nil (25919 56263 852512 512000) 0 nil])
([nil nil ((1230 . 1244)) nil (25919 56263 852512 102000) 0 nil])
([nil nil ((#("|" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . -1243) (undo-tree-id1362 . -1) (undo-tree-id1363 . -1) 1244) nil (25919 56263 852511 523000) 0 nil])
([nil nil ((1243 . 1249)) nil (25919 56263 852510 281000) 0 nil])
([nil nil ((#("-" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . -1242) (undo-tree-id1360 . -1) (undo-tree-id1361 . -1) 1243) nil (25919 56263 852509 664000) 0 nil])
([nil nil ((1242 . 1243)) nil (25919 56263 852508 515000) 0 nil])
([nil nil ((#("-" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . -1238) (undo-tree-id1358 . -1) (undo-tree-id1359 . -1) 1239) nil (25919 56263 852507 889000) 0 nil])
([nil nil ((1238 . 1239)) nil (25919 56263 852506 782000) 0 nil])
([nil nil ((#("n" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . 1245)) nil (25919 56263 852506 300000) 0 nil])
([nil nil ((#("-" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . -1244) (undo-tree-id1356 . -1) (undo-tree-id1357 . -1) 1245) nil (25919 56263 852505 628000) 0 nil])
([nil nil ((1244 . 1246)) nil (25919 56263 852504 391000) 0 nil])
([nil nil ((#("-" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . 1247)) nil (25919 56263 852503 899000) 0 nil])
([nil nil ((1247 . 1248)) nil (25919 56263 852503 440000) 0 nil])
([nil nil ((#("-" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . -1248) (undo-tree-id1343 . -1) (undo-tree-id1344 . -1) (undo-tree-id1345 . -1) (undo-tree-id1346 . -1) (undo-tree-id1347 . -1) (undo-tree-id1348 . -1) (undo-tree-id1349 . -1) (undo-tree-id1350 . -1) (undo-tree-id1351 . -1) (undo-tree-id1352 . -1) (undo-tree-id1353 . -1) (undo-tree-id1354 . -1) (undo-tree-id1355 . -1) 1249) nil (25919 56263 852502 486000) 0 nil])
([nil nil ((1248 . 1250)) nil (25919 56263 852496 419000) 0 nil])
([nil nil ((#("+" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . -1249) (undo-tree-id1326 . -1) (undo-tree-id1327 . -1) (undo-tree-id1328 . -1) (undo-tree-id1329 . -1) (undo-tree-id1330 . -1) (undo-tree-id1331 . -1) (undo-tree-id1332 . -1) (undo-tree-id1333 . -1) (undo-tree-id1334 . -1) (undo-tree-id1335 . -1) (undo-tree-id1336 . -1) (undo-tree-id1337 . -1) (undo-tree-id1338 . -1) (undo-tree-id1339 . -1) (undo-tree-id1340 . -1) (undo-tree-id1341 . -1) (undo-tree-id1342 . -1) 1250) nil (25919 56263 852495 446000) 0 nil])
([nil nil ((1249 . 1250)) nil (25919 56263 852489 301000) 0 nil])
([nil nil ((#("+" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . -1243) (undo-tree-id1320 . -1) (undo-tree-id1321 . -1) (undo-tree-id1322 . -1) (undo-tree-id1323 . -1) (undo-tree-id1324 . -1) (undo-tree-id1325 . -1) 1244) nil (25919 56263 852488 538000) 0 nil])
([nil nil ((1243 . 1244)) nil (25919 56263 852485 465000) 0 nil])
([nil nil ((1192 . 1193)) nil (25919 56263 852485 37000) 0 nil])
([nil nil ((#("'" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . -1192) (undo-tree-id1314 . -1) (undo-tree-id1315 . -1) (undo-tree-id1316 . -1) (undo-tree-id1317 . -1) (undo-tree-id1318 . -1) (undo-tree-id1319 . -1) 1193) nil (25919 56263 852484 311000) 0 nil])
([nil nil ((1250 . 1251)) nil (25919 56263 852481 661000) 0 nil])
([nil nil ((#("-" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . 1379)) nil (25919 56263 852481 116000) 0 nil])
([nil nil ((1379 . 1380)) nil (25919 56263 852480 725000) 0 nil])
([nil nil ((#("-" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . 1383)) nil (25919 56263 852480 226000) 0 nil])
([nil nil ((1383 . 1384)) nil (25919 56263 852479 856000) 0 nil])
([nil nil ((#("+" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . 1384)) nil (25919 56263 852479 331000) 0 nil])
([nil nil ((1384 . 1385)) nil (25919 56263 852478 911000) 0 nil])
([nil nil ((#("|" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1307) (undo-tree-id1303 . -1) (undo-tree-id1304 . -1) (undo-tree-id1305 . -1) (undo-tree-id1306 . -1) (undo-tree-id1307 . -1) (undo-tree-id1308 . -1) (undo-tree-id1309 . -1) (undo-tree-id1310 . -1) (undo-tree-id1311 . -1) (undo-tree-id1312 . -1) (undo-tree-id1313 . -1) 1308) nil (25919 56263 852478 15000) 0 nil])
([nil nil ((1300 . 1304)) nil (25919 56263 852472 650000) 0 nil])
([nil nil ((1374 . 1378)) nil (25919 56263 852472 178000) 0 nil])
([nil nil ((1386 . 1387)) nil (25919 56263 852471 775000) 0 nil])
([nil nil ((1394 . 1409)) nil (25919 56263 852471 356000) 0 nil])
([nil nil ((1409 . 1413)) nil (25919 56263 852470 956000) 0 nil])
([nil nil ((1413 . 1414)) nil (25919 56263 852470 371000) 0 nil])
([nil nil ((1395 . 1398) (#("              " 0 14 (match-data (0 1 0 1) fontified t)) . 1395) (undo-tree-id1295 . -14) (undo-tree-id1296 . -14) (undo-tree-id1297 . -14) (undo-tree-id1298 . -14) (undo-tree-id1299 . -14) (undo-tree-id1300 . -14) (undo-tree-id1301 . -14) (undo-tree-id1302 . -14) 1414) nil (25919 56263 852469 570000) 0 nil])
([nil nil ((#("   " 0 3 (match-data (0 1 0 1) fontified t)) . 1395) (undo-tree-id1280 . -3) (undo-tree-id1281 . -3) (undo-tree-id1282 . -3) (undo-tree-id1283 . -3) (undo-tree-id1284 . -3) (undo-tree-id1285 . -3) (undo-tree-id1286 . -3) (undo-tree-id1287 . -3) (undo-tree-id1288 . -3) (undo-tree-id1289 . -3) (undo-tree-id1290 . -3) (undo-tree-id1291 . -3) (undo-tree-id1292 . -3) (undo-tree-id1293 . -3) (undo-tree-id1294 . -3) 1398) nil (25919 56263 852465 929000) 0 nil])
([nil nil ((1395 . 1409)) nil (25919 56263 852459 642000) 0 nil])
([nil nil ((1396 . 1410) (#("              " 0 14 (match-data (0 1 0 1) fontified nil)) . 1395) (undo-tree-id1267 . -14) (undo-tree-id1268 . -14) (undo-tree-id1269 . -14) (undo-tree-id1270 . -14) (undo-tree-id1271 . -14) (undo-tree-id1272 . -14) (undo-tree-id1273 . -14) (undo-tree-id1274 . -14) (undo-tree-id1275 . -14) (undo-tree-id1276 . -14) (undo-tree-id1277 . -14) (undo-tree-id1278 . -14) (undo-tree-id1279 . -14) (1409 . 1410)) nil (25919 56263 852458 715000) 0 nil])
([nil nil ((#("  " 0 2 (match-data (0 1 0 1) fontified t)) . 1408) (undo-tree-id1251 . -2) (undo-tree-id1252 . -2) (undo-tree-id1253 . -2) (undo-tree-id1254 . -2) (undo-tree-id1255 . -2) (undo-tree-id1256 . -2) (undo-tree-id1257 . -2) (undo-tree-id1258 . -2) (undo-tree-id1259 . -2) (undo-tree-id1260 . -2) (undo-tree-id1261 . -2) (undo-tree-id1262 . -2) (undo-tree-id1263 . -2) (undo-tree-id1264 . -2) (undo-tree-id1265 . -2) (undo-tree-id1266 . -2) 1410) nil (25919 56263 852453 367000) 0 nil])
([nil nil ((#("
" 0 1 (match-data (0 1 0 1) fontified t)) . -1394) (undo-tree-id1203 . -1) (undo-tree-id1204 . -1) (undo-tree-id1205 . -1) (undo-tree-id1206 . -1) (undo-tree-id1207 . -1) (undo-tree-id1208 . -1) (undo-tree-id1209 . -1) (undo-tree-id1210 . -1) (undo-tree-id1211 . -1) (undo-tree-id1212 . -1) (undo-tree-id1213 . -1) (undo-tree-id1214 . -1) (undo-tree-id1215 . -1) (undo-tree-id1216 . -1) (undo-tree-id1217 . -1) (undo-tree-id1218 . -1) (undo-tree-id1219 . -1) (undo-tree-id1220 . -1) (undo-tree-id1221 . -1) (undo-tree-id1222 . -1) (undo-tree-id1223 . -1) (undo-tree-id1224 . -1) (undo-tree-id1225 . -1) (undo-tree-id1226 . -1) (undo-tree-id1227 . -1) (undo-tree-id1228 . -1) (undo-tree-id1229 . -1) (undo-tree-id1230 . -1) (undo-tree-id1231 . -1) (undo-tree-id1232 . -1) (undo-tree-id1233 . -1) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) 1395) nil (25919 56263 852437 177000) 0 nil])
([nil nil ((1412 . 1427)) nil (25919 56263 852417 697000) 0 nil])
([nil nil ((1358 . 1372) (#("                " 0 16 (match-data (0 1 0 1) fontified t)) . -1358) (undo-tree-id1184 . -16) (undo-tree-id1185 . -16) (undo-tree-id1186 . -16) (undo-tree-id1187 . -16) (undo-tree-id1188 . -16) (undo-tree-id1189 . -16) (undo-tree-id1190 . -16) (undo-tree-id1191 . -16) (undo-tree-id1192 . -16) (undo-tree-id1193 . -14) (undo-tree-id1194 . -14) (undo-tree-id1195 . -15) (undo-tree-id1196 . -15) (undo-tree-id1197 . -15) (undo-tree-id1198 . -16) (undo-tree-id1199 . -16) (undo-tree-id1200 . -16) (undo-tree-id1201 . -16) (undo-tree-id1202 . -16) 1374) nil (25919 56263 852416 699000) 0 nil])
([nil nil ((#("  " 0 2 (match-data (0 1 0 1) fontified t)) . 1370) (undo-tree-id1171 . -2) (undo-tree-id1172 . -2) (undo-tree-id1173 . -2) (undo-tree-id1174 . -2) (undo-tree-id1175 . -2) (undo-tree-id1176 . -2) (undo-tree-id1177 . -2) (undo-tree-id1178 . -2) (undo-tree-id1179 . -2) (undo-tree-id1180 . -2) (undo-tree-id1181 . -2) (undo-tree-id1182 . -2) (undo-tree-id1183 . -2) 1372) nil (25919 56263 852408 388000) 0 nil])
([nil nil ((1358 . 1372) (#("            " 0 12 (match-data (0 1 0 1) fontified t)) . 1358) (undo-tree-id1146 . -12) (undo-tree-id1147 . -12) (undo-tree-id1148 . -12) (undo-tree-id1149 . -12) (undo-tree-id1150 . -12) (undo-tree-id1151 . -12) (undo-tree-id1152 . -12) (undo-tree-id1153 . -12) (undo-tree-id1154 . -12) (undo-tree-id1155 . -12) (undo-tree-id1156 . -12) (undo-tree-id1157 . -12) (undo-tree-id1158 . -12) (undo-tree-id1159 . -12) (undo-tree-id1160 . -12) (undo-tree-id1161 . -12) (undo-tree-id1162 . -12) (undo-tree-id1163 . -12) (undo-tree-id1164 . -12) (undo-tree-id1165 . -12) (undo-tree-id1166 . -12) (undo-tree-id1167 . -12) (undo-tree-id1168 . -12) (undo-tree-id1169 . -12) (undo-tree-id1170 . -12) 1370) nil (25919 56263 852400 875000) 0 nil])
([nil nil ((1425 . 1434)) nil (25919 56263 852389 635000) 0 nil])
([nil nil ((1434 . 1445)) nil (25919 56263 852389 81000) 0 nil])
([nil nil ((#("-" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1466) (undo-tree-id1135 . -1) (undo-tree-id1136 . -1) (undo-tree-id1137 . -1) (undo-tree-id1138 . -1) (undo-tree-id1139 . -1) (undo-tree-id1140 . -1) (undo-tree-id1141 . -1) (undo-tree-id1142 . -1) (undo-tree-id1143 . -1) (undo-tree-id1144 . -1) (undo-tree-id1145 . -1) 1467) nil (25919 56263 852388 143000) 0 nil])
([nil nil ((#("'" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1460) (undo-tree-id1006 . -1) (undo-tree-id1007 . -1) (undo-tree-id1008 . -1) (undo-tree-id1009 . -1) (undo-tree-id1010 . -1) (undo-tree-id1011 . -1) (undo-tree-id1012 . -1) (undo-tree-id1013 . -1) (undo-tree-id1014 . -1) (undo-tree-id1015 . -1) (undo-tree-id1016 . -1) (undo-tree-id1017 . -1) (undo-tree-id1018 . -1) (undo-tree-id1019 . -1) (undo-tree-id1020 . -1) (undo-tree-id1021 . -1) (undo-tree-id1022 . -1) (undo-tree-id1023 . -1) (undo-tree-id1024 . -1) (undo-tree-id1025 . -1) (undo-tree-id1026 . -1) (undo-tree-id1027 . -1) (undo-tree-id1028 . -1) (undo-tree-id1029 . -1) (undo-tree-id1030 . -1) (undo-tree-id1031 . -1) (undo-tree-id1032 . -1) (undo-tree-id1033 . -1) (undo-tree-id1034 . -1) (#("|" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1461) (undo-tree-id1035 . -1) (undo-tree-id1036 . -1) (undo-tree-id1037 . -1) (undo-tree-id1038 . -1) (undo-tree-id1039 . -1) (undo-tree-id1040 . -1) (undo-tree-id1041 . -1) (undo-tree-id1042 . -1) (undo-tree-id1043 . -1) (undo-tree-id1044 . -1) (undo-tree-id1045 . -1) (undo-tree-id1046 . -1) (undo-tree-id1047 . -1) (undo-tree-id1048 . -1) (undo-tree-id1049 . -1) (undo-tree-id1050 . -1) (undo-tree-id1051 . -1) (undo-tree-id1052 . -1) (undo-tree-id1053 . -1) (undo-tree-id1054 . -1) (undo-tree-id1055 . -1) (undo-tree-id1056 . -1) (undo-tree-id1057 . -1) (undo-tree-id1058 . -1) (undo-tree-id1059 . -1) (undo-tree-id1060 . -1) (#("-" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1462) (undo-tree-id1061 . -1) (undo-tree-id1062 . -1) (undo-tree-id1063 . -1) (undo-tree-id1064 . -1) (undo-tree-id1065 . -1) (undo-tree-id1066 . -1) (undo-tree-id1067 . -1) (undo-tree-id1068 . -1) (undo-tree-id1069 . -1) (undo-tree-id1070 . -1) (undo-tree-id1071 . -1) (undo-tree-id1072 . -1) (undo-tree-id1073 . -1) (undo-tree-id1074 . -1) (undo-tree-id1075 . -1) (undo-tree-id1076 . -1) (undo-tree-id1077 . -1) (undo-tree-id1078 . -1) (undo-tree-id1079 . -1) (undo-tree-id1080 . -1) (undo-tree-id1081 . -1) (undo-tree-id1082 . -1) (undo-tree-id1083 . -1) (#("y" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1463) (undo-tree-id1084 . -1) (undo-tree-id1085 . -1) (undo-tree-id1086 . -1) (undo-tree-id1087 . -1) (undo-tree-id1088 . -1) (undo-tree-id1089 . -1) (undo-tree-id1090 . -1) (undo-tree-id1091 . -1) (undo-tree-id1092 . -1) (undo-tree-id1093 . -1) (undo-tree-id1094 . -1) (undo-tree-id1095 . -1) (undo-tree-id1096 . -1) (undo-tree-id1097 . -1) (undo-tree-id1098 . -1) (undo-tree-id1099 . -1) (undo-tree-id1100 . -1) (undo-tree-id1101 . -1) (undo-tree-id1102 . -1) (undo-tree-id1103 . -1) (#("e" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1464) (undo-tree-id1104 . -1) (undo-tree-id1105 . -1) (undo-tree-id1106 . -1) (undo-tree-id1107 . -1) (undo-tree-id1108 . -1) (undo-tree-id1109 . -1) (undo-tree-id1110 . -1) (undo-tree-id1111 . -1) (undo-tree-id1112 . -1) (undo-tree-id1113 . -1) (undo-tree-id1114 . -1) (undo-tree-id1115 . -1) (undo-tree-id1116 . -1) (undo-tree-id1117 . -1) (undo-tree-id1118 . -1) (undo-tree-id1119 . -1) (undo-tree-id1120 . -1) (#("s" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . -1465) (undo-tree-id1121 . -1) (undo-tree-id1122 . -1) (undo-tree-id1123 . -1) (undo-tree-id1124 . -1) (undo-tree-id1125 . -1) (undo-tree-id1126 . -1) (undo-tree-id1127 . -1) (undo-tree-id1128 . -1) (undo-tree-id1129 . -1) (undo-tree-id1130 . -1) (undo-tree-id1131 . -1) (undo-tree-id1132 . -1) (undo-tree-id1133 . -1) (undo-tree-id1134 . -1) 1466) nil (25919 56263 852378 797000) 0 nil])
([nil nil ((1460 . 1468)) nil (25919 56263 852010 656000) 0 nil])
([nil nil ((#("        print('| yes | no  |'" 0 8 (match-data (0 3 0 1 1 2 2 3) fontified t) 8 13 (match-data (0 3 0 1 1 2 2 3) fontified t face py-builtins-face) 13 14 (match-data (0 3 0 1 1 2 2 3) fontified t face (rainbow-delimiters-depth-1-face)) 14 29 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-string-face)) . 1222) (undo-tree-id844 . -29) (undo-tree-id845 . -11) (undo-tree-id846 . -14) (undo-tree-id847 . -24) (undo-tree-id848 . -24) (undo-tree-id849 . -25) (undo-tree-id850 . -25) (undo-tree-id851 . -25) (undo-tree-id852 . -25) (undo-tree-id853 . -26) (undo-tree-id854 . -26) (undo-tree-id855 . -26) (undo-tree-id856 . -26) (undo-tree-id857 . -26) (undo-tree-id858 . -26) (undo-tree-id859 . -26) (undo-tree-id860 . -26) (undo-tree-id861 . -26) (undo-tree-id862 . -26) (undo-tree-id863 . -26) (undo-tree-id864 . -26) (undo-tree-id865 . -26) (undo-tree-id866 . -26) (undo-tree-id867 . -26) (undo-tree-id868 . -27) (undo-tree-id869 . -27) (undo-tree-id870 . -27) (undo-tree-id871 . -27) (undo-tree-id872 . -27) (undo-tree-id873 . -27) (undo-tree-id874 . -27) (undo-tree-id875 . -27) (undo-tree-id876 . -27) (undo-tree-id877 . -27) (undo-tree-id878 . -27) (undo-tree-id879 . -27) (undo-tree-id880 . -27) (undo-tree-id881 . -27) (undo-tree-id882 . -27) (undo-tree-id883 . -27) (undo-tree-id884 . -27) (undo-tree-id885 . -27) (undo-tree-id886 . -27) (undo-tree-id887 . -27) (undo-tree-id888 . -27) (undo-tree-id889 . -27) (undo-tree-id890 . -27) (undo-tree-id891 . -27) (undo-tree-id892 . -27) (undo-tree-id893 . -27) (undo-tree-id894 . -27) (undo-tree-id895 . -27) (undo-tree-id896 . -27) (undo-tree-id897 . -28) (undo-tree-id898 . -28) (undo-tree-id899 . -28) (undo-tree-id900 . -27) (undo-tree-id901 . -27) (undo-tree-id902 . -27) (undo-tree-id903 . -26) (undo-tree-id904 . -26) (undo-tree-id905 . -26) (undo-tree-id906 . -26) (undo-tree-id907 . -26) (undo-tree-id908 . -25) (undo-tree-id909 . -25) (undo-tree-id910 . -25) (undo-tree-id911 . -24) (undo-tree-id912 . -24) (undo-tree-id913 . -24) (undo-tree-id914 . -23) (undo-tree-id915 . -23) (undo-tree-id916 . -23) (undo-tree-id917 . -21) (undo-tree-id918 . -21) (undo-tree-id919 . -21) (undo-tree-id920 . -21) (undo-tree-id921 . -21) (undo-tree-id922 . -21) (undo-tree-id923 . -22) (undo-tree-id924 . -22) (undo-tree-id925 . -22) (undo-tree-id926 . -22) (undo-tree-id927 . -22) (undo-tree-id928 . -22) (undo-tree-id929 . -22) (undo-tree-id930 . -22) (undo-tree-id931 . -22) (undo-tree-id932 . -22) (undo-tree-id933 . -22) (undo-tree-id934 . -22) (undo-tree-id935 . -22) (undo-tree-id936 . -22) (undo-tree-id937 . -22) (undo-tree-id938 . -22) (undo-tree-id939 . -22) (undo-tree-id940 . -22) (undo-tree-id941 . -22) (undo-tree-id942 . -22) (undo-tree-id943 . -22) (undo-tree-id944 . -22) (undo-tree-id945 . -22) (undo-tree-id946 . -22) (undo-tree-id947 . -22) (undo-tree-id948 . -28) (undo-tree-id949 . -28) (undo-tree-id950 . -28) (undo-tree-id951 . -28) (undo-tree-id952 . -28) (undo-tree-id953 . -28) (undo-tree-id954 . -28) (undo-tree-id955 . -29) (undo-tree-id956 . -29) (undo-tree-id957 . -29) (undo-tree-id958 . -29) (undo-tree-id959 . -29) (undo-tree-id960 . -29) (undo-tree-id961 . -29) (undo-tree-id962 . -29) (undo-tree-id963 . -29) (undo-tree-id964 . -29) (undo-tree-id965 . -29) (undo-tree-id966 . -29) (undo-tree-id967 . -29) (undo-tree-id968 . -13) (undo-tree-id969 . -14) (undo-tree-id970 . -29) (undo-tree-id971 . -29) (undo-tree-id972 . -29) (undo-tree-id973 . -29) (undo-tree-id974 . -29) (undo-tree-id975 . -28) (undo-tree-id976 . -27) (undo-tree-id977 . -25) (undo-tree-id978 . -24) (undo-tree-id979 . -23) (undo-tree-id980 . -22) (undo-tree-id981 . -21) (undo-tree-id982 . -20) (undo-tree-id983 . -19) (undo-tree-id984 . -18) (undo-tree-id985 . -17) (undo-tree-id986 . -16) (undo-tree-id987 . -15) (undo-tree-id988 . -13) (undo-tree-id989 . -12) (undo-tree-id990 . -11) (undo-tree-id991 . -11) (undo-tree-id992 . -11) (undo-tree-id993 . -11) (undo-tree-id994 . -11) (undo-tree-id995 . -9) (undo-tree-id996 . -8) (undo-tree-id997 . -7) (undo-tree-id998 . -6) (undo-tree-id999 . -5) (undo-tree-id1000 . -4) (undo-tree-id1001 . -3) (undo-tree-id1002 . -2) (undo-tree-id1003 . -1) (undo-tree-id1004 . -29) (undo-tree-id1005 . -29)) nil (25919 56263 852005 507000) 0 nil])
([nil nil ((#("
" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -1221) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (undo-tree-id713 . -1) (undo-tree-id714 . -1) (undo-tree-id715 . -1) (undo-tree-id716 . -1) (undo-tree-id717 . -1) (undo-tree-id718 . -1) (undo-tree-id719 . -1) (undo-tree-id720 . -1) (undo-tree-id721 . -1) (undo-tree-id722 . -1) (undo-tree-id723 . -1) (undo-tree-id724 . -1) (undo-tree-id725 . -1) (undo-tree-id726 . -1) (undo-tree-id727 . -1) (undo-tree-id728 . -1) (undo-tree-id729 . -1) (undo-tree-id730 . -1) (undo-tree-id731 . -1) (undo-tree-id732 . -1) (undo-tree-id733 . -1) (undo-tree-id734 . -1) (undo-tree-id735 . -1) (undo-tree-id736 . -1) (undo-tree-id737 . -1) (undo-tree-id738 . -1) (undo-tree-id739 . -1) (undo-tree-id740 . -1) (undo-tree-id741 . -1) (undo-tree-id742 . -1) (undo-tree-id743 . -1) (undo-tree-id744 . -1) (undo-tree-id745 . -1) (undo-tree-id746 . -1) (undo-tree-id747 . -1) (undo-tree-id748 . -1) (undo-tree-id749 . -1) (undo-tree-id750 . -1) (undo-tree-id751 . -1) (undo-tree-id752 . -1) (undo-tree-id753 . -1) (undo-tree-id754 . -1) (undo-tree-id755 . -1) (undo-tree-id756 . -1) (undo-tree-id757 . -1) (undo-tree-id758 . -1) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) (undo-tree-id799 . -1) (undo-tree-id800 . -1) (undo-tree-id801 . -1) (undo-tree-id802 . -1) (undo-tree-id803 . -1) (undo-tree-id804 . -1) (undo-tree-id805 . -1) (undo-tree-id806 . -1) (undo-tree-id807 . -1) (undo-tree-id808 . -1) (undo-tree-id809 . -1) (undo-tree-id810 . -1) (undo-tree-id811 . -1) (undo-tree-id812 . -1) (undo-tree-id813 . -1) (undo-tree-id814 . -1) (undo-tree-id815 . -1) (undo-tree-id816 . -1) (undo-tree-id817 . -1) (undo-tree-id818 . -1) (undo-tree-id819 . -1) (undo-tree-id820 . -1) (undo-tree-id821 . -1) (undo-tree-id822 . -1) (undo-tree-id823 . -1) (undo-tree-id824 . -1) (undo-tree-id825 . -1) (undo-tree-id826 . -1) (undo-tree-id827 . -1) (undo-tree-id828 . -1) (undo-tree-id829 . -1) (undo-tree-id830 . -1) (undo-tree-id831 . -1) (undo-tree-id832 . -1) (undo-tree-id833 . -1) (undo-tree-id834 . -1) (undo-tree-id835 . -1) (undo-tree-id836 . -1) (undo-tree-id837 . -1) (undo-tree-id838 . -1) (undo-tree-id839 . -1) (undo-tree-id840 . -1) (undo-tree-id841 . -1) (undo-tree-id842 . -1) (undo-tree-id843 . -1) 1222) nil (25919 56263 851381 346000) 0 nil])
([nil nil ((881 . 890) (t 25919 56263 848565 507000)) nil (25919 56552 248335 292000) 0 nil])
([nil nil ((899 . 900)) nil (25919 56552 248334 737000) 0 nil])
([nil nil ((809 . 810)) nil (25919 56552 248334 336000) 0 nil])
([nil nil ((811 . 820)) nil (25919 56552 248333 904000) 0 nil])
([nil nil ((820 . 824)) nil (25919 56552 248333 503000) 0 nil])
([nil nil ((834 . 843)) nil (25919 56552 248333 25000) 0 nil])
([nil nil ((843 . 852)) nil (25919 56552 248332 540000) 0 nil])
([nil nil ((850 . 859) (#("av" 0 2 (fontified nil)) . -850) (850 . 852) (#("available" 0 9 (fontified nil)) . -850) (850 . 859) (#("av" 0 2 (fontified t)) . -850) (undo-tree-id2455 . -2) (undo-tree-id2456 . -2) 852) nil (25919 56552 248331 763000) 0 nil])
([nil nil ((859 . 865)) nil (25919 56552 248329 342000) 0 nil])
([nil nil ((865 . 866)) nil (25919 56552 248328 841000) 0 nil])
([nil nil ((867 . 879) (#("        " 0 8 (fontified t)) . 867) 898) nil (25919 56552 248328 260000) 0 nil])
([nil nil ((906 . 918) (#("        " 0 8 (match-data (0 2 0 1 1 2) fontified t)) . 906) 941) nil (25919 56552 248327 546000) 0 nil])
([nil nil ((954 . 967)) nil (25919 56552 248326 933000) 0 nil])
([nil nil ((#("    " 0 4 (match-data (0 1 0 1) fontified t)) . 963) (undo-tree-id2453 . -4) (undo-tree-id2454 . -4) 967) nil (25919 56552 248326 384000) 0 nil])
([nil nil ((963 . 967)) nil (25919 56552 248324 803000) 0 nil])
([nil nil ((967 . 968)) nil (25919 56552 248324 391000) 0 nil])
([nil nil ((968 . 981)) nil (25919 56552 248323 968000) 0 nil])
([nil nil ((981 . 987)) nil (25919 56552 248323 513000) 0 nil])
([nil nil ((986 . 995) (#("p" 0 1 (fontified nil)) . -986) (986 . 987) (#("player_id" 0 9 (fontified nil)) . -986) (986 . 995) (#("p" 0 1 (match-data (0 1 0 1) fontified t)) . -986) (undo-tree-id2451 . -1) (undo-tree-id2452 . -1) 987) nil (25919 56552 248322 570000) 0 nil])
([nil nil ((995 . 1003)) nil (25919 56552 248320 752000) 0 nil])
([nil nil ((#("F" 0 1 (match-data (0 1 0 1) fontified t)) . -998) (undo-tree-id2388 . -1) (undo-tree-id2389 . -1) (undo-tree-id2390 . -1) (undo-tree-id2391 . -1) (undo-tree-id2392 . -1) (undo-tree-id2393 . -1) (undo-tree-id2394 . -1) (undo-tree-id2395 . -1) (undo-tree-id2396 . -1) (undo-tree-id2397 . -1) (undo-tree-id2398 . -1) (undo-tree-id2399 . -1) (undo-tree-id2400 . -1) (undo-tree-id2401 . -1) (undo-tree-id2402 . -1) (undo-tree-id2403 . -1) (undo-tree-id2404 . -1) (undo-tree-id2405 . -1) (undo-tree-id2406 . -1) (#("a" 0 1 (match-data (0 1 0 1) fontified t)) . -999) (undo-tree-id2407 . -1) (undo-tree-id2408 . -1) (undo-tree-id2409 . -1) (undo-tree-id2410 . -1) (undo-tree-id2411 . -1) (undo-tree-id2412 . -1) (undo-tree-id2413 . -1) (undo-tree-id2414 . -1) (undo-tree-id2415 . -1) (undo-tree-id2416 . -1) (undo-tree-id2417 . -1) (undo-tree-id2418 . -1) (undo-tree-id2419 . -1) (undo-tree-id2420 . -1) (undo-tree-id2421 . -1) (undo-tree-id2422 . -1) (#("l" 0 1 (match-data (0 1 0 1) fontified t)) . -1000) (undo-tree-id2423 . -1) (undo-tree-id2424 . -1) (undo-tree-id2425 . -1) (undo-tree-id2426 . -1) (undo-tree-id2427 . -1) (undo-tree-id2428 . -1) (undo-tree-id2429 . -1) (undo-tree-id2430 . -1) (undo-tree-id2431 . -1) (undo-tree-id2432 . -1) (undo-tree-id2433 . -1) (undo-tree-id2434 . -1) (#("s" 0 1 (match-data (0 1 0 1) fontified t)) . -1001) (undo-tree-id2435 . -1) (undo-tree-id2436 . -1) (undo-tree-id2437 . -1) (undo-tree-id2438 . -1) (undo-tree-id2439 . -1) (undo-tree-id2440 . -1) (undo-tree-id2441 . -1) (undo-tree-id2442 . -1) (undo-tree-id2443 . -1) (#("e" 0 1 (match-data (0 1 0 1) fontified t face py-pseudo-keyword-face)) . -1002) (undo-tree-id2444 . -1) (undo-tree-id2445 . -1) (undo-tree-id2446 . -1) (undo-tree-id2447 . -1) (undo-tree-id2448 . -1) (undo-tree-id2449 . -1) (undo-tree-id2450 . -1) 1003) nil (25919 56552 248317 254000) 0 nil])
([nil nil ((998 . 1002)) nil (25919 56552 248283 784000) 0 nil])
([nil nil ((#("N" 0 1 (match-data (0 1 0 1) fontified t)) . -998) (undo-tree-id2310 . -1) (undo-tree-id2311 . -1) (undo-tree-id2312 . -1) (undo-tree-id2313 . -1) (undo-tree-id2314 . -1) (undo-tree-id2315 . -1) (undo-tree-id2316 . -1) (undo-tree-id2317 . -1) (undo-tree-id2318 . -1) (undo-tree-id2319 . -1) (undo-tree-id2320 . -1) (undo-tree-id2321 . -1) (undo-tree-id2322 . -1) (undo-tree-id2323 . -1) (undo-tree-id2324 . -1) (undo-tree-id2325 . -1) (undo-tree-id2326 . -1) (undo-tree-id2327 . -1) (undo-tree-id2328 . -1) (undo-tree-id2329 . -1) (undo-tree-id2330 . -1) (undo-tree-id2331 . -1) (undo-tree-id2332 . -1) (undo-tree-id2333 . -1) (undo-tree-id2334 . -1) (undo-tree-id2335 . -1) (#("u" 0 1 (match-data (0 1 0 1) fontified t)) . -999) (undo-tree-id2336 . -1) (undo-tree-id2337 . -1) (undo-tree-id2338 . -1) (undo-tree-id2339 . -1) (undo-tree-id2340 . -1) (undo-tree-id2341 . -1) (undo-tree-id2342 . -1) (undo-tree-id2343 . -1) (undo-tree-id2344 . -1) (undo-tree-id2345 . -1) (undo-tree-id2346 . -1) (undo-tree-id2347 . -1) (undo-tree-id2348 . -1) (undo-tree-id2349 . -1) (undo-tree-id2350 . -1) (undo-tree-id2351 . -1) (undo-tree-id2352 . -1) (undo-tree-id2353 . -1) (undo-tree-id2354 . -1) (undo-tree-id2355 . -1) (undo-tree-id2356 . -1) (undo-tree-id2357 . -1) (undo-tree-id2358 . -1) (#("l" 0 1 (match-data (0 1 0 1) fontified t)) . -1000) (undo-tree-id2359 . -1) (undo-tree-id2360 . -1) (undo-tree-id2361 . -1) (undo-tree-id2362 . -1) (undo-tree-id2363 . -1) (undo-tree-id2364 . -1) (undo-tree-id2365 . -1) (undo-tree-id2366 . -1) (undo-tree-id2367 . -1) (undo-tree-id2368 . -1) (undo-tree-id2369 . -1) (undo-tree-id2370 . -1) (undo-tree-id2371 . -1) (undo-tree-id2372 . -1) (undo-tree-id2373 . -1) (undo-tree-id2374 . -1) (undo-tree-id2375 . -1) (undo-tree-id2376 . -1) (undo-tree-id2377 . -1) (#("l" 0 1 (match-data (0 1 0 1) fontified t)) . -1001) (undo-tree-id2378 . -1) (undo-tree-id2379 . -1) (undo-tree-id2380 . -1) (undo-tree-id2381 . -1) (undo-tree-id2382 . -1) (undo-tree-id2383 . -1) (undo-tree-id2384 . -1) (undo-tree-id2385 . -1) (undo-tree-id2386 . -1) (undo-tree-id2387 . -1) 1002) nil (25919 56552 248281 86000) 0 nil])
([nil nil ((998 . 1000)) nil (25919 56552 248253 755000) 0 nil])
([nil nil ((#("n" 0 1 (match-data (0 1 0 1) fontified t)) . -998) (undo-tree-id2291 . -1) (undo-tree-id2292 . -1) (undo-tree-id2293 . -1) (undo-tree-id2294 . -1) (undo-tree-id2295 . -1) (undo-tree-id2296 . -1) (undo-tree-id2297 . -1) (undo-tree-id2298 . -1) (undo-tree-id2299 . -1) (undo-tree-id2300 . -1) (undo-tree-id2301 . -1) (undo-tree-id2302 . -1) (#("u" 0 1 (match-data (0 1 0 1) fontified t)) . -999) (undo-tree-id2303 . -1) (undo-tree-id2304 . -1) (undo-tree-id2305 . -1) (undo-tree-id2306 . -1) (undo-tree-id2307 . -1) (undo-tree-id2308 . -1) (undo-tree-id2309 . -1) 1000) nil (25919 56552 248252 675000) 0 nil])
([nil nil ((#("            self.player_id = " 0 12 (match-data (0 1 0 1) fontified t) 12 16 (match-data (0 1 0 1) fontified t face py-object-reference-face) 16 17 (match-data (0 1 0 1) fontified t) 17 26 (match-data (0 1 0 1) fontified t face py-variable-name-face) 26 27 (match-data (0 1 0 1) fontified t) 27 28 (match-data (0 1 0 1) fontified t face font-lock-operator-face) 28 29 (match-data (0 1 0 1) fontified t)) . 969) (undo-tree-id2222 . -29) (undo-tree-id2223 . -29) (undo-tree-id2224 . -29) (undo-tree-id2225 . -29) (undo-tree-id2226 . -29) (undo-tree-id2227 . -29) (undo-tree-id2228 . -29) (undo-tree-id2229 . -29) (undo-tree-id2230 . -29) (undo-tree-id2231 . -29) (undo-tree-id2232 . -29) (undo-tree-id2233 . -29) (undo-tree-id2234 . -29) (undo-tree-id2235 . -29) (undo-tree-id2236 . -29) (undo-tree-id2237 . -29) (undo-tree-id2238 . -29) (undo-tree-id2239 . -29) (undo-tree-id2240 . -29) (undo-tree-id2241 . -29) (undo-tree-id2242 . -29) (undo-tree-id2243 . -29) (undo-tree-id2244 . -29) (undo-tree-id2245 . -29) (undo-tree-id2246 . -29) (undo-tree-id2247 . -29) (undo-tree-id2248 . -29) (undo-tree-id2249 . -29) (undo-tree-id2250 . -29) (undo-tree-id2251 . -29) (undo-tree-id2252 . -29) (undo-tree-id2253 . -29) (undo-tree-id2254 . -29) (undo-tree-id2255 . -29) (undo-tree-id2256 . -29) (undo-tree-id2257 . -29) (undo-tree-id2258 . -29) (undo-tree-id2259 . -29) (undo-tree-id2260 . -29) (undo-tree-id2261 . -29) (undo-tree-id2262 . -29) (undo-tree-id2263 . -29) (undo-tree-id2264 . -29) (undo-tree-id2265 . -29) (undo-tree-id2266 . -29) (undo-tree-id2267 . -29) (undo-tree-id2268 . -29) (undo-tree-id2269 . -29) (undo-tree-id2270 . -29) (undo-tree-id2271 . -29) (undo-tree-id2272 . -29) (undo-tree-id2273 . -29) (undo-tree-id2274 . -29) (undo-tree-id2275 . -29) (undo-tree-id2276 . -29) (undo-tree-id2277 . -29) (undo-tree-id2278 . -29) (undo-tree-id2279 . -29) (undo-tree-id2280 . -29) (undo-tree-id2281 . -29) (undo-tree-id2282 . -29) (undo-tree-id2283 . -29) (undo-tree-id2284 . -29) (undo-tree-id2285 . -29) (undo-tree-id2286 . -29) (undo-tree-id2287 . -29) (undo-tree-id2288 . -29) (undo-tree-id2289 . -29) (undo-tree-id2290 . -29)) nil (25919 56552 248242 764000) 0 nil])
([nil nil ((969 . 981)) nil (25919 56552 248217 343000) 0 nil])
([nil nil ((#("    " 0 4 (match-data (0 1 0 1) fontified t)) . 977) (undo-tree-id2207 . -4) (undo-tree-id2208 . -4) (undo-tree-id2209 . -4) (undo-tree-id2210 . -4) (undo-tree-id2211 . -4) (undo-tree-id2212 . -4) (undo-tree-id2213 . -4) (undo-tree-id2214 . -4) (undo-tree-id2215 . -4) (undo-tree-id2216 . -4) (undo-tree-id2217 . -4) (undo-tree-id2218 . -4) (undo-tree-id2219 . -4) (undo-tree-id2220 . -4) (undo-tree-id2221 . -4) 981) nil (25919 56552 248216 428000) 0 nil])
([nil nil ((#("    " 0 4 (match-data (0 1 0 1) fontified t)) . 973) (undo-tree-id2188 . -4) (undo-tree-id2189 . -4) (undo-tree-id2190 . -4) (undo-tree-id2191 . -4) (undo-tree-id2192 . -4) (undo-tree-id2193 . -4) (undo-tree-id2194 . -4) (undo-tree-id2195 . -4) (undo-tree-id2196 . -4) (undo-tree-id2197 . -4) (undo-tree-id2198 . -4) (undo-tree-id2199 . -4) (undo-tree-id2200 . -4) (undo-tree-id2201 . -4) (undo-tree-id2202 . -4) (undo-tree-id2203 . -4) (undo-tree-id2204 . -4) (undo-tree-id2205 . -4) (undo-tree-id2206 . -4) 977) nil (25919 56552 248210 318000) 0 nil])
([nil nil ((#("    " 0 4 (match-data (0 1 0 1) fontified t)) . -969) (undo-tree-id2165 . -4) (undo-tree-id2166 . -4) (undo-tree-id2167 . -4) (undo-tree-id2168 . -4) (undo-tree-id2169 . -4) (undo-tree-id2170 . -4) (undo-tree-id2171 . -4) (undo-tree-id2172 . -4) (undo-tree-id2173 . -4) (undo-tree-id2174 . -4) (undo-tree-id2175 . -4) (undo-tree-id2176 . -4) (undo-tree-id2177 . -4) (undo-tree-id2178 . -4) (undo-tree-id2179 . -4) (undo-tree-id2180 . -4) (undo-tree-id2181 . -4) (undo-tree-id2182 . -4) (undo-tree-id2183 . -4) (undo-tree-id2184 . -4) (undo-tree-id2185 . -4) (undo-tree-id2186 . -4) (undo-tree-id2187 . -4) 973) nil (25919 56552 248201 948000) 0 nil])
([nil nil ((#("
" 0 1 (match-data (0 1 0 1) fontified t)) . -968) (undo-tree-id2042 . -1) (undo-tree-id2043 . -1) (undo-tree-id2044 . -1) (undo-tree-id2045 . -1) (undo-tree-id2046 . -1) (undo-tree-id2047 . -1) (undo-tree-id2048 . -1) (undo-tree-id2049 . -1) (undo-tree-id2050 . -1) (undo-tree-id2051 . -1) (undo-tree-id2052 . -1) (undo-tree-id2053 . -1) (undo-tree-id2054 . -1) (undo-tree-id2055 . -1) (undo-tree-id2056 . -1) (undo-tree-id2057 . -1) (undo-tree-id2058 . -1) (undo-tree-id2059 . -1) (undo-tree-id2060 . -1) (undo-tree-id2061 . -1) (undo-tree-id2062 . -1) (undo-tree-id2063 . -1) (undo-tree-id2064 . -1) (undo-tree-id2065 . -1) (undo-tree-id2066 . -1) (undo-tree-id2067 . -1) (undo-tree-id2068 . -1) (undo-tree-id2069 . -1) (undo-tree-id2070 . -1) (undo-tree-id2071 . -1) (undo-tree-id2072 . -1) (undo-tree-id2073 . -1) (undo-tree-id2074 . -1) (undo-tree-id2075 . -1) (undo-tree-id2076 . -1) (undo-tree-id2077 . -1) (undo-tree-id2078 . -1) (undo-tree-id2079 . -1) (undo-tree-id2080 . -1) (undo-tree-id2081 . -1) (undo-tree-id2082 . -1) (undo-tree-id2083 . -1) (undo-tree-id2084 . -1) (undo-tree-id2085 . -1) (undo-tree-id2086 . -1) (undo-tree-id2087 . -1) (undo-tree-id2088 . -1) (undo-tree-id2089 . -1) (undo-tree-id2090 . -1) (undo-tree-id2091 . -1) (undo-tree-id2092 . -1) (undo-tree-id2093 . -1) (undo-tree-id2094 . -1) (undo-tree-id2095 . -1) (undo-tree-id2096 . -1) (undo-tree-id2097 . -1) (undo-tree-id2098 . -1) (undo-tree-id2099 . -1) (undo-tree-id2100 . -1) (undo-tree-id2101 . -1) (undo-tree-id2102 . -1) (undo-tree-id2103 . -1) (undo-tree-id2104 . -1) (undo-tree-id2105 . -1) (undo-tree-id2106 . -1) (undo-tree-id2107 . -1) (undo-tree-id2108 . -1) (undo-tree-id2109 . -1) (undo-tree-id2110 . -1) (undo-tree-id2111 . -1) (undo-tree-id2112 . -1) (undo-tree-id2113 . -1) (undo-tree-id2114 . -1) (undo-tree-id2115 . -1) (undo-tree-id2116 . -1) (undo-tree-id2117 . -1) (undo-tree-id2118 . -1) (undo-tree-id2119 . -1) (undo-tree-id2120 . -1) (undo-tree-id2121 . -1) (undo-tree-id2122 . -1) (undo-tree-id2123 . -1) (undo-tree-id2124 . -1) (undo-tree-id2125 . -1) (undo-tree-id2126 . -1) (undo-tree-id2127 . -1) (undo-tree-id2128 . -1) (undo-tree-id2129 . -1) (undo-tree-id2130 . -1) (undo-tree-id2131 . -1) (undo-tree-id2132 . -1) (undo-tree-id2133 . -1) (undo-tree-id2134 . -1) (undo-tree-id2135 . -1) (undo-tree-id2136 . -1) (undo-tree-id2137 . -1) (undo-tree-id2138 . -1) (undo-tree-id2139 . -1) (undo-tree-id2140 . -1) (undo-tree-id2141 . -1) (undo-tree-id2142 . -1) (undo-tree-id2143 . -1) (undo-tree-id2144 . -1) (undo-tree-id2145 . -1) (undo-tree-id2146 . -1) (undo-tree-id2147 . -1) (undo-tree-id2148 . -1) (undo-tree-id2149 . -1) (undo-tree-id2150 . -1) (undo-tree-id2151 . -1) (undo-tree-id2152 . -1) (undo-tree-id2153 . -1) (undo-tree-id2154 . -1) (undo-tree-id2155 . -1) (undo-tree-id2156 . -1) (undo-tree-id2157 . -1) (undo-tree-id2158 . -1) (undo-tree-id2159 . -1) (undo-tree-id2160 . -1) (undo-tree-id2161 . -1) (undo-tree-id2162 . -1) (undo-tree-id2163 . -1) (undo-tree-id2164 . -1) 969) nil (25919 56552 248189 104000) 0 nil])
([nil nil ((#("        else:" 0 8 (match-data (0 1 0 1) fontified t) 8 12 (match-data (0 1 0 1) fontified t face font-lock-keyword-face) 12 13 (match-data (0 1 0 1) fontified t)) . 955) (undo-tree-id1907 . -13) (undo-tree-id1908 . -13) (undo-tree-id1909 . -13) (undo-tree-id1910 . -13) (undo-tree-id1911 . -13) (undo-tree-id1912 . -13) (undo-tree-id1913 . -13) (undo-tree-id1914 . -13) (undo-tree-id1915 . -13) (undo-tree-id1916 . -13) (undo-tree-id1917 . -13) (undo-tree-id1918 . -13) (undo-tree-id1919 . -13) (undo-tree-id1920 . -13) (undo-tree-id1921 . -13) (undo-tree-id1922 . -13) (undo-tree-id1923 . -13) (undo-tree-id1924 . -13) (undo-tree-id1925 . -13) (undo-tree-id1926 . -13) (undo-tree-id1927 . -13) (undo-tree-id1928 . -13) (undo-tree-id1929 . -13) (undo-tree-id1930 . -13) (undo-tree-id1931 . -13) (undo-tree-id1932 . -13) (undo-tree-id1933 . -13) (undo-tree-id1934 . -13) (undo-tree-id1935 . -13) (undo-tree-id1936 . -13) (undo-tree-id1937 . -13) (undo-tree-id1938 . -13) (undo-tree-id1939 . -13) (undo-tree-id1940 . -13) (undo-tree-id1941 . -13) (undo-tree-id1942 . -13) (undo-tree-id1943 . -13) (undo-tree-id1944 . -13) (undo-tree-id1945 . -13) (undo-tree-id1946 . -13) (undo-tree-id1947 . -13) (undo-tree-id1948 . -13) (undo-tree-id1949 . -13) (undo-tree-id1950 . -13) (undo-tree-id1951 . -13) (undo-tree-id1952 . -13) (undo-tree-id1953 . -13) (undo-tree-id1954 . -13) (undo-tree-id1955 . -13) (undo-tree-id1956 . -13) (undo-tree-id1957 . -13) (undo-tree-id1958 . -13) (undo-tree-id1959 . -13) (undo-tree-id1960 . -13) (undo-tree-id1961 . -13) (undo-tree-id1962 . -13) (undo-tree-id1963 . -13) (undo-tree-id1964 . -13) (undo-tree-id1965 . -13) (undo-tree-id1966 . -13) (undo-tree-id1967 . -13) (undo-tree-id1968 . -13) (undo-tree-id1969 . -13) (undo-tree-id1970 . -13) (undo-tree-id1971 . -13) (undo-tree-id1972 . -13) (undo-tree-id1973 . -13) (undo-tree-id1974 . -13) (undo-tree-id1975 . -13) (undo-tree-id1976 . -13) (undo-tree-id1977 . -13) (undo-tree-id1978 . -13) (undo-tree-id1979 . -13) (undo-tree-id1980 . -13) (undo-tree-id1981 . -13) (undo-tree-id1982 . -13) (undo-tree-id1983 . -13) (undo-tree-id1984 . -13) (undo-tree-id1985 . -13) (undo-tree-id1986 . -13) (undo-tree-id1987 . -13) (undo-tree-id1988 . -13) (undo-tree-id1989 . -13) (undo-tree-id1990 . -13) (undo-tree-id1991 . -13) (undo-tree-id1992 . -13) (undo-tree-id1993 . -13) (undo-tree-id1994 . -13) (undo-tree-id1995 . -13) (undo-tree-id1996 . -13) (undo-tree-id1997 . -13) (undo-tree-id1998 . -13) (undo-tree-id1999 . -13) (undo-tree-id2000 . -13) (undo-tree-id2001 . -13) (undo-tree-id2002 . -13) (undo-tree-id2003 . -13) (undo-tree-id2004 . -13) (undo-tree-id2005 . -13) (undo-tree-id2006 . -13) (undo-tree-id2007 . -13) (undo-tree-id2008 . -13) (undo-tree-id2009 . -13) (undo-tree-id2010 . -13) (undo-tree-id2011 . -13) (undo-tree-id2012 . -13) (undo-tree-id2013 . -13) (undo-tree-id2014 . -13) (undo-tree-id2015 . -13) (undo-tree-id2016 . -13) (undo-tree-id2017 . -13) (undo-tree-id2018 . -13) (undo-tree-id2019 . -13) (undo-tree-id2020 . -13) (undo-tree-id2021 . -13) (undo-tree-id2022 . -13) (undo-tree-id2023 . -13) (undo-tree-id2024 . -13) (undo-tree-id2025 . -13) (undo-tree-id2026 . -13) (undo-tree-id2027 . -13) (undo-tree-id2028 . -13) (undo-tree-id2029 . -13) (undo-tree-id2030 . -13) (undo-tree-id2031 . -13) (undo-tree-id2032 . -13) (undo-tree-id2033 . -13) (undo-tree-id2034 . -13) (undo-tree-id2035 . -13) (undo-tree-id2036 . -13) (undo-tree-id2037 . -13) (undo-tree-id2038 . -13) (undo-tree-id2039 . -13) (undo-tree-id2040 . -13) (undo-tree-id2041 . -13)) nil (25919 56552 246137 105000) 0 nil])
([nil nil ((1857 . 1865) (t 25919 56552 248488 535000)) nil (25919 56755 260227 771000) 0 nil])
([nil nil ((1347 . 1356) (t 25919 56755 258445 516000)) nil (25919 56770 721350 440000) 0 nil])
([nil nil ((1356 . 1367)) nil (25919 56770 721346 768000) 0 nil])
([nil nil ((1899 . 1912) (t 25919 56770 718442 130000)) nil (25919 56838 675960 319000) 0 nil])
([nil nil ((#(".append" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t) 1 7 (match-data (0 2 0 1 1 2) fontified t)) . -2036) (undo-tree-id2563 . -7) (undo-tree-id2564 . -7) (undo-tree-id2565 . -1) (undo-tree-id2566 . -2) (undo-tree-id2567 . -3) (undo-tree-id2568 . -4) (undo-tree-id2569 . -5) (undo-tree-id2570 . -5) (undo-tree-id2571 . -5) (undo-tree-id2572 . -6) (undo-tree-id2573 . -6) (undo-tree-id2574 . -6) (undo-tree-id2575 . -7) (undo-tree-id2576 . -7) (undo-tree-id2577 . -7) (undo-tree-id2578 . -7) (undo-tree-id2579 . -7) (undo-tree-id2580 . -7) (undo-tree-id2581 . -7) (undo-tree-id2582 . -7) (undo-tree-id2583 . -7) (undo-tree-id2584 . -7) (undo-tree-id2585 . -1) (undo-tree-id2586 . -7) (undo-tree-id2587 . -7) 2043) nil (25919 56838 675958 937000) 0 nil])
([nil nil ((2036 . 2041)) nil (25919 56838 675947 706000) 0 nil])
([nil nil ((2041 . 2042)) nil (25919 56838 675947 123000) 0 nil])
([nil nil ((#("(" 0 1 (match-data (0 2 0 1 1 2) fontified t face (rainbow-delimiters-depth-1-face))) . 2042) (undo-tree-id2562 . 1)) nil (25919 56838 675946 437000) 0 nil])
([nil nil ((#(")" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face (rainbow-delimiters-unmatched-face))) . -2049) (undo-tree-id2548 . -1) (undo-tree-id2549 . -1) (undo-tree-id2550 . -1) (undo-tree-id2551 . -1) (undo-tree-id2552 . -1) (undo-tree-id2553 . -1) (undo-tree-id2554 . -1) (undo-tree-id2555 . -1) (undo-tree-id2556 . -1) (undo-tree-id2557 . -1) (undo-tree-id2558 . -1) (undo-tree-id2559 . -1) (undo-tree-id2560 . -1) (undo-tree-id2561 . -1) 2050) nil (25919 56838 675944 958000) 0 nil])
([nil nil ((#(".reverse()" 0 8 (fontified t) 8 9 (fontified t face (rainbow-delimiters-depth-1-face)) 9 10 (fontified t face (rainbow-delimiters-depth-1-face))) . -2094) (undo-tree-id2463 . -10) (undo-tree-id2464 . -10) (undo-tree-id2465 . -6) (undo-tree-id2466 . -6) (undo-tree-id2467 . -6) (undo-tree-id2468 . -6) (undo-tree-id2469 . -6) (undo-tree-id2470 . -6) (undo-tree-id2471 . -6) (undo-tree-id2472 . -6) (undo-tree-id2473 . -6) (undo-tree-id2474 . -6) (undo-tree-id2475 . -6) (undo-tree-id2476 . -6) (undo-tree-id2477 . -6) (undo-tree-id2478 . -6) (undo-tree-id2479 . -6) (undo-tree-id2480 . -6) (undo-tree-id2481 . -6) (undo-tree-id2482 . -6) (undo-tree-id2483 . -6) (undo-tree-id2484 . -6) (undo-tree-id2485 . -6) (undo-tree-id2486 . -6) (undo-tree-id2487 . -6) (undo-tree-id2488 . -6) (undo-tree-id2489 . -6) (undo-tree-id2490 . -6) (undo-tree-id2491 . -6) (undo-tree-id2492 . -6) (undo-tree-id2493 . -6) (undo-tree-id2494 . -10) (undo-tree-id2495 . -10) (undo-tree-id2496 . -10) (undo-tree-id2497 . -10) (undo-tree-id2498 . -10) (undo-tree-id2499 . -10) (undo-tree-id2500 . -10) (undo-tree-id2501 . -10) (undo-tree-id2502 . -10) (undo-tree-id2503 . -10) (undo-tree-id2504 . -10) (undo-tree-id2505 . -10) (undo-tree-id2506 . -10) (undo-tree-id2507 . -10) (undo-tree-id2508 . -10) (undo-tree-id2509 . -10) (undo-tree-id2510 . -10) (undo-tree-id2511 . -10) (undo-tree-id2512 . -10) (undo-tree-id2513 . -10) (undo-tree-id2514 . -1) (undo-tree-id2515 . -2) (undo-tree-id2516 . -3) (undo-tree-id2517 . -10) (undo-tree-id2518 . -10) (undo-tree-id2519 . -10) (undo-tree-id2520 . -10) (undo-tree-id2521 . -10) (undo-tree-id2522 . -10) (undo-tree-id2523 . -10) (undo-tree-id2524 . -10) (undo-tree-id2525 . -10) (undo-tree-id2526 . -10) (undo-tree-id2527 . -10) (undo-tree-id2528 . -10) (undo-tree-id2529 . -10) (undo-tree-id2530 . -10) (undo-tree-id2531 . -10) (undo-tree-id2532 . -10) (undo-tree-id2533 . -1) (undo-tree-id2534 . -2) (undo-tree-id2535 . -3) (undo-tree-id2536 . -5) (undo-tree-id2537 . -7) (undo-tree-id2538 . -9) (undo-tree-id2539 . -10) (undo-tree-id2540 . -10) (undo-tree-id2541 . -10) (undo-tree-id2542 . -10) (undo-tree-id2543 . -10) (undo-tree-id2544 . -10) (undo-tree-id2545 . -10) (undo-tree-id2546 . -10) (undo-tree-id2547 . -10) 2104) nil (25919 56838 675936 901000) 0 nil])
([nil nil ((2078 . 2084)) nil (25919 56838 675901 199000) 0 nil])
([nil nil ((#("e" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -2083) (undo-tree-id2457 . -1) (undo-tree-id2458 . -1) (undo-tree-id2459 . -1) (undo-tree-id2460 . -1) (undo-tree-id2461 . -1) (undo-tree-id2462 . -1) 2084) nil (25919 56838 675899 171000) 0 nil])
([nil nil ((2083 . 2092)) nil (25919 56838 675883 604000) 0 nil])
([nil nil ((#("0,0,0,0,0,0,0" 0 1 (fontified t face py-number-face) 1 2 (fontified t) 2 3 (fontified t face py-number-face) 3 4 (fontified t) 4 5 (fontified t face py-number-face) 5 6 (fontified t) 6 7 (fontified t face py-number-face) 7 8 (fontified t) 8 9 (fontified t face py-number-face) 9 10 (fontified t) 10 11 (fontified t face py-number-face) 11 12 (fontified t) 12 13 (fontified t face py-number-face)) . 1899) (undo-tree-id2588 . -13) (undo-tree-id2589 . -13) (undo-tree-id2590 . -13) (undo-tree-id2591 . -13) (undo-tree-id2592 . -13) (undo-tree-id2593 . -13) (undo-tree-id2594 . -12) (undo-tree-id2595 . -11) (undo-tree-id2596 . -10) (undo-tree-id2597 . -9) (undo-tree-id2598 . -8) (undo-tree-id2599 . -8) (undo-tree-id2600 . -8) (undo-tree-id2601 . -7) (undo-tree-id2602 . -6) (undo-tree-id2603 . -4) (undo-tree-id2604 . -2) (undo-tree-id2605 . -1) (undo-tree-id2606 . -1) (undo-tree-id2607 . -1) (undo-tree-id2608 . -13) (undo-tree-id2609 . -13) (t 25919 56838 678420 475000)) nil (25919 56845 541361 125000) 0 nil])
([nil nil ((#("[" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face (rainbow-delimiters-depth-1-face))) . -2023) (undo-tree-id2627 . -1) (undo-tree-id2628 . -1) (undo-tree-id2629 . -1) (undo-tree-id2630 . -1) (undo-tree-id2631 . -1) (undo-tree-id2632 . -1) (undo-tree-id2633 . -1) (undo-tree-id2634 . -1) (undo-tree-id2635 . -1) (undo-tree-id2636 . -1) (undo-tree-id2637 . -1) (undo-tree-id2638 . -1) (undo-tree-id2639 . -1) (undo-tree-id2640 . -1) (#("i" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . -2024) (undo-tree-id2641 . -1) (undo-tree-id2642 . -1) (undo-tree-id2643 . -1) (undo-tree-id2644 . -1) (undo-tree-id2645 . -1) (undo-tree-id2646 . -1) (undo-tree-id2647 . -1) (undo-tree-id2648 . -1) (undo-tree-id2649 . -1) (undo-tree-id2650 . -1) (undo-tree-id2651 . -1) (undo-tree-id2652 . -1) 2025 (t 25919 56845 538418 913000)) nil (25919 56858 761938 901000) 0 nil])
([nil nil ((#(" " 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . 2023) (#("=" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face font-lock-operator-face)) . 2023) (#(" " 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t)) . 2023) (#("]" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face (rainbow-delimiters-unmatched-face))) . 2023)) nil (25919 56858 761926 189000) 0 nil])
([nil nil ((2023 . 2024)) nil (25919 56858 761924 704000) 0 nil])
([nil nil ((2024 . 2031)) nil (25919 56858 761924 41000) 0 nil])
([nil nil ((#(")" 0 1 (match-data (0 3 0 1 1 2 2 3) fontified t face (rainbow-delimiters-unmatched-face))) . -2030) (undo-tree-id2610 . -1) (undo-tree-id2611 . -1) (undo-tree-id2612 . -1) (undo-tree-id2613 . -1) (undo-tree-id2614 . -1) (undo-tree-id2615 . -1) (undo-tree-id2616 . -1) (undo-tree-id2617 . -1) (undo-tree-id2618 . -1) (undo-tree-id2619 . -1) (undo-tree-id2620 . -1) (undo-tree-id2621 . -1) (undo-tree-id2622 . -1) (undo-tree-id2623 . -1) (undo-tree-id2624 . -1) (undo-tree-id2625 . -1) (undo-tree-id2626 . -1) 2031) nil (25919 56858 761922 191000) 0 nil])
([nil nil ((2030 . 2031)) nil (25919 56858 761903 482000) 0 nil])
([nil nil ((2038 . 2039)) nil (25919 56858 761898 523000) 0 nil])
([nil nil ((#("|" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . 1439) (t 25919 56858 758414 721000)) nil (25919 56877 667276 510000) 0 nil])
([nil nil ((#("|" 0 1 (match-data (0 1 0 1) fontified t face font-lock-string-face)) . 1491)) nil (25919 56877 667274 874000) 0 nil])
([nil nil ((1346 . 1347)) nil (25919 56877 667271 463000) 0 nil])
([nil nil ((#("        print(days)" 0 8 (match-data (0 1 0 1) fontified t) 8 13 (match-data (0 1 0 1) fontified t face py-builtins-face) 13 14 (match-data (0 1 0 1) fontified t face (rainbow-delimiters-depth-1-face)) 14 18 (match-data (0 1 0 1) fontified t) 18 19 (match-data (0 1 0 1) fontified t face (rainbow-delimiters-depth-1-face))) . 1349) (undo-tree-id2756 . -19) (undo-tree-id2757 . -19) (undo-tree-id2758 . -19) (undo-tree-id2759 . -19) (undo-tree-id2760 . -19) (undo-tree-id2761 . -19) (t 25919 56877 668408 773000)) nil (25919 56906 943784 841000) 0 nil])
([nil nil ((1349 . 1357)) nil (25919 56906 943782 222000) 0 nil])
([nil nil ((nil rear-nonsticky nil 1719 . 1720) (nil fontified nil 1719 . 1720) (nil fontified nil 1697 . 1719) (nil fontified nil 1695 . 1697) (nil fontified nil 1689 . 1695) (nil fontified nil 1679 . 1689) (nil fontified nil 1678 . 1679) (nil fontified nil 1674 . 1678) (nil fontified nil 1673 . 1674) (nil fontified nil 1665 . 1673) (nil fontified nil 1664 . 1665) (nil fontified nil 1661 . 1664) (nil fontified nil 1657 . 1661) (nil fontified nil 1656 . 1657) (nil fontified nil 1643 . 1656) (nil fontified nil 1642 . 1643) (nil fontified nil 1641 . 1642) (nil fontified nil 1640 . 1641) (nil fontified nil 1636 . 1640) (nil fontified nil 1635 . 1636) (nil fontified nil 1631 . 1635) (nil fontified nil 1623 . 1631) (nil fontified nil 1621 . 1623) (nil fontified nil 1620 . 1621) (nil fontified nil 1614 . 1620) (nil fontified nil 1610 . 1614) (nil fontified nil 1609 . 1610) (nil fontified nil 1601 . 1609) (nil fontified nil 1600 . 1601) (nil fontified nil 1597 . 1600) (nil fontified nil 1593 . 1597) (nil fontified nil 1592 . 1593) (nil fontified nil 1591 . 1592) (nil fontified nil 1590 . 1591) (nil fontified nil 1586 . 1590) (nil fontified nil 1579 . 1586) (nil fontified nil 1571 . 1579) (nil fontified nil 1561 . 1571) (nil fontified nil 1550 . 1561) (nil fontified nil 1549 . 1550) (nil fontified nil 1533 . 1549) (nil fontified nil 1532 . 1533) (nil fontified nil 1531 . 1532) (nil fontified nil 1521 . 1531) (nil fontified nil 1517 . 1521) (nil fontified nil 1516 . 1517) (nil fontified nil 1515 . 1516) (nil fontified nil 1510 . 1515) (nil fontified nil 1499 . 1510) (nil fontified nil 1498 . 1499) (nil fontified nil 1496 . 1498) (nil fontified nil 1495 . 1496) (nil fontified nil 1486 . 1495) (nil fontified nil 1485 . 1486) (nil fontified nil 1475 . 1485) (nil fontified nil 1474 . 1475) (nil fontified nil 1473 . 1474) (nil fontified nil 1469 . 1473) (nil fontified nil 1464 . 1469) (nil fontified nil 1463 . 1464) (nil fontified nil 1459 . 1463) (nil fontified nil 1435 . 1459) (nil fontified nil 1434 . 1435) (nil fontified nil 1424 . 1434) (nil fontified nil 1423 . 1424) (nil fontified nil 1422 . 1423) (nil fontified nil 1420 . 1422) (nil fontified nil 1410 . 1420) (nil fontified nil 1401 . 1410) (nil fontified nil 1400 . 1401) (nil fontified nil 1399 . 1400) (nil fontified nil 1398 . 1399) (nil fontified nil 1385 . 1398) (nil fontified nil 1379 . 1385) (nil fontified nil 1378 . 1379) (nil fontified nil 1370 . 1378) (nil fontified nil 1369 . 1370) (nil fontified nil 1363 . 1369) (nil fontified nil 1362 . 1363) (nil fontified nil 1357 . 1362) (1357 . 1720)) nil (25919 56906 943779 699000) 0 nil])
([nil nil ((#(" class Player(db.Model):
    __tablename__ = 'players'
    
    id = db.Column(db.Integer, primary_key=True)
    name = db.Column(db.String(80), nullable=False)
    characters = db.relationship('Character', backref='player', lazy=True)

    def __init__(self, name):
        self.name = name
        
    def __repr__(self):
        return f'<Player {self.name}>'" 0 1 (match-data (0 1 0 1) fontified t) 1 6 (fontified t face py-def-class-face) 6 7 (fontified t) 7 13 (fontified t face py-class-name-face) 13 14 (fontified t face (rainbow-delimiters-depth-1-face)) 14 22 (fontified t) 22 23 (fontified t face (rainbow-delimiters-depth-1-face)) 23 29 (fontified t) 29 42 (fontified t face py-variable-name-face) 42 43 (fontified t) 43 44 (fontified t face font-lock-operator-face) 44 45 (fontified t) 45 54 (fontified t face font-lock-string-face) 54 64 (fontified t) 64 66 (fontified t face py-builtins-face) 66 67 (fontified t) 67 68 (fontified t face font-lock-operator-face) 68 78 (fontified t) 78 79 (fontified t face (rainbow-delimiters-depth-1-face)) 79 103 (fontified t) 103 107 (fontified t face py-pseudo-keyword-face) 107 108 (fontified t face (rainbow-delimiters-depth-1-face)) 108 113 (fontified t) 113 117 (fontified t face py-variable-name-face) 117 118 (fontified t) 118 119 (fontified t face font-lock-operator-face) 119 129 (fontified t) 129 130 (fontified t face (rainbow-delimiters-depth-1-face)) 130 139 (fontified t) 139 140 (fontified t face (rainbow-delimiters-depth-2-face)) 140 142 (fontified t face py-number-face) 142 143 (fontified t face (rainbow-delimiters-depth-2-face)) 143 154 (fontified t) 154 159 (fontified t face py-pseudo-keyword-face) 159 160 (fontified t face (rainbow-delimiters-depth-1-face)) 160 161 (fontified t) 161 165 (fontified t) 165 175 (fontified t face py-variable-name-face) 175 176 (fontified t) 176 177 (fontified t face font-lock-operator-face) 177 193 (fontified t) 193 194 (fontified t face (rainbow-delimiters-depth-1-face)) 194 205 (fontified t face font-lock-string-face) 205 215 (fontified t) 215 223 (fontified t face font-lock-string-face) 223 230 (fontified t) 230 234 (fontified t face py-pseudo-keyword-face) 234 235 (fontified t face (rainbow-delimiters-depth-1-face)) 235 236 (fontified t) 236 237 (fontified t) 237 241 (fontified t) 241 244 (fontified t face py-def-class-face) 244 245 (fontified t) 245 253 (fontified t face py-def-face) 253 254 (fontified t face (rainbow-delimiters-depth-1-face)) 254 258 (fontified t face py-object-reference-face) 258 264 (fontified t) 264 265 (fontified t face (rainbow-delimiters-depth-1-face)) 265 267 (fontified t) 267 275 (fontified t) 275 279 (fontified t face py-object-reference-face) 279 280 (fontified t) 280 284 (fontified t face py-variable-name-face) 284 285 (fontified t) 285 286 (fontified t face font-lock-operator-face) 286 287 (fontified t) 287 300 (match-data (0 4 0 1 1 2 2 3 3 4) fontified t) 300 301 (fontified t) 301 305 (fontified t) 305 308 (fontified t face py-def-class-face) 308 309 (fontified t) 309 317 (fontified t face py-def-face) 317 318 (fontified t face (rainbow-delimiters-depth-1-face)) 318 322 (fontified t face py-object-reference-face) 322 323 (fontified t face (rainbow-delimiters-depth-1-face)) 323 333 (fontified t) 333 339 (fontified t face font-lock-keyword-face) 339 341 (fontified t) 341 363 (fontified t face font-lock-string-face)) . -1356) (undo-tree-id2711 . -363) (undo-tree-id2712 . -363) (undo-tree-id2713 . -1) (undo-tree-id2714 . -1) (undo-tree-id2715 . -1) (undo-tree-id2716 . -1) (undo-tree-id2717 . -1) (undo-tree-id2718 . -1) (undo-tree-id2719 . -1) (undo-tree-id2720 . -1) (undo-tree-id2721 . -1) (undo-tree-id2722 . -1) (undo-tree-id2723 . -7) (undo-tree-id2724 . -13) (undo-tree-id2725 . -29) (undo-tree-id2726 . -30) (undo-tree-id2727 . -1) (undo-tree-id2728 . -2) (undo-tree-id2729 . -3) (undo-tree-id2730 . -36) (undo-tree-id2731 . -37) (undo-tree-id2732 . -38) (undo-tree-id2733 . -59) (undo-tree-id2734 . -78) (undo-tree-id2735 . -79) (undo-tree-id2736 . -129) (undo-tree-id2737 . -131) (undo-tree-id2738 . -184) (undo-tree-id2739 . -185) (undo-tree-id2740 . -236) (undo-tree-id2741 . -266) (undo-tree-id2742 . -291) (undo-tree-id2743 . -300) (undo-tree-id2744 . -324) (undo-tree-id2745 . -363) (undo-tree-id2746 . -363) (undo-tree-id2747 . -363) (undo-tree-id2748 . -1) (undo-tree-id2749 . -363) (undo-tree-id2750 . -363) (undo-tree-id2751 . -363) (undo-tree-id2752 . -363) (undo-tree-id2753 . -363) (undo-tree-id2754 . -325) (undo-tree-id2755 . -363) 1719) nil (25919 56906 943771 664000) 0 nil])
([nil nil ((#(" " 0 1 (match-data (0 1 0 1) fontified t)) . 1356) (#(" " 0 1 (match-data (0 1 0 1) fontified t)) . 1356) (#(" " 0 1 (match-data (0 1 0 1) fontified t)) . 1356) (#(" " 0 1 (match-data (0 1 0 1) fontified t)) . 1356) (#(" " 0 1 (match-data (0 1 0 1) fontified t)) . 1356) (#(" " 0 1 (match-data (0 1 0 1) fontified t)) . 1356) (#(" " 0 1 (match-data (0 1 0 1) fontified t)) . 1356) (#("
" 0 1 (match-data (0 1 0 1) fontified t)) . 1356) (#("
" 0 1 (fontified t rear-nonsticky t)) . 1356) (undo-tree-id2695 . -1) (undo-tree-id2696 . -1) (undo-tree-id2697 . -1) (undo-tree-id2698 . -1) (undo-tree-id2699 . -1) (undo-tree-id2700 . -1) (undo-tree-id2701 . -1) (undo-tree-id2702 . -1) (undo-tree-id2703 . -1) (undo-tree-id2704 . -1) (undo-tree-id2705 . -1) (undo-tree-id2706 . -1) (undo-tree-id2707 . -1) (undo-tree-id2708 . -1) (undo-tree-id2709 . -1) (undo-tree-id2710 . -1)) nil (25919 56906 943749 725000) 0 nil])
([nil nil ((1348 . 1357)) nil (25919 56906 943742 347000) 0 nil])
([nil nil ((#("        " 0 8 (match-data (0 1 0 1) fontified t)) . 1349) (undo-tree-id2683 . -8) (undo-tree-id2684 . -8) (undo-tree-id2685 . -8) (undo-tree-id2686 . -8) (undo-tree-id2687 . -8) (undo-tree-id2688 . -8) (undo-tree-id2689 . -8) (undo-tree-id2690 . -8) (undo-tree-id2691 . -8) (undo-tree-id2692 . -8) (undo-tree-id2693 . -8) (undo-tree-id2694 . -8)) nil (25919 56906 943741 458000) 0 nil])
([nil nil ((#("
" 0 1 (match-data (0 1 0 1) fontified t)) . -1348) (undo-tree-id2653 . -1) (undo-tree-id2654 . -1) (undo-tree-id2655 . -1) (undo-tree-id2656 . -1) (undo-tree-id2657 . -1) (undo-tree-id2658 . -1) (undo-tree-id2659 . -1) (undo-tree-id2660 . -1) (undo-tree-id2661 . -1) (undo-tree-id2662 . -1) (undo-tree-id2663 . -1) (undo-tree-id2664 . -1) (undo-tree-id2665 . -1) (undo-tree-id2666 . -1) (undo-tree-id2667 . -1) (undo-tree-id2668 . -1) (undo-tree-id2669 . -1) (undo-tree-id2670 . -1) (undo-tree-id2671 . -1) (undo-tree-id2672 . -1) (undo-tree-id2673 . -1) (undo-tree-id2674 . -1) (undo-tree-id2675 . -1) (undo-tree-id2676 . -1) (undo-tree-id2677 . -1) (undo-tree-id2678 . -1) (undo-tree-id2679 . -1) (undo-tree-id2680 . -1) (undo-tree-id2681 . -1) (undo-tree-id2682 . -1) 1349) nil (25919 56906 943735 430000) 0 nil])
([nil nil ((1502 . 1511)) nil (25919 56906 943713 863000) 0 nil])
([nil current ((1511 . 1522)) nil (25919 56906 943709 336000) 0 nil])
nil
